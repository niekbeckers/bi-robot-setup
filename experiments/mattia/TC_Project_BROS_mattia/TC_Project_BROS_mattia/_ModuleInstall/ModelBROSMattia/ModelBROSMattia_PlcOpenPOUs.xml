<?xml version="1.0" encoding="utf-8"?>
<!-- Beckhoff Automation GmbH & Co. KG -->
<!-- TwinCAT Target for MATLAB/Simulink 1.2.1228.0-->
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="Beckhoff Automation GmbH &amp; Co. KG" companyURL="www.beckhoff.com" productName="TwinCAT 3 Function - TE1400" productVersion="1.2.1228" creationDateTime="2017-05-30T10:34:49" />
  <contentHeader name="TC3_TE1400_GeneratedModule_ModelBROSMattia_FB">
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation />
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes>
      <dataType name="E_TcMatSimDataAreaType">
        <baseType>
          <enum>
            <values>
              <value name="NotSpecified" value="0"/>
              <value name="Standard"/>
              <value name="InputSrc"/>
              <value name="InputDst"/>
              <value name="OutputSrc"/>
              <value name="OutputDst"/>
              <value name="InternalDa"/>
              <value name="MArea"/>
              <value name="RetainDa"/>
            </values>
          </enum>
        </baseType>
        <addData/>
      </dataType>
      <dataType name="ST_TcMatSimObjectDataAreaInfo">
        <baseType>
          <struct>
            <variable name="pPlcVar">
              <type>
                <derived name="PVOID"/>
              </type>
            </variable>
            <variable name="pModuleProcImg">
              <type>
                <derived name="PVOID"/>
              </type>
            </variable>
            <variable name="nSize">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="nDataAreaId">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="eDataAreaType">
              <type>
                <derived name="E_TcMatSimDataAreaType"/>
              </type>
            </variable>
          </struct>
        </baseType>
        <addData/>
      </dataType>
      <dataType name="ST_ModelBROSMattia_InitData">
        <baseType>
          <struct>
            	<variable name="Header">
		<type>
			<derived name="TComInitDataHdr" />
		</type>
	</variable>
<variable name="CallByHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="CallBy">
	<type>
		<derived name="TctModuleCallByType" />
	</type>
</variable>
<variable name="ExecutionSequenceHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="ExecutionSequence">
	<type>
		<derived name="TctModuleExecutionSequenceType" />
	</type>
</variable>
<variable name="StepSizeHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="StepSize">
	<type>
		<derived name="TctStepSizeType" />
	</type>
</variable>
<variable name="ExtendedFileAccessOIDHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="ExtendedFileAccessOID">
	<type>
		<derived name="OTCID" />
	</type>
</variable>
<variable name="ExtModeParametersHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="ExtModeParameters">
	<type>
		<derived name="TctExtModeParametersType" />
	</type>
</variable>
<variable name="ExecuteModelCodeHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="ExecuteModelCode">
	<type>
		<derived name="BOOL" />
	</type>
</variable>
<variable name="ModelParametersHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="ModelParameters">
	<type>
		<derived name="P_model_bros_mattia_T" />
	</type>
</variable>
<variable name="ContextInfoArr_0_TaskOidHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="ContextInfoArr_0_TaskOid">
	<type>
		<derived name="OTCID" />
	</type>
</variable>
<variable name="ContextInfoArr_0_TaskPriorityHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="ContextInfoArr_0_TaskPriority">
	<type>
		<derived name="UDINT" />
	</type>
</variable>
<variable name="ContextInfoArr_0_TaskCycleTimeNsHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="ContextInfoArr_0_TaskCycleTimeNs">
	<type>
		<derived name="UDINT" />
	</type>
</variable>
<variable name="ContextInfoArr_0_TaskPortHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="ContextInfoArr_0_TaskPort">
	<type>
		<derived name="UINT" />
	</type>
</variable>
<variable name="ContextInfoArr_0_TaskSortOrderHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="ContextInfoArr_0_TaskSortOrder">
	<type>
		<derived name="UDINT" />
	</type>
</variable>

          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Value="4" Name="pack_mode"/>
            </Attributes>
          </data>
        </addData>
      </dataType>
 			<dataType name = "ST_ModelBROSMattia_Input">
				<baseType>
					<struct>
						<variable name="StatusWord_joint1">
							<type>
								<derived name="UINT" />
							</type>
						</variable>
						<variable name="MotorEncoder_joint1">
							<type>
								<derived name="DINT" />
							</type>
						</variable>
						<variable name="JointAbsEnc_joint1">
							<type>
								<derived name="DINT" />
							</type>
						</variable>
						<variable name="MotorCurrentAct_joint1">
							<type>
								<derived name="INT" />
							</type>
						</variable>
						<variable name="StatusWord_joint2">
							<type>
								<derived name="UINT" />
							</type>
						</variable>
						<variable name="MotorEncoder_joint2">
							<type>
								<derived name="DINT" />
							</type>
						</variable>
						<variable name="JointAbsEnc_joint2">
							<type>
								<derived name="DINT" />
							</type>
						</variable>
						<variable name="MotorCurrentAct_joint2">
							<type>
								<derived name="INT" />
							</type>
						</variable>
						<variable name="FTch1">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
						<variable name="FTch2">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
						<variable name="FTch3">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
						<variable name="FTch4">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
						<variable name="FTch5">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
						<variable name="FTch6">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
						<variable name="StatusWord_joint3">
							<type>
								<derived name="UINT" />
							</type>
						</variable>
						<variable name="MotorEncoder_joint3">
							<type>
								<derived name="DINT" />
							</type>
						</variable>
						<variable name="JointAbsEnc_joint3">
							<type>
								<derived name="DINT" />
							</type>
						</variable>
						<variable name="MotorCurrentAct_joint3">
							<type>
								<derived name="INT" />
							</type>
						</variable>
						<variable name="StatusWord_joint4">
							<type>
								<derived name="UINT" />
							</type>
						</variable>
						<variable name="MotorEncoder_joint4">
							<type>
								<derived name="DINT" />
							</type>
						</variable>
						<variable name="JointAbsEnc_joint4">
							<type>
								<derived name="DINT" />
							</type>
						</variable>
						<variable name="MotorCurrentAct_joint4">
							<type>
								<derived name="INT" />
							</type>
						</variable>
						<variable name="FTch7">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
						<variable name="FTch8">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
						<variable name="FTch9">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
						<variable name="FTch10">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
						<variable name="FTch11">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
						<variable name="FTch12">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
					</struct>
				</baseType>
			</dataType>
			<dataType name = "ST_ModelBROSMattia_Output">
				<baseType>
					<struct>
						<variable name="EnableCircuit1">
							<type>
								<derived name="BOOL" />
							</type>
						</variable>
						<variable name="ControlWord_joint1">
							<type>
								<derived name="UINT" />
							</type>
						</variable>
						<variable name="ModesOfOperation_joint1">
							<type>
								<derived name="SINT" />
							</type>
						</variable>
						<variable name="TargetCurrent_joint1">
							<type>
								<derived name="INT" />
							</type>
						</variable>
						<variable name="ControlWord_joint2">
							<type>
								<derived name="UINT" />
							</type>
						</variable>
						<variable name="ModesOfOperation_joint2">
							<type>
								<derived name="SINT" />
							</type>
						</variable>
						<variable name="TargetCurrent_joint2">
							<type>
								<derived name="INT" />
							</type>
						</variable>
						<variable name="EnableCircuit2">
							<type>
								<derived name="BOOL" />
							</type>
						</variable>
						<variable name="ControlWord_joint3">
							<type>
								<derived name="UINT" />
							</type>
						</variable>
						<variable name="ModesOfOperation_joint3">
							<type>
								<derived name="SINT" />
							</type>
						</variable>
						<variable name="TargetCurrent_joint3">
							<type>
								<derived name="INT" />
							</type>
						</variable>
						<variable name="ControlWord_joint4">
							<type>
								<derived name="UINT" />
							</type>
						</variable>
						<variable name="ModesOfOperation_joint4">
							<type>
								<derived name="SINT" />
							</type>
						</variable>
						<variable name="TargetCurrent_joint4">
							<type>
								<derived name="INT" />
							</type>
						</variable>
						<variable name="pause_logger">
							<type>
								<derived name="BOOL" />
							</type>
						</variable>
						<variable name="DataToADS">
							<type>
								<derived name="matrix_9_real_T" />
							</type>
						</variable>
					</struct>
				</baseType>
			</dataType>

    </dataTypes>
    <pous>
      <pou name="FB_TcMatSimObject" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="bWriteFbInputValues">
              <type>
                <derived name="BOOL"/>
              </type>
              <initialValue>
                <simpleValue value="TRUE"/>
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> set this flag to write FB input values to the TcComObject's input DataAreas. This will overwrite the mapped input values before module execution. Set to FALSE to read the mapped input values from the TcComObject to the FB.</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="pDataAreas">
              <type>
                <pointer>
                  <baseType>
                    <derived name="ST_TcMatSimObjectDataAreaInfo"/>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> process image src and dst pointers and sizes</xhtml>
              </documentation>
            </variable>
            <variable name="nDataAreas">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="ipObjSrv">
              <type>
                <derived name="ITComObjectServer"/>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> global interface pointers</xhtml>
              </documentation>
            </variable>
            <variable name="ipTcComObj">
              <type>
                <derived name="ITComObject"/>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> object interface pointers</xhtml>
              </documentation>
            </variable>
            <variable name="ipTcCyclic">
              <type>
                <derived name="ITcCyclic"/>
              </type>
            </variable>
            <variable name="ipTcPostCyclic">
              <type>
                <derived name="ITcPostCyclic"/>
              </type>
            </variable>
            <variable name="ipTcAdi">
              <type>
                <derived name="ITcADI"/>
              </type>
            </variable>
            <variable name="ipTask">
              <type>
                <derived name="ITcTask"/>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> task interface pointers</xhtml>
              </documentation>
            </variable>
            <variable name="pInitData">
              <type>
                <pointer>
                  <baseType>
                    <derived name="TComInitDataHdr"/>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> initial parameters</xhtml>
              </documentation>
            </variable>
            <variable name="hResult">
              <type>
                <derived name="HRESULT"/>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> hResult of interface calls (0 if no error)</xhtml>
              </documentation>
            </variable>
            <variable name="moduleClsId">
              <type>
                <derived name="CLSID"/>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> module class ID</xhtml>
              </documentation>
            </variable>
            <variable name="assignedClsId">
              <type>
                <derived name="CLSID"/>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> expected/desired module class ID</xhtml>
              </documentation>
            </variable>
            <variable name="bClassIdVerified">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="bDynInstance">
              <type>
                <BOOL/>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> flag indicating whether the module instance was created dynamically</xhtml>
              </documentation>
            </variable>
            <variable name="eInitialObjState">
              <type>
                <derived name="TCOM_STATE"/>
              </type>
              <initialValue>
                <simpleValue value="TCOM_STATE.TCOM_STATE_INIT"/>
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> the object state at the time FB_init was called, FB_exit will try to switch to this state (only if this means to shift down)</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"/>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="ReleaseTcComInterface">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
                <localVars>
                  <variable name="nStateChangeCnt">
                    <type>
                      <DINT/>
                    </type>
                    <initialValue>
                      <simpleValue value="0"/>
                    </initialValue>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="ReleaseTcComInterface"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (ipTcComObj&lt;&gt;0) THEN
  WHILE (State&gt;eInitialObjState AND nStateChangeCnt&lt;1000) DO
    State := eInitialObjState;
    nStateChangeCnt := nStateChangeCnt+1;
  END_WHILE
  ReleaseObjInterfaces();
  IF (bDynInstance) THEN
    ReleaseTcComInterface := TC3_MODULE.FW_ObjMgr_DeleteInstance(ADR(ipTcComObj));
  ELSE
    ipTcComObj.TcRelease();
  END_IF
  ipTcComObj := 0;
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="ReleaseObjInterfaces">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="ReleaseObjInterfaces"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
// release interface pointers
IF (ipTcCyclic&lt;&gt;0) THEN
  ipTcCyclic.TcRelease();
  ipTcCyclic := 0;
END_IF
IF (ipTcPostCyclic&lt;&gt;0) THEN
  ipTcPostCyclic.TcRelease();
  ipTcPostCyclic := 0;
END_IF
IF (ipTcAdi&lt;&gt;0) THEN
  ipTcAdi.TcRelease();
  ipTcAdi := 0;
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Internal_SetObjState">
              <interface>
                <inputVars>
                  <variable name="hr">
                    <type>
                      <derived name="REFERENCE TO HRESULT"/>
                    </type>
                  </variable>
                  <variable name="nextState">
                    <type>
                      <derived name="TCOM_STATE"/>
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Protected="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="Internal_SetObjState"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
// verify class id
IF (SUCCEEDED(hr)) THEN
  hr := VerifyClassId();
END_IF

// switch object state
IF (SUCCEEDED(hr) AND nextState&gt;=TCOM_STATE_INIT) THEN
  IF (ipTcComObj=0) THEN
    hr := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
  END_IF
  IF (ipObjSrv=0) THEN
    hr := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
  END_IF
  IF (SUCCEEDED(hr)) THEN
    hr := ipTcComObj.TcSetObjState(nextState,ipObjSrv,pInitData);
  END_IF
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="FB_init">
              <interface>
                <returnType>
                  <BOOL/>
                </returnType>
                <inputVars>
                  <variable name="bInitRetains">
                    <type>
                      <BOOL/>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> init retain variables</xhtml>
                    </documentation>
                  </variable>
                  <variable name="bInCopyCode">
                    <type>
                      <BOOL/>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Online Change</xhtml>
                    </documentation>
                  </variable>
                  <variable name="oid">
                    <type>
                      <derived name="OTCID"/>
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="FB_init"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
FB_init := SUCCEEDED(Init(oid));
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="GetObjPara">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
                <inputVars>
                  <variable name="pid">
                    <type>
                      <derived name="PTCID"/>
                    </type>
                  </variable>
                  <variable name="nData">
                    <type>
                      <UDINT/>
                    </type>
                  </variable>
                  <variable name="pData">
                    <type>
                      <derived name="PVOID"/>
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="GetObjPara"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (ipTcComObj=0) THEN
  GetObjPara := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
END_IF

IF (SUCCEEDED(GetObjPara)) THEN
  GetObjPara := ipTcComObj.TcGetObjPara(pid:=pid,nData,pData,0);
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="QueryObjInterface">
              <interface>
                <inputVars>
                  <variable name="hr">
                    <type>
                      <derived name="REFERENCE TO HRESULT"/>
                    </type>
                  </variable>
                  <variable name="iid">
                    <type>
                      <derived name="REFERENCE TO IID"/>
                    </type>
                  </variable>
                  <variable name="pipItf">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="ITcUnknown"/>
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                </inputVars>
                <localVars constant="true">
                  <variable name="pNull">
                    <type>
                      <derived name="PVOID"/>
                    </type>
                    <initialValue>
                      <simpleValue value="0"/>
                    </initialValue>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="QueryObjInterface"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (SUCCEEDED(hr)) THEN
  IF (ipTcComObj=0) THEN
    hr := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
  ELSIF (pipItf^=ULINT_TO_DWORD(pNull)) THEN
    hr := ipTcComObj.TcQueryInterface(iid:= iid, pipItf:=pipItf);
  END_IF
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SaveOnlineParametersForInit">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
                <localVars>
                  <variable name="idx">
                    <type>
                      <UINT/>
                    </type>
                  </variable>
                  <variable name="pInitElemHdr">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="TComInitDataElmHdr"/>
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                  <variable name="pData">
                    <type>
                      <derived name="PVOID"/>
                    </type>
                  </variable>
                  <variable name="nData">
                    <type>
                      <UDINT/>
                    </type>
                  </variable>
                </localVars>
                <localVars constant="true">
                  <variable name="nInitDataAlignment">
                    <type>
                      <UDINT/>
                    </type>
                    <initialValue>
                      <simpleValue value="4"/>
                    </initialValue>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="SaveOnlineParametersForInit"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF (pInitData&lt;&gt;0) THEN
  pInitElemHdr := pInitData + SIZEOF(pInitData^);
  FOR idx:=1 TO pInitData^.uiElmCnt DO
    pData := pInitElemHdr + ULINT_TO_DWORD(SIZEOF(pInitElemHdr^));
    nData := pInitElemHdr^.cbData;
    SaveOnlineParametersForInit := GetObjPara(pInitElemHdr^.indexOffset,nData,pData);
    IF (FAILED(SaveOnlineParametersForInit)) THEN
      RETURN;
    END_IF
    pInitElemHdr := pData + (nInitDataAlignment*((nData + nInitDataAlignment - 1)/nInitDataAlignment));
  END_FOR
ELSE
	SaveOnlineParametersForInit := Tc2_System.E_HRESULTAdsErr.NOTINIT;
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="ResetHresult">
              <interface>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="ResetHresult"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">hResult := S_OK;</xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Execute">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
                <localVars>
                  <variable name="nDaIdx">
                    <type>
                      <UDINT/>
                    </type>
                  </variable>
                  <variable name="pCurDataArea">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="ST_TcMatSimObjectDataAreaInfo"/>
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="Execute"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (SUCCEEDED(hResult)) THEN
  hResult := VerifyClassId();
END_IF

IF (SUCCEEDED(hResult) AND State&lt;&gt;TCOM_STATE_OP) THEN
  hResult := Tc2_System.E_HRESULTAdsErr.NOTREADY;
END_IF

// get image pointers
IF (SUCCEEDED(hResult)) THEN
  GetImagePtrs(hResult);
END_IF

// copy inputs
IF (pDataAreas&lt;&gt;0 AND bWriteFbInputValues) THEN
  FOR nDaIdx:=0 TO nDataAreas-1 DO
    IF (FAILED(hResult))THEN
      CONTINUE;
    END_IF
    pCurDataArea := pDataAreas + nDaIdx*SIZEOF(ST_TcMatSimObjectDataAreaInfo);
    IF ((pCurDataArea^.eDataAreaType &lt;&gt; E_TcMatSimDataAreaType.InputDst))THEN
      CONTINUE;
    END_IF
    IF (pCurDataArea^.pModuleProcImg&lt;&gt;0 AND pCurDataArea^.pPlcVar&lt;&gt;0) THEN
      MEMCPY(pCurDataArea^.pModuleProcImg,pCurDataArea^.pPlcVar,pCurDataArea^.nSize);
    ELSE
      hResult := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
    END_IF
  END_FOR
END_IF

// call cycle update
IF (SUCCEEDED(hResult)) THEN
  IF (ipTcCyclic&lt;&gt;0) THEN
    hResult := ipTcCyclic.CycleUpdate(ipTask:= ipTask, ipCaller:= 0, context:= 0);
  ELSE
    hResult := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
  END_IF
END_IF

// copy outputs
IF (pDataAreas&lt;&gt;0) THEN
  FOR nDaIdx:=0 TO nDataAreas-1 DO
    IF (FAILED(hResult))THEN
      CONTINUE;
    END_IF
    pCurDataArea := pDataAreas + nDaIdx*SIZEOF(ST_TcMatSimObjectDataAreaInfo);
    IF ((pCurDataArea^.eDataAreaType = E_TcMatSimDataAreaType.OutputSrc) OR NOT bWriteFbInputValues) THEN
      IF (pCurDataArea^.pModuleProcImg&lt;&gt;0 AND pCurDataArea^.pPlcVar&lt;&gt;0) THEN
        MEMCPY(pCurDataArea^.pPlcVar,pCurDataArea^.pModuleProcImg,pCurDataArea^.nSize);
      ELSE
        hResult := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
      END_IF
    END_IF
  END_FOR
END_IF


// call post cyclic update
IF (SUCCEEDED(hResult)) THEN
  IF (ipTcPostCyclic&lt;&gt;0) THEN
    hResult := ipTcPostCyclic.PostCyclicUpdate(ipTask:= 0, ipCaller:= 0, context:= 0);
  ELSE
    hResult := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
  END_IF
END_IF

ReleaseImagePtrs();

Execute := hResult;
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="GetImagePtrs">
              <interface>
                <inputVars>
                  <variable name="hr">
                    <type>
                      <derived name="REFERENCE TO HRESULT"/>
                    </type>
                  </variable>
                </inputVars>
                <localVars>
                  <variable name="nDaIdx">
                    <type>
                      <UDINT/>
                    </type>
                  </variable>
                  <variable name="pCurDataArea">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="ST_TcMatSimObjectDataAreaInfo"/>
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="GetImagePtrs"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (ipTcAdi=0) THEN
  hr := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
END_IF
IF(State&lt;&gt;TCOM_STATE_OP)THEN
  hr := Tc2_System.E_HRESULTAdsErr.INVALIDSTATE;
END_IF


// get pointers to process images
IF (pDataAreas&lt;&gt;0) THEN
  FOR nDaIdx:=0 TO nDataAreas-1 DO
    pCurDataArea := pDataAreas + nDaIdx*SIZEOF(ST_TcMatSimObjectDataAreaInfo);
    IF (FAILED(hr))THEN
      CONTINUE;
    END_IF
    IF ((pCurDataArea^.eDataAreaType &lt;&gt; E_TcMatSimDataAreaType.InputDst) AND (pCurDataArea^.eDataAreaType &lt;&gt; E_TcMatSimDataAreaType.OutputSrc))THEN
      CONTINUE;
    END_IF
    IF (pCurDataArea^.pModuleProcImg=0 AND pCurDataArea^.nSize&gt;0) THEN
      hr := ipTcAdi.GetImagePtr(size:= pCurDataArea^.nSize , offs:=0 , adi_x:=pCurDataArea^.nDataAreaId , ppData:=ADR(pCurDataArea^.pModuleProcImg));
    END_IF
  END_FOR
END_IF

IF (FAILED(hr)) THEN
  ReleaseImagePtrs();
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="VerifyClassId" ObjectId="239bccd7-2f3a-47e3-959e-96b59c3eff01">
              <interface>
                <returnType>
                  <derived name="HRESULT" />
                </returnType>
                <localVars>
                  <variable name="emptyClsId">
                    <type>
                      <derived name="CLSID" />
                    </type>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true" />
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="VerifyClassId" />
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">memset(ADR(emptyClsId),0,SIZEOF(emptyClsId));
IF (bClassIdVerified) THEN
  // class ID was already verified
  VerifyClassId := Tc2_System.E_HRESULTAdsErr.HRESULT_ADS_NOERROR;
ELSIF (memcmp(ADR(assignedClsId),ADR(emptyClsId),SIZEOF(assignedClsId))=0) THEN
  // skip class ID verification if no assignedClsId specified
  VerifyClassId := Tc2_System.E_HRESULTAdsErr.HRESULT_ADS_NOERROR;
ELSE
  // verify class ID
  VerifyClassId := ReadModuleClassId();

  IF (SUCCEEDED(VerifyClassId)) THEN
    IF (memcmp(ADR(assignedClsId),ADR(moduleClsId),SIZEOF(assignedClsId))&lt;&gt;0) THEN
     VerifyClassId := Tc2_System.E_HRESULTAdsErr.INVALIDCLSID;
    END_IF
  END_IF
  bClassIdVerified := SUCCEEDED(VerifyClassId);
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SetObjPara">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
                <inputVars>
                  <variable name="pid">
                    <type>
                      <derived name="PTCID"/>
                    </type>
                  </variable>
                  <variable name="nData">
                    <type>
                      <UDINT/>
                    </type>
                  </variable>
                  <variable name="pData">
                    <type>
                      <derived name="PVOID"/>
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="SetObjPara"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (ipTcComObj=0) THEN
  SetObjPara := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
END_IF

IF (SUCCEEDED(SetObjPara)) THEN
  SetObjPara := ipTcComObj.TcSetObjPara(pid:=pid,nData,pData,0);
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="QueryTcComInterface">
              <interface>
                <inputVars>
                  <variable name="hr">
                    <type>
                      <derived name="REFERENCE TO HRESULT"/>
                    </type>
                  </variable>
                  <variable name="oid">
                    <type>
                      <derived name="OTCID"/>
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="QueryTcComInterface"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (ipObjSrv=0) THEN
  hr := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
END_IF

IF (SUCCEEDED(hr) AND ipTcComObj=0) THEN
  bDynInstance := FALSE;
  IF(oid&gt;0) THEN
    // query interface of existing object
    hr := ipObjSrv.TcQueryObjectInterface(oid,IID_ITComObject,ADR(ipTcComObj));
  ELSE
    // create new instance and get the object interface
    hr := ipObjSrv.TcCreateInstance(assignedClsId,IID_ITComObject,ADR(ipTcComObj));
    IF (SUCCEEDED(hr)) THEN
      bDynInstance := TRUE;
      hr := ipTcComObj.TcSetObjectId(OTCID_CreateNewId);
    END_IF
  END_IF
  IF (SUCCEEDED(hr)) THEN
    eInitialObjState := State;
  END_IF
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="ReleaseImagePtrs">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
                <localVars>
                  <variable name="nDaIdx">
                    <type>
                      <UDINT/>
                    </type>
                  </variable>
                  <variable name="pCurDataArea">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="ST_TcMatSimObjectDataAreaInfo"/>
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="ReleaseImagePtrs"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (ipTcAdi=0) THEN
  ReleaseImagePtrs := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
END_IF

IF (SUCCEEDED(ReleaseImagePtrs) AND pDataAreas&lt;&gt;0) THEN
  // release pointers to the simulink module process images
  FOR nDaIdx:=0 TO nDataAreas-1 DO
    pCurDataArea := pDataAreas + nDaIdx*SIZEOF(ST_TcMatSimObjectDataAreaInfo);

    IF (pCurDataArea^.pModuleProcImg&lt;&gt;0) THEN
      ipTcAdi.ReleaseImagePtr(pData:=pCurDataArea^.pModuleProcImg);
      pCurDataArea^.pModuleProcImg := 0;
    END_IF
  END_FOR
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="FB_exit">
              <interface>
                <returnType>
                  <BOOL/>
                </returnType>
                <inputVars>
                  <variable name="bInCopyCode">
                    <type>
                      <BOOL/>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Online Change</xhtml>
                    </documentation>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="FB_exit"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (NOT bInCopyCode) THEN
  IF (ipObjSrv&lt;&gt;0) THEN
    ipObjSrv.TcRelease();
    ipObjSrv := 0;
  END_IF

  ReleaseTcComInterface();
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="InitObjName">
              <interface>
                <inputVars>
                  <variable name="hr">
                    <type>
                      <derived name="REFERENCE TO HRESULT"/>
                    </type>
                  </variable>
                </inputVars>
                <localVars>
                  <variable name="objectName">
                    <type>
                      <string length="255"/>
                    </type>
                    <initialValue>
                      <simpleValue value="'TempContr_PlcRtFbInstance'"/>
                    </initialValue>
                  </variable>
                  <variable name="oid">
                    <type>
                      <derived name="OTCID"/>
                    </type>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="InitObjName"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (SUCCEEDED(hr)) THEN
  hr := ipTcComObj.TcGetObjectId(oid);
END_IF

IF (SUCCEEDED(hr) and bDynInstance) THEN
  objectName := TC2_STANDARD.CONCAT(objectName,'_');
  objectName := TC2_STANDARD.CONCAT(objectName,UDINT_TO_STRING(oid));
  hr := ipTcComObj.TcSetObjectName(ADR(objectName));
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SetObjState">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
                <inputVars>
                  <variable name="finalState">
                    <type>
                      <derived name="TCOM_STATE"/>
                    </type>
                  </variable>
                </inputVars>
                <localVars>
                  <variable name="bShiftUp">
                    <type>
                      <BOOL/>
                    </type>
                  </variable>
                  <variable name="bShiftDown">
                    <type>
                      <BOOL/>
                    </type>
                  </variable>
                  <variable name="currentState">
                    <type>
                      <derived name="TCOM_STATE"/>
                    </type>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="SetObjState"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
currentState := State;

bShiftUp := finalState&gt;currentState;
bShiftDown := finalState&lt;currentState;

// do not switch up on error
IF (FAILED(hresult)) THEN
  bShiftUp := FALSE;
END_IF
// reset existing error on switching down
IF (bShiftDown) THEN
  ResetHresult();
END_IF

// prepared state switch
CASE currentState OF
  TCOM_STATE_INIT:
    IF(bShiftUp) THEN
      QueryTcComInterface(hResult,0);
      Internal_SetObjState(hResult,TCOM_STATE.TCOM_STATE_PREOP);
      InitObjName(hResult);
    END_IF

  TCOM_STATE_PREOP:
    IF(bShiftUp) THEN
      Internal_SetObjState(hResult,TCOM_STATE.TCOM_STATE_SAFEOP);
      QueryObjInterfaces(hResult);
    ELSIF (bShiftDown) THEN
      Internal_SetObjState(hResult,TCOM_STATE.TCOM_STATE_INIT);
    END_IF

  TCOM_STATE_SAFEOP:
    IF(bShiftUp) THEN
      Internal_SetObjState(hResult,TCOM_STATE.TCOM_STATE_OP);
      QueryObjInterfaces(hResult);
    ELSIF (bShiftDown) THEN
      Internal_SetObjState(hResult,TCOM_STATE.TCOM_STATE_PREOP);
      ReleaseObjInterfaces();
    END_IF


  TCOM_STATE_OP:
    IF (bShiftDown) THEN
      Internal_SetObjState(hResult,TCOM_STATE.TCOM_STATE_SAFEOP);
    END_IF
END_CASE

SetObjState := hResult;
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="QueryObjInterfaces">
              <interface>
                <inputVars>
                  <variable name="hr">
                    <type>
                      <derived name="REFERENCE TO HRESULT"/>
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="QueryObjInterfaces"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF(State&lt;TCOM_STATE_PREOP)THEN
  hr := Tc2_System.E_HRESULTAdsErr.INVALIDSTATE;
END_IF

//cyclic interface
QueryObjInterface(hr,IID_ITCCYCLIC,ADR(ipTcCyclic));
//post cyclic interface
QueryObjInterface(hr,IID_ITCPOSTCYCLIC,ADR(ipTcPostCyclic));
//adi interface
QueryObjInterface(hr,IID_ITcADI,ADR(ipTcAdi));
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Init">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
                <inputVars>
                  <variable name="oid">
                    <type>
                      <derived name="OTCID"/>
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Protected="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="Init"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
// preinitialize variables
memset(ADR(moduleClsId),0,SIZEOF(moduleClsId));
bClassIdVerified := FALSE;
hResult := Tc2_System.E_HRESULTAdsErr.HRESULT_ADS_NOERROR;

// get object server
IF (ipObjSrv=0) THEN
  hResult := FW_ObjMgr_GetObjectServer(_AppInfo.ObjId,ADR(ipObjSrv));
END_IF

// try to get object interfaces
IF (SUCCEEDED(hresult)) THEN
  QueryTcComInterface(hResult,oid);
END_IF

// verify class id
IF (SUCCEEDED(hresult)) THEN
  hresult := VerifyClassId();
END_IF

// query interfaces, if the current state is higher than INIT
IF (SUCCEEDED(hresult) AND State&gt;TCOM_STATE.TCOM_STATE_INIT) THEN
  QueryObjInterfaces(hResult);
END_IF

// return value
Init := hresult;
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="ReadModuleClassId" ObjectId="4430359c-9c39-4c2f-b0ca-4e5015b398ea">
              <interface>
                <returnType>
                  <derived name="HRESULT" />
                </returnType>
                <localVars>
                  <variable name="emptyClsId">
                    <type>
                      <derived name="CLSID" />
                    </type>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="ReadModuleClassId"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">memset(ADR(emptyClsId),0,SIZEOF(emptyClsId));
IF (memcmp(ADR(moduleClsId),ADR(emptyClsId),SIZEOF(moduleClsId))=0) THEN
  IF (ipTcComObj=0) THEN
    ReadModuleClassId := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
  END_IF

  //objectClsId := clsid;
  IF (SUCCEEDED(ReadModuleClassId)) THEN
    ReadModuleClassId := ipTcComObj.GetClassId(moduleClsId);
  END_IF
END_IF</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="AssignClassId" ObjectId="70aee05c-b7c0-4a1a-90db-a70048b378df">
              <interface>
                <inputVars>
                  <variable name="clsId">
                    <type>
                      <derived name="CLSID" />
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="AssignClassId" />
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">assignedClsId := clsId;
bClassIdVerified := false;
                  </xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD PUBLIC AssignClassId
VAR_INPUT
	clsId : CLSID;
END_VAR
                </xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="Error">
              <interface>
                <returnType>
                  <BOOL/>
                </returnType>
              </interface>
              <GetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                      <Attributes>
                        <Attribute Name="hide" Value=""/>
                      </Attributes>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">Error := FAILED(hResult);</xhtml>
                  </ST>
                </body>
                <addData/>
              </GetAccessor>
              <addData/>
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SetDataAreaInfo" ObjectId="11a4ecef-f4b8-4ea3-b32a-f5c95d2a16a3">
              <interface>
                <inputVars>
                  <variable name="pDataAreas">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="ST_TcMatSimObjectDataAreaInfo" />
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                  <variable name="nDataAreas">
                    <type>
                      <UDINT />
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="SetDataAreaInfo" />
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
THIS^.nDataAreas := nDataAreas;
THIS^.pDataAreas := pDataAreas;
                  </xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">
METHOD PUBLIC SetDataAreaInfo
VAR_INPUT
  pDataAreas: POINTER TO ST_TcMatSimObjectDataAreaInfo;
  nDataAreas: UDINT;
END_VAR
                </xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SetInitDataInfo" ObjectId="a4b3eb8c-b58b-4cd6-a9be-95800eb47e3c">
              <interface>
                <inputVars>
                  <variable name="pInitData">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="TComInitDataHdr" />
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="SetInitDataInfo" />
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">this^.pInitData := pInitData;</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">
METHOD PUBLIC SetInitDataInfo
VAR_INPUT
  pInitData : POINTER TO TComInitDataHdr;
END_VAR
                </xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="ClassId">
              <interface>
                <returnType>
                  <derived name="CLSID"/>
                </returnType>
              </interface>
              <GetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                      <Attributes>
                        <Attribute Name="hide" Value=""/>
                      </Attributes>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">hResult := ReadModuleClassId();
ClassId := moduleClsId;
                    </xhtml>
                  </ST>
                </body>
                <addData/>
              </GetAccessor>
              <addData/>
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="State">
              <interface>
                <returnType>
                  <derived name="TCOM_STATE"/>
                </returnType>
              </interface>
              <SetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                      <Attributes>
                        <Attribute Name="hide" Value=""/>
                      </Attributes>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">SetObjState(State);</xhtml>
                  </ST>
                </body>
                <addData/>
              </SetAccessor>
              <GetAccessor>
                <interface>
                  <localVars>
                    <variable name="hr">
                      <type>
                        <derived name="HRESULT"/>
                      </type>
                      <initialValue>
                        <simpleValue value="S_OK"/>
                      </initialValue>
                    </variable>
                    <variable name="eObjState">
                      <type>
                        <derived name="TCOM_STATE"/>
                      </type>
                    </variable>
                  </localVars>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                      <Attributes>
                        <Attribute Name="hide" Value=""/>
                      </Attributes>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (ipTcComObj&lt;&gt;0) THEN
  hr := ipTcComObj.TcGetObjState(ADR(eObjState));
IF (FAILED(hr)) THEN
  eObjState := TCOM_STATE.TCOM_STATE_INIT;
END_IF
ELSE
  eObjState := TCOM_STATE.TCOM_STATE_INIT;
END_IF
State := eObjState;
                    </xhtml>
                  </ST>
                </body>
                <addData/>
              </GetAccessor>
              <addData/>
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="ErrorCode">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
              </interface>
              <GetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                      <Attributes>
                        <Attribute Name="hide" Value=""/>
                      </Attributes>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">ErrorCode := hResult;</xhtml>
                  </ST>
                </body>
                <addData/>
              </GetAccessor>
              <addData/>
            </Property>
          </data>
        </addData>
      </pou>
      <pou name="FB_ModelBROSMattia" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="stInput">
	<type>
		<derived name="ST_ModelBROSMattia_Input" />
	</type>
</variable>

          </inputVars>
          <outputVars>
            <variable name="stOutput">
	<type>
		<derived name="ST_ModelBROSMattia_Output" />
	</type>
</variable>

          </outputVars>
          <localVars>
            <variable name="stInitData">
              <type>
                <derived name="ST_ModelBROSMattia_InitData" />
              </type>
            </variable>
            <variable name="arrDataAreas">
              <type>
                <array>
                  <dimension lower="1" upper="2"/>
                  <baseType>
                    <derived name="ST_TcMatSimObjectDataAreaInfo"/>
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="bParametersVerified">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
              <Inheritance>
                <Extends>FB_TcMatSimObject</Extends>
              </Inheritance>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="TcDependOnClassFactory" Value="ModelBROSMattia" />
              </Attributes>
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Internal_SetObjState">
              <interface>
                <inputVars>
                  <variable name="hr">
                    <type>
                      <derived name="REFERENCE TO HRESULT"/>
                    </type>
                  </variable>
                  <variable name="nextState">
                    <type>
                      <derived name="TCOM_STATE"/>
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Protected="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="Internal_SetObjState"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
// update pointer to InitData structure
SetInitDataInfo(ADR(stInitData));
// call base method
SUPER^.Internal_SetObjState(hr,nextState);
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>

          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SaveOnlineParametersForInit">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
                <localVars>
                  <variable name="idx">
                    <type>
                      <UINT/>
                    </type>
                  </variable>
                  <variable name="pInitElemHdr">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="TComInitDataElmHdr"/>
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                  <variable name="pData">
                    <type>
                      <derived name="PVOID"/>
                    </type>
                  </variable>
                  <variable name="nData">
                    <type>
                      <UDINT/>
                    </type>
                  </variable>
                </localVars>
                <localVars constant="true">
                  <variable name="nInitDataAlignment">
                    <type>
                      <UDINT/>
                    </type>
                    <initialValue>
                      <simpleValue value="4"/>
                    </initialValue>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="SaveOnlineParametersForInit"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
// update pointer to InitData structure
SetInitDataInfo(ADR(stInitData));
// call base method
SaveOnlineParametersForInit := SUPER^.SaveOnlineParametersForInit();
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="FB_init">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="bInitRetains">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> if TRUE, the retain variables are initialized (warm start / cold start)</xhtml>
                    </documentation>
                  </variable>
                  <variable name="bInCopyCode">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> if TRUE, the instance afterwards gets moved into the copy code (online change)</xhtml>
                    </documentation>
                  </variable>
                  <variable name="oid">
                    <type>
                      <derived name="OTCID" />
                    </type>
                  </variable>
                </inputVars>
                <localVars>
                  <variable name="clsId">
                    <type>
                      <derived name="CLSID"/>
                    </type>
                  </variable>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
// initialize flags
bParametersVerified := false;
                    
// set module class id for compatibility check
clsId.Data1 := 16#cda85908;
clsId.Data2 := 16#86f6;
clsId.Data3 := 16#4d16;
clsId.Data4[0] := 16#9f;
clsId.Data4[1] := 16#0e;
clsId.Data4[2] := 16#b5;
clsId.Data4[3] := 16#94;
clsId.Data4[4] := 16#86;
clsId.Data4[5] := 16#5d;
clsId.Data4[6] := 16#d8;
clsId.Data4[7] := 16#ce;

AssignClassId(clsId);
                    
// initialize InitData structure with default values              
stInitData.CallByHdr.indexGroup := 0;
stInitData.CallByHdr.indexOffset := 16#00000000;
stInitData.CallByHdr.cbData := SIZEOF(stInitData.CallBy);
stInitData.CallBy := TctModuleCallByType.CyclicTask;
stInitData.ExecutionSequenceHdr.indexGroup := 0;
stInitData.ExecutionSequenceHdr.indexOffset := 16#00000001;
stInitData.ExecutionSequenceHdr.cbData := SIZEOF(stInitData.ExecutionSequence);
stInitData.ExecutionSequence := TctModuleExecutionSequenceType.StateUpdateAfterOutputMapping;
stInitData.StepSizeHdr.indexGroup := 0;
stInitData.StepSizeHdr.indexOffset := 16#00000002;
stInitData.StepSizeHdr.cbData := SIZEOF(stInitData.StepSize);
stInitData.StepSize := TctStepSizeType.RequireMatchingTaskCycleTime;
stInitData.ExtendedFileAccessOIDHdr.indexGroup := 0;
stInitData.ExtendedFileAccessOIDHdr.indexOffset := 16#00000005;
stInitData.ExtendedFileAccessOIDHdr.cbData := SIZEOF(stInitData.ExtendedFileAccessOID);
stInitData.ExtendedFileAccessOID := 0;
stInitData.ExtModeParametersHdr.indexGroup := 0;
stInitData.ExtModeParametersHdr.indexOffset := 16#bf002000;
stInitData.ExtModeParametersHdr.cbData := SIZEOF(stInitData.ExtModeParameters);
stInitData.ExtModeParameters.ConnectionTimeout := 3;
stInitData.ExtModeParameters.InitIncomingPktBufferSize := 10000;
stInitData.ExtModeParameters.InitOutgoingPktBufferSize := 10000;
stInitData.ExtModeParameters.Activated := 1;
stInitData.ExtModeParameters.AllowExecutionCommands := 1;
stInitData.ExtModeParameters.WaitForStartCommand := 0;
stInitData.ExtModeParameters.AllowParameterChange := 1;
stInitData.ExecuteModelCodeHdr.indexGroup := 0;
stInitData.ExecuteModelCodeHdr.indexOffset := 16#00000008;
stInitData.ExecuteModelCodeHdr.cbData := SIZEOF(stInitData.ExecuteModelCode);
stInitData.ExecuteModelCode := 1;
stInitData.ModelParametersHdr.indexGroup := 0;
stInitData.ModelParametersHdr.indexOffset := 16#83000000;
stInitData.ModelParametersHdr.cbData := SIZEOF(stInitData.ModelParameters);
stInitData.ModelParameters.FM1.HomeLocationOpSpace[0] := 0;
stInitData.ModelParameters.FM1.HomeLocationOpSpace[1] := 0.25;
stInitData.ModelParameters.FM1.HomeLocationSize := 0.005;
stInitData.ModelParameters.FM1.DynModParams[0] := 0.001597109;
stInitData.ModelParameters.FM1.DynModParams[1] := 0.001580786;
stInitData.ModelParameters.FM1.DynModParams[2] := 0.0702826;
stInitData.ModelParameters.FM1.DynModParams[3] := 0.07988736;
stInitData.ModelParameters.FM1.DynModParams[4] := -0;
stInitData.ModelParameters.FM1.DynModParams[5] := 0.1006366;
stInitData.ModelParameters.FM1.DynModParams[6] := -0;
stInitData.ModelParameters.FM1.Actuator1.JointAbsoluteEncoderCounts_rev := 65536;
stInitData.ModelParameters.FM1.Actuator1.AbsEncoderOffset := 5.303223547422882;
stInitData.ModelParameters.FM1.Actuator1.MotorEncoderCounts_rev := 4096;
stInitData.ModelParameters.FM1.Actuator1.FOAWNoiseLevel := 0.0003834951969714103;
stInitData.ModelParameters.FM1.Actuator1.transmissionRatio := 7.2976;
stInitData.ModelParameters.FM1.Actuator1.motorTorqueConstant := 0.08486;
stInitData.ModelParameters.FM1.Actuator1.drivePeakCurrent := 20;
stInitData.ModelParameters.FM1.Actuator1.AbsoluteMaximumTorque_Nm := 8;
stInitData.ModelParameters.FM1.Actuator1.TransmissionSlipAngleGuardMax := 0.08726646259971647;
stInitData.ModelParameters.FM1.Actuator1.JointPositionGuardMin := -0.4363323129985824;
stInitData.ModelParameters.FM1.Actuator1.JointPositionGuardMax := 2.356194490192345;
stInitData.ModelParameters.FM1.Actuator2.JointAbsoluteEncoderCounts_rev := 65536;
stInitData.ModelParameters.FM1.Actuator2.AbsEncoderOffset := 7.340133727728301;
stInitData.ModelParameters.FM1.Actuator2.MotorEncoderCounts_rev := 4096;
stInitData.ModelParameters.FM1.Actuator2.FOAWNoiseLevel := 0.0003834951969714103;
stInitData.ModelParameters.FM1.Actuator2.transmissionRatio := 7.331;
stInitData.ModelParameters.FM1.Actuator2.motorTorqueConstant := 0.08486;
stInitData.ModelParameters.FM1.Actuator2.drivePeakCurrent := 20;
stInitData.ModelParameters.FM1.Actuator2.AbsoluteMaximumTorque_Nm := 8;
stInitData.ModelParameters.FM1.Actuator2.TransmissionSlipAngleGuardMax := 0.08726646259971647;
stInitData.ModelParameters.FM1.Actuator2.JointPositionGuardMin := 0.7853981633974483;
stInitData.ModelParameters.FM1.Actuator2.JointPositionGuardMax := 3.577924966588375;
stInitData.ModelParameters.FM1.FTSensor.MaxAllowableForcesTorqueSensor[0] := 70;
stInitData.ModelParameters.FM1.FTSensor.MaxAllowableForcesTorqueSensor[1] := 70;
stInitData.ModelParameters.FM1.FTSensor.MaxAllowableForcesTorqueSensor[2] := 140;
stInitData.ModelParameters.FM1.FTSensor.MaxAllowableForcesTorqueSensor[3] := 1.4;
stInitData.ModelParameters.FM1.FTSensor.MaxAllowableForcesTorqueSensor[4] := 1.4;
stInitData.ModelParameters.FM1.FTSensor.MaxAllowableForcesTorqueSensor[5] := 1.4;
stInitData.ModelParameters.FM1.FTSensor.TransformationMatrixSide := 1;
stInitData.ModelParameters.FM2.HomeLocationOpSpace[0] := 0;
stInitData.ModelParameters.FM2.HomeLocationOpSpace[1] := 0.25;
stInitData.ModelParameters.FM2.HomeLocationSize := 0.005;
stInitData.ModelParameters.FM2.DynModParams[0] := 0.001597109;
stInitData.ModelParameters.FM2.DynModParams[1] := 0.001580786;
stInitData.ModelParameters.FM2.DynModParams[2] := 0.0702826;
stInitData.ModelParameters.FM2.DynModParams[3] := 0.07988736;
stInitData.ModelParameters.FM2.DynModParams[4] := -0;
stInitData.ModelParameters.FM2.DynModParams[5] := 0.1006366;
stInitData.ModelParameters.FM2.DynModParams[6] := -0;
stInitData.ModelParameters.FM2.Actuator1.JointAbsoluteEncoderCounts_rev := 65536;
stInitData.ModelParameters.FM2.Actuator1.AbsEncoderOffset := 3.23580094055001;
stInitData.ModelParameters.FM2.Actuator1.MotorEncoderCounts_rev := 4096;
stInitData.ModelParameters.FM2.Actuator1.FOAWNoiseLevel := 0.0003834951969714103;
stInitData.ModelParameters.FM2.Actuator1.transmissionRatio := 7.3607;
stInitData.ModelParameters.FM2.Actuator1.motorTorqueConstant := 0.08486;
stInitData.ModelParameters.FM2.Actuator1.drivePeakCurrent := 20;
stInitData.ModelParameters.FM2.Actuator1.AbsoluteMaximumTorque_Nm := 8;
stInitData.ModelParameters.FM2.Actuator1.TransmissionSlipAngleGuardMax := 0.08726646259971647;
stInitData.ModelParameters.FM2.Actuator1.JointPositionGuardMin := -0.4363323129985824;
stInitData.ModelParameters.FM2.Actuator1.JointPositionGuardMax := 2.356194490192345;
stInitData.ModelParameters.FM2.Actuator2.JointAbsoluteEncoderCounts_rev := 65536;
stInitData.ModelParameters.FM2.Actuator2.AbsEncoderOffset := 4.445224359590367;
stInitData.ModelParameters.FM2.Actuator2.MotorEncoderCounts_rev := 4096;
stInitData.ModelParameters.FM2.Actuator2.FOAWNoiseLevel := 0.0003834951969714103;
stInitData.ModelParameters.FM2.Actuator2.transmissionRatio := 7.32214;
stInitData.ModelParameters.FM2.Actuator2.motorTorqueConstant := 0.08486;
stInitData.ModelParameters.FM2.Actuator2.drivePeakCurrent := 20;
stInitData.ModelParameters.FM2.Actuator2.AbsoluteMaximumTorque_Nm := 8;
stInitData.ModelParameters.FM2.Actuator2.TransmissionSlipAngleGuardMax := 0.08726646259971647;
stInitData.ModelParameters.FM2.Actuator2.JointPositionGuardMin := 0.7853981633974483;
stInitData.ModelParameters.FM2.Actuator2.JointPositionGuardMax := 3.577924966588375;
stInitData.ModelParameters.FM2.FTSensor.MaxAllowableForcesTorqueSensor[0] := 70;
stInitData.ModelParameters.FM2.FTSensor.MaxAllowableForcesTorqueSensor[1] := 70;
stInitData.ModelParameters.FM2.FTSensor.MaxAllowableForcesTorqueSensor[2] := 140;
stInitData.ModelParameters.FM2.FTSensor.MaxAllowableForcesTorqueSensor[3] := 1.4;
stInitData.ModelParameters.FM2.FTSensor.MaxAllowableForcesTorqueSensor[4] := 1.4;
stInitData.ModelParameters.FM2.FTSensor.MaxAllowableForcesTorqueSensor[5] := 1.4;
stInitData.ModelParameters.FM2.FTSensor.TransformationMatrixSide := 2;
stInitData.ModelParameters.A_target[0] := 0.9399999999999999;
stInitData.ModelParameters.A_target[1] := 0.85;
stInitData.ModelParameters.A_target[2] := 0.68;
stInitData.ModelParameters.A_target[3] := 0.5;
stInitData.ModelParameters.A_target[4] := 0.3;
stInitData.ModelParameters.A_target[5] := 0.25;
stInitData.ModelParameters.Lb := 0.07000000000000001;
stInitData.ModelParameters.Lf := 0.238;
stInitData.ModelParameters.Lu := 0.153;
stInitData.ModelParameters.nx_target[0] := 4;
stInitData.ModelParameters.nx_target[1] := 7;
stInitData.ModelParameters.nx_target[2] := 11;
stInitData.ModelParameters.nx_target[3] := 17;
stInitData.ModelParameters.nx_target[4] := 27;
stInitData.ModelParameters.nx_target[5] := 35;
stInitData.ModelParameters.ny_target[0] := 5;
stInitData.ModelParameters.ny_target[1] := 8;
stInitData.ModelParameters.ny_target[2] := 13;
stInitData.ModelParameters.ny_target[3] := 19;
stInitData.ModelParameters.ny_target[4] := 29;
stInitData.ModelParameters.ny_target[5] := 33;
stInitData.ModelParameters.phasesx_target[0] := 3.370182411657159;
stInitData.ModelParameters.phasesx_target[1] := 6.214279477197413;
stInitData.ModelParameters.phasesx_target[2] := 5.411713766284105;
stInitData.ModelParameters.phasesx_target[3] := 1.684140831821637;
stInitData.ModelParameters.phasesx_target[4] := 0.7529534301185909;
stInitData.ModelParameters.phasesx_target[5] := 1.192248657199851;
stInitData.ModelParameters.phasesx_target[6] := 0.4863370644841742;
stInitData.ModelParameters.phasesx_target[7] := 0.05188972367661018;
stInitData.ModelParameters.phasesx_target[8] := 5.304324102872769;
stInitData.ModelParameters.phasesx_target[9] := 0.8340543800913668;
stInitData.ModelParameters.phasesx_target[10] := 4.815122905743856;
stInitData.ModelParameters.phasesx_target[11] := 5.854006627932594;
stInitData.ModelParameters.phasesx_target[12] := 4.241381465653441;
stInitData.ModelParameters.phasesx_target[13] := 3.620387748521004;
stInitData.ModelParameters.phasesx_target[14] := 3.523251404889291;
stInitData.ModelParameters.phasesx_target[15] := 5.599712013316219;
stInitData.ModelParameters.phasesx_target[16] := 4.28271279378308;
stInitData.ModelParameters.phasesx_target[17] := 0.8862399310374433;
stInitData.ModelParameters.phasesx_target[18] := 5.274669254795654;
stInitData.ModelParameters.phasesx_target[19] := 4.929506618412172;
stInitData.ModelParameters.phasesx_target[20] := 3.135673770294036;
stInitData.ModelParameters.phasesx_target[21] := 5.43818780366585;
stInitData.ModelParameters.phasesx_target[22] := 3.469792992785211;
stInitData.ModelParameters.phasesx_target[23] := 0.8446958762103866;
stInitData.ModelParameters.phasesx_target[24] := 1.88646797056476;
stInitData.ModelParameters.phasesx_target[25] := 5.424408291544704;
stInitData.ModelParameters.phasesx_target[26] := 2.043895960019481;
stInitData.ModelParameters.phasesx_target[27] := 3.705397048258034;
stInitData.ModelParameters.phasesx_target[28] := 5.494408100060808;
stInitData.ModelParameters.phasesx_target[29] := 4.603134688392982;
stInitData.ModelParameters.phasesx_target[30] := 4.367162155561714;
stInitData.ModelParameters.phasesx_target[31] := 2.883372333208714;
stInitData.ModelParameters.phasesx_target[32] := 5.740321673902679;
stInitData.ModelParameters.phasesx_target[33] := 1.147979105669273;
stInitData.ModelParameters.phasesx_target[34] := 2.190507428709609;
stInitData.ModelParameters.phasesx_target[35] := 3.380963701490559;
stInitData.ModelParameters.phasesx_target[36] := 1.26449734088847;
stInitData.ModelParameters.phasesx_target[37] := 3.843667669596669;
stInitData.ModelParameters.phasesx_target[38] := 0.6230689007490322;
stInitData.ModelParameters.phasesx_target[39] := 1.561969767488387;
stInitData.ModelParameters.phasesx_target[40] := 1.142295507119759;
stInitData.ModelParameters.phasesx_target[41] := 5.942968007681964;
stInitData.ModelParameters.phasesx_target[42] := 1.892181197764629;
stInitData.ModelParameters.phasesx_target[43] := 3.481354031832187;
stInitData.ModelParameters.phasesx_target[44] := 3.894919480305144;
stInitData.ModelParameters.phasesx_target[45] := 3.867958981693509;
stInitData.ModelParameters.phasesx_target[46] := 2.45774451434349;
stInitData.ModelParameters.phasesx_target[47] := 5.220920700743986;
stInitData.ModelParameters.phasesx_target[48] := 5.80664965283337;
stInitData.ModelParameters.phasesx_target[49] := 3.362718404025188;
stInitData.ModelParameters.phasesx_target[50] := 4.577909849578416;
stInitData.ModelParameters.phasesx_target[51] := 2.175108391331788;
stInitData.ModelParameters.phasesx_target[52] := 4.70469242493349;
stInitData.ModelParameters.phasesx_target[53] := 4.994243845225363;
stInitData.ModelParameters.phasesx_target[54] := 5.990228585763641;
stInitData.ModelParameters.phasesx_target[55] := 4.844938377587543;
stInitData.ModelParameters.phasesx_target[56] := 2.988857444835046;
stInitData.ModelParameters.phasesx_target[57] := 3.90796948262033;
stInitData.ModelParameters.phasesx_target[58] := 0.1858886218740834;
stInitData.ModelParameters.phasesx_target[59] := 5.481924433456324;
stInitData.ModelParameters.phasesx_target[60] := 1.306847073744164;
stInitData.ModelParameters.phasesx_target[61] := 5.510032925336937;
stInitData.ModelParameters.phasesx_target[62] := 2.100302431637928;
stInitData.ModelParameters.phasesx_target[63] := 1.805640432649649;
stInitData.ModelParameters.phasesx_target[64] := 5.562975585697716;
stInitData.ModelParameters.phasesx_target[65] := 2.882220917642539;
stInitData.ModelParameters.phasesx_target[66] := 3.66585705092533;
stInitData.ModelParameters.phasesx_target[67] := 5.379891124739951;
stInitData.ModelParameters.phasesx_target[68] := 5.025660813505286;
stInitData.ModelParameters.phasesx_target[69] := 5.805930651513234;
stInitData.ModelParameters.phasesx_target[70] := 3.541165951045903;
stInitData.ModelParameters.phasesx_target[71] := 3.838243021643268;
stInitData.ModelParameters.phasesx_target[72] := 1.89852546524652;
stInitData.ModelParameters.phasesx_target[73] := 4.606528679477485;
stInitData.ModelParameters.phasesx_target[74] := 4.950246425478056;
stInitData.ModelParameters.phasesx_target[75] := 0.8350954067459224;
stInitData.ModelParameters.phasesx_target[76] := 6.113529589520077;
stInitData.ModelParameters.phasesx_target[77] := 4.358060278423388;
stInitData.ModelParameters.phasesx_target[78] := 4.282687090389576;
stInitData.ModelParameters.phasesx_target[79] := 2.406261589836583;
stInitData.ModelParameters.phasesx_target[80] := 2.12987028053013;
stInitData.ModelParameters.phasesx_target[81] := 2.139908126431997;
stInitData.ModelParameters.phasesx_target[82] := 4.639177607487354;
stInitData.ModelParameters.phasesx_target[83] := 0.02235788029649123;
stInitData.ModelParameters.phasesx_target[84] := 3.940756388499859;
stInitData.ModelParameters.phasesx_target[85] := 5.941167210420096;
stInitData.ModelParameters.phasesx_target[86] := 4.293128737399622;
stInitData.ModelParameters.phasesx_target[87] := 5.147518895587031;
stInitData.ModelParameters.phasesx_target[88] := 1.096471005951167;
stInitData.ModelParameters.phasesx_target[89] := 3.516121495272309;
stInitData.ModelParameters.phasesx_target[90] := 1.97976835819392;
stInitData.ModelParameters.phasesx_target[91] := 3.554652518285718;
stInitData.ModelParameters.phasesx_target[92] := 6.259675795430264;
stInitData.ModelParameters.phasesx_target[93] := 6.016249477635576;
stInitData.ModelParameters.phasesx_target[94] := 3.852990196099489;
stInitData.ModelParameters.phasesx_target[95] := 2.356760698779186;
stInitData.ModelParameters.phasesx_target[96] := 2.962932253255429;
stInitData.ModelParameters.phasesx_target[97] := 1.935486134437545;
stInitData.ModelParameters.phasesx_target[98] := 0.536460919548598;
stInitData.ModelParameters.phasesx_target[99] := 0.8317468905545161;
stInitData.ModelParameters.phasesx_target[100] := 3.026958186089248;
stInitData.ModelParameters.phasesx_target[101] := 3.40225735835715;
stInitData.ModelParameters.phasesx_target[102] := 4.113017541365717;
stInitData.ModelParameters.phasesx_target[103] := 0.3750866777816513;
stInitData.ModelParameters.phasesx_target[104] := 2.342216651566667;
stInitData.ModelParameters.phasesx_target[105] := 3.912692386686599;
stInitData.ModelParameters.phasesx_target[106] := 2.898891581672359;
stInitData.ModelParameters.phasesx_target[107] := 0.3528727196136847;
stInitData.ModelParameters.phasesx_target[108] := 2.921006705730122;
stInitData.ModelParameters.phasesx_target[109] := 2.471291259090967;
stInitData.ModelParameters.phasesx_target[110] := 3.686723978346192;
stInitData.ModelParameters.phasesx_target[111] := 0.6078644955693886;
stInitData.ModelParameters.phasesx_target[112] := 0.9899097601135753;
stInitData.ModelParameters.phasesx_target[113] := 0.1728240113789267;
stInitData.ModelParameters.phasesx_target[114] := 2.576030425253867;
stInitData.ModelParameters.phasesx_target[115] := 6.051613477036893;
stInitData.ModelParameters.phasesx_target[116] := 2.856832018142998;
stInitData.ModelParameters.phasesx_target[117] := 6.223589280761376;
stInitData.ModelParameters.phasesx_target[118] := 2.6696511549387;
stInitData.ModelParameters.phasesx_target[119] := 3.140521830068687;
stInitData.ModelParameters.phasesy_target[0] := 5.895441648672314;
stInitData.ModelParameters.phasesy_target[1] := 1.254203986361492;
stInitData.ModelParameters.phasesy_target[2] := 5.836701523340995;
stInitData.ModelParameters.phasesy_target[3] := 1.07714080493508;
stInitData.ModelParameters.phasesy_target[4] := 1.28487554836722;
stInitData.ModelParameters.phasesy_target[5] := 4.584859318361754;
stInitData.ModelParameters.phasesy_target[6] := 1.142618268763691;
stInitData.ModelParameters.phasesy_target[7] := 3.165424313365424;
stInitData.ModelParameters.phasesy_target[8] := 1.723571819045188;
stInitData.ModelParameters.phasesy_target[9] := 3.232274795514591;
stInitData.ModelParameters.phasesy_target[10] := 1.020045928167564;
stInitData.ModelParameters.phasesy_target[11] := 1.164346198022971;
stInitData.ModelParameters.phasesy_target[12] := 4.777681581318577;
stInitData.ModelParameters.phasesy_target[13] := 5.94898323975782;
stInitData.ModelParameters.phasesy_target[14] := 5.401653213078654;
stInitData.ModelParameters.phasesy_target[15] := 3.415090907095599;
stInitData.ModelParameters.phasesy_target[16] := 5.854385406874514;
stInitData.ModelParameters.phasesy_target[17] := 5.404268611745462;
stInitData.ModelParameters.phasesy_target[18] := 0.3735847577039167;
stInitData.ModelParameters.phasesy_target[19] := 5.644306589983222;
stInitData.ModelParameters.phasesy_target[20] := 1.712705997339362;
stInitData.ModelParameters.phasesy_target[21] := 0.409390655044269;
stInitData.ModelParameters.phasesy_target[22] := 0.5709325000612447;
stInitData.ModelParameters.phasesy_target[23] := 3.929272716185876;
stInitData.ModelParameters.phasesy_target[24] := 3.595404395120018;
stInitData.ModelParameters.phasesy_target[25] := 0.8167764856906833;
stInitData.ModelParameters.phasesy_target[26] := 3.229629199302445;
stInitData.ModelParameters.phasesy_target[27] := 2.234721027481377;
stInitData.ModelParameters.phasesy_target[28] := 3.903958896298313;
stInitData.ModelParameters.phasesy_target[29] := 4.377438930450747;
stInitData.ModelParameters.phasesy_target[30] := 4.414125392648638;
stInitData.ModelParameters.phasesy_target[31] := 1.191599551581947;
stInitData.ModelParameters.phasesy_target[32] := 3.96549306591247;
stInitData.ModelParameters.phasesy_target[33] := 1.356471277737544;
stInitData.ModelParameters.phasesy_target[34] := 6.115482774386011;
stInitData.ModelParameters.phasesy_target[35] := 1.83499630847612;
stInitData.ModelParameters.phasesy_target[36] := 6.169768422548763;
stInitData.ModelParameters.phasesy_target[37] := 1.599021536560559;
stInitData.ModelParameters.phasesy_target[38] := 2.861428383762305;
stInitData.ModelParameters.phasesy_target[39] := 1.678155892761763;
stInitData.ModelParameters.phasesy_target[40] := 0.283998344335844;
stInitData.ModelParameters.phasesy_target[41] := 6.276411652798965;
stInitData.ModelParameters.phasesy_target[42] := 1.319411732038416;
stInitData.ModelParameters.phasesy_target[43] := 0.3536123357230483;
stInitData.ModelParameters.phasesy_target[44] := 3.289239838738597;
stInitData.ModelParameters.phasesy_target[45] := 0.285339932518201;
stInitData.ModelParameters.phasesy_target[46] := 3.268399649956572;
stInitData.ModelParameters.phasesy_target[47] := 1.513523968305579;
stInitData.ModelParameters.phasesy_target[48] := 0.915579553756077;
stInitData.ModelParameters.phasesy_target[49] := 0.06646838056247589;
stInitData.ModelParameters.phasesy_target[50] := 5.709893177039924;
stInitData.ModelParameters.phasesy_target[51] := 3.64763729756637;
stInitData.ModelParameters.phasesy_target[52] := 5.6146097466415;
stInitData.ModelParameters.phasesy_target[53] := 3.129376524246282;
stInitData.ModelParameters.phasesy_target[54] := 3.049789505596989;
stInitData.ModelParameters.phasesy_target[55] := 4.07993054628642;
stInitData.ModelParameters.phasesy_target[56] := 5.641443737733154;
stInitData.ModelParameters.phasesy_target[57] := 3.801729952262554;
stInitData.ModelParameters.phasesy_target[58] := 1.975352145448765;
stInitData.ModelParameters.phasesy_target[59] := 0.3193347262564735;
stInitData.ModelParameters.phasesy_target[60] := 4.403070049727236;
stInitData.ModelParameters.phasesy_target[61] := 1.045069972360913;
stInitData.ModelParameters.phasesy_target[62] := 3.421568409210076;
stInitData.ModelParameters.phasesy_target[63] := 4.980751918163975;
stInitData.ModelParameters.phasesy_target[64] := 0.5287762338042805;
stInitData.ModelParameters.phasesy_target[65] := 1.928425965667931;
stInitData.ModelParameters.phasesy_target[66] := 6.012825082264075;
stInitData.ModelParameters.phasesy_target[67] := 3.000513149192241;
stInitData.ModelParameters.phasesy_target[68] := 6.227679218481383;
stInitData.ModelParameters.phasesy_target[69] := 1.314010054671939;
stInitData.ModelParameters.phasesy_target[70] := 0.1886828365950328;
stInitData.ModelParameters.phasesy_target[71] := 6.069216962543169;
stInitData.ModelParameters.phasesy_target[72] := 1.505148976870208;
stInitData.ModelParameters.phasesy_target[73] := 0.7787771032427058;
stInitData.ModelParameters.phasesy_target[74] := 0.8132429391473173;
stInitData.ModelParameters.phasesy_target[75] := 5.085310330434752;
stInitData.ModelParameters.phasesy_target[76] := 1.30151303567916;
stInitData.ModelParameters.phasesy_target[77] := 0.2766369767288279;
stInitData.ModelParameters.phasesy_target[78] := 5.397097351374331;
stInitData.ModelParameters.phasesy_target[79] := 4.500534177705425;
stInitData.ModelParameters.phasesy_target[80] := 2.789204753101333;
stInitData.ModelParameters.phasesy_target[81] := 3.664964834017377;
stInitData.ModelParameters.phasesy_target[82] := 5.98262675682694;
stInitData.ModelParameters.phasesy_target[83] := 4.926201933471358;
stInitData.ModelParameters.phasesy_target[84] := 1.516469403526036;
stInitData.ModelParameters.phasesy_target[85] := 2.090001587889455;
stInitData.ModelParameters.phasesy_target[86] := 1.261120001400711;
stInitData.ModelParameters.phasesy_target[87] := 3.003405246890559;
stInitData.ModelParameters.phasesy_target[88] := 0.07881076019228278;
stInitData.ModelParameters.phasesy_target[89] := 1.156757693253063;
stInitData.ModelParameters.phasesy_target[90] := 0.4673317255437381;
stInitData.ModelParameters.phasesy_target[91] := 2.107211292020577;
stInitData.ModelParameters.phasesy_target[92] := 1.370150932454384;
stInitData.ModelParameters.phasesy_target[93] := 0.903475560691817;
stInitData.ModelParameters.phasesy_target[94] := 6.078890470940434;
stInitData.ModelParameters.phasesy_target[95] := 5.237299250668785;
stInitData.ModelParameters.phasesy_target[96] := 3.369902491198222;
stInitData.ModelParameters.phasesy_target[97] := 5.072897220998284;
stInitData.ModelParameters.phasesy_target[98] := 2.16005676827;
stInitData.ModelParameters.phasesy_target[99] := 1.148035797787231;
stInitData.ModelParameters.phasesy_target[100] := 0.104865018455572;
stInitData.ModelParameters.phasesy_target[101] := 1.521372232621656;
stInitData.ModelParameters.phasesy_target[102] := 1.162720020328204;
stInitData.ModelParameters.phasesy_target[103] := 4.266385045231953;
stInitData.ModelParameters.phasesy_target[104] := 4.395894602430636;
stInitData.ModelParameters.phasesy_target[105] := 2.609778812530397;
stInitData.ModelParameters.phasesy_target[106] := 4.27162338218846;
stInitData.ModelParameters.phasesy_target[107] := 1.518224343721569;
stInitData.ModelParameters.phasesy_target[108] := 1.250061957455191;
stInitData.ModelParameters.phasesy_target[109] := 4.935825464207682;
stInitData.ModelParameters.phasesy_target[110] := 4.865750036956934;
stInitData.ModelParameters.phasesy_target[111] := 3.711481218578335;
stInitData.ModelParameters.phasesy_target[112] := 6.03693609144459;
stInitData.ModelParameters.phasesy_target[113] := 2.153629115797681;
stInitData.ModelParameters.phasesy_target[114] := 3.312084563427591;
stInitData.ModelParameters.phasesy_target[115] := 6.020106629010778;
stInitData.ModelParameters.phasesy_target[116] := 4.038244984731956;
stInitData.ModelParameters.phasesy_target[117] := 2.81695073619431;
stInitData.ModelParameters.phasesy_target[118] := 3.647435410470031;
stInitData.ModelParameters.phasesy_target[119] := 5.412878641106728;
stInitData.ModelParameters.sampleTime := 0.001;
stInitData.ModelParameters.DiscreteDerivative_ICPrevScaled := 0;
stInitData.ModelParameters.DiscreteDerivative_ICPrevScal_b := 0;
stInitData.ModelParameters.DiscreteDerivative_ICPrevScal_e := 0;
stInitData.ModelParameters.DiscreteDerivative_ICPrevScal_d := 0;
stInitData.ModelParameters.DiscreteDerivative_ICPrevScal_j := 0;
stInitData.ModelParameters.DiscreteDerivative_ICPrevScal_k := 0;
stInitData.ModelParameters.DiscreteDerivative_ICPrevScal_p := 0;
stInitData.ModelParameters.DiscreteDerivative_ICPrevSca_ki := 0;
stInitData.ModelParameters.CompareToConstant_const := 201;
stInitData.ModelParameters.CompareToConstant_const_n := 0;
stInitData.ModelParameters.CompareToConstant_const_m := 201;
stInitData.ModelParameters.CompareToConstant_const_k := 0;
stInitData.ModelParameters.CompareToConstant_const_a := 4;
stInitData.ModelParameters.CompareToConstant_const_c := 4;
stInitData.ModelParameters.CompareToConstant1_const := 2.75;
stInitData.ModelParameters.CompareToConstant_const_g := 4;
stInitData.ModelParameters.CompareToConstant_const_af := 4;
stInitData.ModelParameters.CompareToConstant1_const_k := 2.75;
stInitData.ModelParameters.WrapToZero_Threshold := -1;
stInitData.ModelParameters.CompareToConstant_const_cv := 0;
stInitData.ModelParameters.CompareToConstant_const_gc := 0;
stInitData.ModelParameters.CompareToConstant_const_b := 0;
stInitData.ModelParameters.CompareToConstant_const_f := 0;
stInitData.ModelParameters.ErrorHasOccurred_initial_condit := 0;
stInitData.ModelParameters.ErrorHasOccurred_initial_cond_a := 0;
stInitData.ModelParameters.ErrorHasOccurred_initial_cond_m := 0;
stInitData.ModelParameters.ErrorHasOccurred_initial_con_m4 := 0;
stInitData.ModelParameters.CheckTrialIsRunning_initial_con := 0;
stInitData.ModelParameters.DetectRisePositive_vinit := 0;
stInitData.ModelParameters.DetectRisePositive1_vinit := 0;
stInitData.ModelParameters.DetectRisePositive_vinit_c := 0;
stInitData.ModelParameters.DetectRisePositive1_vinit_i := 0;
stInitData.ModelParameters.DetectRisePositive_vinit_h := 0;
stInitData.ModelParameters.DetectRisePositive1_vinit_l := 0;
stInitData.ModelParameters.DetectRisePositive_vinit_o := 0;
stInitData.ModelParameters.DetectRisePositive1_vinit_o := 0;
stInitData.ModelParameters.DetectRisePositive_vinit_l := 0;
stInitData.ModelParameters.DetectRisePositive1_vinit_f := 0;
stInitData.ModelParameters.DetectChange_vinit := 0;
stInitData.ModelParameters.DetectChange_vinit_h := 0;
stInitData.ModelParameters.DetectChange_vinit_j := 0;
stInitData.ModelParameters.DetectChange_vinit_n := 0;
stInitData.ModelParameters.DetectRiseNonnegative_vinit := 0;
stInitData.ModelParameters.DetectIncrease_vinit := 0;
stInitData.ModelParameters.DetectIncrease_vinit_h := 0;
stInitData.ModelParameters.JointTorqueDes_Nm_Y0[0] := 0;
stInitData.ModelParameters.JointTorqueDes_Nm_Y0[1] := 0;
stInitData.ModelParameters.Constant3_Value[0] := 0;
stInitData.ModelParameters.Constant3_Value[1] := 0;
stInitData.ModelParameters.JointTorqueDes_Nm_Y0_p[0] := 0;
stInitData.ModelParameters.JointTorqueDes_Nm_Y0_p[1] := 0;
stInitData.ModelParameters.Constant3_Value_h[0] := 0;
stInitData.ModelParameters.Constant3_Value_h[1] := 0;
stInitData.ModelParameters.JointTorqueDes_Nm_Y0_c[0] := 0;
stInitData.ModelParameters.JointTorqueDes_Nm_Y0_c[1] := 0;
stInitData.ModelParameters.Constant3_Value_c[0] := 0;
stInitData.ModelParameters.Constant3_Value_c[1] := 0;
stInitData.ModelParameters.JointTorqueDes_Nm_Y0_ce[0] := 0;
stInitData.ModelParameters.JointTorqueDes_Nm_Y0_ce[1] := 0;
stInitData.ModelParameters.Constant3_Value_a[0] := 0;
stInitData.ModelParameters.Constant3_Value_a[1] := 0;
stInitData.ModelParameters.EnableDrives_Value := 0;
stInitData.ModelParameters.Constant_Value := 0;
stInitData.ModelParameters.UseActuator_Value := 1;
stInitData.ModelParameters.DisableDrives_Value := 0;
stInitData.ModelParameters.Constant_Value_f := 0;
stInitData.ModelParameters.CalibrateManually_Value := 0;
stInitData.ModelParameters.Memory_X0 := 0;
stInitData.ModelParameters.FreqHz_Value := 20;
stInitData.ModelParameters.UnitDelay_InitialCondition := 0;
stInitData.ModelParameters.TSamp_WtEt := 1000;
stInitData.ModelParameters.FreqHz_Value_e := 100;
stInitData.ModelParameters.UnitDelay_InitialCondition_e := 0;
stInitData.ModelParameters.Constant_Value_m := 6.283185307179586;
stInitData.ModelParameters.AbsoluteMaximumTorque_Nm_Value := 8;
stInitData.ModelParameters.Bias_Bias := 0.5;
stInitData.ModelParameters.InhibitTime_s_Value := 2;
stInitData.ModelParameters.Memory1_1_X0 := 0;
stInitData.ModelParameters.Constant_Value_n := 0;
stInitData.ModelParameters.Constant_Value_i := 0;
stInitData.ModelParameters.UseActuator_Value_g := 1;
stInitData.ModelParameters.Constant_Value_o := 0;
stInitData.ModelParameters.CalibrateManually_Value_p := 0;
stInitData.ModelParameters.FreqHz_Value_j := 20;
stInitData.ModelParameters.UnitDelay_InitialCondition_f := 0;
stInitData.ModelParameters.TSamp_WtEt_o := 1000;
stInitData.ModelParameters.FreqHz_Value_c := 100;
stInitData.ModelParameters.UnitDelay_InitialCondition_c := 0;
stInitData.ModelParameters.Constant_Value_iv := 6.283185307179586;
stInitData.ModelParameters.AbsoluteMaximumTorque_Nm_Valu_n := 8;
stInitData.ModelParameters.Bias_Bias_c := 0.5;
stInitData.ModelParameters.InhibitTime_s_Value_b := 2;
stInitData.ModelParameters.Memory1_1_X0_i := 0;
stInitData.ModelParameters.TimePerState_ms_Value[0] := 50;
stInitData.ModelParameters.TimePerState_ms_Value[1] := 50;
stInitData.ModelParameters.TimePerState_ms_Value[2] := 150;
stInitData.ModelParameters.TimePerState_ms_Value[3] := 150;
stInitData.ModelParameters.SetModeOp_val_slx_Value := 10;
stInitData.ModelParameters.TorqueLimit_Value := 4;
stInitData.ModelParameters.Requestedstate_Value := 0;
stInitData.ModelParameters.Gain_Gain := 1;
stInitData.ModelParameters.Gain_Gain_e := 1;
stInitData.ModelParameters.Constant2_Value := 0.05;
stInitData.ModelParameters.virtualdamping2_Value[0] := 0;
stInitData.ModelParameters.virtualdamping2_Value[1] := 0;
stInitData.ModelParameters.Merge1_InitialOutput[0] := 0;
stInitData.ModelParameters.Merge1_InitialOutput[1] := 0;
stInitData.ModelParameters.Kp_Gain := 0;
stInitData.ModelParameters.Merge2_InitialOutput[0] := 0;
stInitData.ModelParameters.Merge2_InitialOutput[1] := 0;
stInitData.ModelParameters.Kd_Gain := 0;
stInitData.ModelParameters.Kp1_Gain := 400;
stInitData.ModelParameters.Gain_Gain_m := 1.5;
stInitData.ModelParameters.Gain_Gain_l := 1.5;
stInitData.ModelParameters.Kd1_Gain := 6;
stInitData.ModelParameters.Gain_Gain_d := 0;
stInitData.ModelParameters.TimePerState_ms_Value_d[0] := 50;
stInitData.ModelParameters.TimePerState_ms_Value_d[1] := 50;
stInitData.ModelParameters.TimePerState_ms_Value_d[2] := 150;
stInitData.ModelParameters.TimePerState_ms_Value_d[3] := 150;
stInitData.ModelParameters.SetModeOp_val_slx_Value_n := 10;
stInitData.ModelParameters.Constant_Value_f2 := 0;
stInitData.ModelParameters.UseActuator_Value_j := 1;
stInitData.ModelParameters.Constant_Value_j := 0;
stInitData.ModelParameters.CalibrateManually_Value_m := 0;
stInitData.ModelParameters.Memory_X0_c := 0;
stInitData.ModelParameters.FreqHz_Value_k := 20;
stInitData.ModelParameters.UnitDelay_InitialCondition_b := 0;
stInitData.ModelParameters.TSamp_WtEt_g := 1000;
stInitData.ModelParameters.FreqHz_Value_l := 100;
stInitData.ModelParameters.UnitDelay_InitialCondition_a := 0;
stInitData.ModelParameters.Constant_Value_p := 6.283185307179586;
stInitData.ModelParameters.AbsoluteMaximumTorque_Nm_Valu_a := 8;
stInitData.ModelParameters.Bias_Bias_d := 0.5;
stInitData.ModelParameters.InhibitTime_s_Value_k := 2;
stInitData.ModelParameters.Memory1_1_X0_m := 0;
stInitData.ModelParameters.Constant_Value_c := 0;
stInitData.ModelParameters.Constant_Value_b := 0;
stInitData.ModelParameters.UseActuator_Value_o := 1;
stInitData.ModelParameters.Constant_Value_c4 := 0;
stInitData.ModelParameters.CalibrateManually_Value_c := 0;
stInitData.ModelParameters.FreqHz_Value_f := 20;
stInitData.ModelParameters.UnitDelay_InitialCondition_ev := 0;
stInitData.ModelParameters.TSamp_WtEt_j := 1000;
stInitData.ModelParameters.FreqHz_Value_ct := 100;
stInitData.ModelParameters.UnitDelay_InitialCondition_ci := 0;
stInitData.ModelParameters.Constant_Value_i4 := 6.283185307179586;
stInitData.ModelParameters.AbsoluteMaximumTorque_Nm_Valu_o := 8;
stInitData.ModelParameters.Bias_Bias_a := 0.5;
stInitData.ModelParameters.InhibitTime_s_Value_p := 2;
stInitData.ModelParameters.Memory1_1_X0_o := 0;
stInitData.ModelParameters.TimePerState_ms_Value_j[0] := 50;
stInitData.ModelParameters.TimePerState_ms_Value_j[1] := 50;
stInitData.ModelParameters.TimePerState_ms_Value_j[2] := 150;
stInitData.ModelParameters.TimePerState_ms_Value_j[3] := 150;
stInitData.ModelParameters.SetModeOp_val_slx_Value_e := 10;
stInitData.ModelParameters.TorqueLimit_Value_c := 4;
stInitData.ModelParameters.Gain_Gain_g := 1;
stInitData.ModelParameters.Gain_Gain_eq := 1;
stInitData.ModelParameters.Constant2_Value_d := 0.05;
stInitData.ModelParameters.Merge1_InitialOutput_g[0] := 0;
stInitData.ModelParameters.Merge1_InitialOutput_g[1] := 0;
stInitData.ModelParameters.Kp_Gain_m := 0;
stInitData.ModelParameters.Merge2_InitialOutput_p[0] := 0;
stInitData.ModelParameters.Merge2_InitialOutput_p[1] := 0;
stInitData.ModelParameters.Kd_Gain_f := 0;
stInitData.ModelParameters.Kp1_Gain_k := 400;
stInitData.ModelParameters.Gain_Gain_k := 1.5;
stInitData.ModelParameters.Gain_Gain_gc := 1.5;
stInitData.ModelParameters.Kd1_Gain_d := 6;
stInitData.ModelParameters.Gain_Gain_i := 0;
stInitData.ModelParameters.TimePerState_ms_Value_m[0] := 50;
stInitData.ModelParameters.TimePerState_ms_Value_m[1] := 50;
stInitData.ModelParameters.TimePerState_ms_Value_m[2] := 150;
stInitData.ModelParameters.TimePerState_ms_Value_m[3] := 150;
stInitData.ModelParameters.SetModeOp_val_slx_Value_c := 10;
stInitData.ModelParameters.One_Value := 1;
stInitData.ModelParameters.ExpStartTrial_Value := 0;
stInitData.ModelParameters.Constant_Value_bg := 0;
stInitData.ModelParameters.ExpTrialDuration_Value := 30;
stInitData.ModelParameters.RateLimiter_RisingLim := 0.00025;
stInitData.ModelParameters.RateLimiter_FallingLim := -0.00025;
stInitData.ModelParameters.RateLimiter_IC := 0;
stInitData.ModelParameters.Saturation_UpperSat := 1;
stInitData.ModelParameters.Saturation_LowerSat := 0;
stInitData.ModelParameters.Gain1_Gain := 6.283185307179586;
stInitData.ModelParameters.Gain2_Gain := 0.1591549430918953;
stInitData.ModelParameters.Saturation_UpperSat_h := 1;
stInitData.ModelParameters.Saturation_LowerSat_f := 0;
stInitData.ModelParameters.One_Value_h := 1;
stInitData.ModelParameters.Saturation_UpperSat_o := 1;
stInitData.ModelParameters.Saturation_LowerSat_fc := 0;
stInitData.ModelParameters.CalibrateForceSensors_Value := 0;
stInitData.ModelParameters.Constant_Value_k := 0;
stInitData.ModelParameters.TSamp_WtEt_n := 1000;
stInitData.ModelParameters.FreqHz_Value_o := 150;
stInitData.ModelParameters.UnitDelay_InitialCondition_k := 0;
stInitData.ModelParameters.TSamp_WtEt_f := 1000;
stInitData.ModelParameters.FreqHz_Value_ky := 150;
stInitData.ModelParameters.UnitDelay_InitialCondition_d := 0;
stInitData.ModelParameters.TSamp_WtEt_jg := 1000;
stInitData.ModelParameters.FreqHz_Value_lm := 150;
stInitData.ModelParameters.UnitDelay_InitialCondition_c5 := 0;
stInitData.ModelParameters.TSamp_WtEt_ge := 1000;
stInitData.ModelParameters.FreqHz_Value_a := 150;
stInitData.ModelParameters.UnitDelay_InitialCondition_cu := 0;
stInitData.ModelParameters.Merge3_InitialOutput[0] := 0;
stInitData.ModelParameters.Merge3_InitialOutput[1] := 0;
stInitData.ModelParameters.Memory1_10_X0 := 0;
stInitData.ModelParameters.Memory1_11_X0 := 0;
stInitData.ModelParameters.Memory1_2_X0 := 0;
stInitData.ModelParameters.Memory1_3_X0 := 0;
stInitData.ModelParameters.Memory1_4_X0 := 0;
stInitData.ModelParameters.Memory1_5_X0 := 0;
stInitData.ModelParameters.Memory1_6_X0 := 0;
stInitData.ModelParameters.Memory1_7_X0 := 0;
stInitData.ModelParameters.Memory1_8_X0 := 0;
stInitData.ModelParameters.Memory1_9_X0 := 0;
stInitData.ModelParameters.Memory1_10_X0_i := 0;
stInitData.ModelParameters.Memory1_11_X0_i := 0;
stInitData.ModelParameters.Memory1_2_X0_i := 0;
stInitData.ModelParameters.Memory1_3_X0_i := 0;
stInitData.ModelParameters.Memory1_4_X0_i := 0;
stInitData.ModelParameters.Memory1_5_X0_i := 0;
stInitData.ModelParameters.Memory1_6_X0_i := 0;
stInitData.ModelParameters.Memory1_7_X0_i := 0;
stInitData.ModelParameters.Memory1_8_X0_i := 0;
stInitData.ModelParameters.Memory1_9_X0_i := 0;
stInitData.ModelParameters.Merge3_InitialOutput_p[0] := 0;
stInitData.ModelParameters.Merge3_InitialOutput_p[1] := 0;
stInitData.ModelParameters.Memory1_10_X0_m := 0;
stInitData.ModelParameters.Memory1_11_X0_m := 0;
stInitData.ModelParameters.Memory1_2_X0_m := 0;
stInitData.ModelParameters.Memory1_3_X0_m := 0;
stInitData.ModelParameters.Memory1_4_X0_m := 0;
stInitData.ModelParameters.Memory1_5_X0_m := 0;
stInitData.ModelParameters.Memory1_6_X0_m := 0;
stInitData.ModelParameters.Memory1_7_X0_m := 0;
stInitData.ModelParameters.Memory1_8_X0_m := 0;
stInitData.ModelParameters.Memory1_9_X0_m := 0;
stInitData.ModelParameters.Memory1_10_X0_o := 0;
stInitData.ModelParameters.Memory1_11_X0_o := 0;
stInitData.ModelParameters.Memory1_2_X0_o := 0;
stInitData.ModelParameters.Memory1_3_X0_o := 0;
stInitData.ModelParameters.Memory1_4_X0_o := 0;
stInitData.ModelParameters.Memory1_5_X0_o := 0;
stInitData.ModelParameters.Memory1_6_X0_o := 0;
stInitData.ModelParameters.Memory1_7_X0_o := 0;
stInitData.ModelParameters.Memory1_8_X0_o := 0;
stInitData.ModelParameters.Memory1_9_X0_o := 0;
stInitData.ModelParameters.Recorddata1yes0no_Value := 0;
stInitData.ModelParameters.Gain_Gain_ex := 1;
stInitData.ModelParameters.ExpConnectionDamping_Value := 0;
stInitData.ModelParameters.ExpConnectionStiffness_Value := 0;
stInitData.ModelParameters.ExpTrialRandom_Value := 1;
stInitData.ModelParameters.ExpTrialNumber_Value := 1;
stInitData.ModelParameters.ExpCondition_Value := 1;
stInitData.ModelParameters.FixPtConstant_Value := 1;
stInitData.ModelParameters.Output_InitialCondition := 0;
stInitData.ModelParameters.Constant_Value_d := 0;
stInitData.ModelParameters.ManualSwitch_CurrentSetting := 0;
stInitData.ModelParameters.ManualSwitch_CurrentSetting_f := 0;
stInitData.ModelParameters.ManualSwitch_CurrentSetting_fv := 0;
stInitData.ModelParameters.ManualSwitch_CurrentSetting_n := 0;
stInitData.ModelParameters.Memory1_X0 := 0;
stInitData.ModelParameters.Memory_X0_f := 0;
stInitData.ModelParameters.PreventAlgebraicLoop_X0 := 0;
stInitData.ModelParameters.PreventAlgebraicLoop_X0_a := 0;
stInitData.ModelParameters.Constant_Value_fn := 0;
stInitData.ModelParameters.AvoidAlgebraicLoop_X0 := 0;
stInitData.ModelParameters.AvoidAlgebraicLoop_X0_a := 0;
stInitData.ModelParameters.PreventAlgebraicLoop_X0_d := 0;
stInitData.ModelParameters.PreventAlgebraicLoop_X0_c := 0;
stInitData.ModelParameters.AvoidAlgebraicLoop_X0_g := 0;
stInitData.ModelParameters.AvoidAlgebraicLoop_X0_b := 0;
stInitData.ModelParameters.Constant_Value_il := 0;
stInitData.ModelParameters.Logic_table[0] := 0;
stInitData.ModelParameters.Logic_table[1] := 1;
stInitData.ModelParameters.Logic_table[2] := 0;
stInitData.ModelParameters.Logic_table[3] := 0;
stInitData.ModelParameters.Logic_table[4] := 1;
stInitData.ModelParameters.Logic_table[5] := 1;
stInitData.ModelParameters.Logic_table[6] := 0;
stInitData.ModelParameters.Logic_table[7] := 0;
stInitData.ModelParameters.Logic_table[8] := 1;
stInitData.ModelParameters.Logic_table[9] := 0;
stInitData.ModelParameters.Logic_table[10] := 1;
stInitData.ModelParameters.Logic_table[11] := 1;
stInitData.ModelParameters.Logic_table[12] := 0;
stInitData.ModelParameters.Logic_table[13] := 0;
stInitData.ModelParameters.Logic_table[14] := 0;
stInitData.ModelParameters.Logic_table[15] := 0;
stInitData.ModelParameters.Memory1_X0_m := 0;
stInitData.ModelParameters.Memory_X0_d := 0;
stInitData.ModelParameters.Constant_Value_ok := 0;
stInitData.ModelParameters.Constant_Value_oq := 0;
stInitData.ModelParameters.Logic_table_a[0] := 0;
stInitData.ModelParameters.Logic_table_a[1] := 1;
stInitData.ModelParameters.Logic_table_a[2] := 0;
stInitData.ModelParameters.Logic_table_a[3] := 0;
stInitData.ModelParameters.Logic_table_a[4] := 1;
stInitData.ModelParameters.Logic_table_a[5] := 1;
stInitData.ModelParameters.Logic_table_a[6] := 0;
stInitData.ModelParameters.Logic_table_a[7] := 0;
stInitData.ModelParameters.Logic_table_a[8] := 1;
stInitData.ModelParameters.Logic_table_a[9] := 0;
stInitData.ModelParameters.Logic_table_a[10] := 1;
stInitData.ModelParameters.Logic_table_a[11] := 1;
stInitData.ModelParameters.Logic_table_a[12] := 0;
stInitData.ModelParameters.Logic_table_a[13] := 0;
stInitData.ModelParameters.Logic_table_a[14] := 0;
stInitData.ModelParameters.Logic_table_a[15] := 0;
stInitData.ModelParameters.Memory1_X0_c := 0;
stInitData.ModelParameters.Memory_X0_dd := 0;
stInitData.ModelParameters.Constant_Value_ny := 0;
stInitData.ModelParameters.Constant_Value_g := 0;
stInitData.ModelParameters.Logic_table_b[0] := 0;
stInitData.ModelParameters.Logic_table_b[1] := 1;
stInitData.ModelParameters.Logic_table_b[2] := 0;
stInitData.ModelParameters.Logic_table_b[3] := 0;
stInitData.ModelParameters.Logic_table_b[4] := 1;
stInitData.ModelParameters.Logic_table_b[5] := 1;
stInitData.ModelParameters.Logic_table_b[6] := 0;
stInitData.ModelParameters.Logic_table_b[7] := 0;
stInitData.ModelParameters.Logic_table_b[8] := 1;
stInitData.ModelParameters.Logic_table_b[9] := 0;
stInitData.ModelParameters.Logic_table_b[10] := 1;
stInitData.ModelParameters.Logic_table_b[11] := 1;
stInitData.ModelParameters.Logic_table_b[12] := 0;
stInitData.ModelParameters.Logic_table_b[13] := 0;
stInitData.ModelParameters.Logic_table_b[14] := 0;
stInitData.ModelParameters.Logic_table_b[15] := 0;
stInitData.ModelParameters.Memory1_X0_h := 0;
stInitData.ModelParameters.Memory_X0_h := 0;
stInitData.ModelParameters.Constant_Value_a := 0;
stInitData.ModelParameters.Constant_Value_e := 0;
stInitData.ModelParameters.Logic_table_i[0] := 0;
stInitData.ModelParameters.Logic_table_i[1] := 1;
stInitData.ModelParameters.Logic_table_i[2] := 0;
stInitData.ModelParameters.Logic_table_i[3] := 0;
stInitData.ModelParameters.Logic_table_i[4] := 1;
stInitData.ModelParameters.Logic_table_i[5] := 1;
stInitData.ModelParameters.Logic_table_i[6] := 0;
stInitData.ModelParameters.Logic_table_i[7] := 0;
stInitData.ModelParameters.Logic_table_i[8] := 1;
stInitData.ModelParameters.Logic_table_i[9] := 0;
stInitData.ModelParameters.Logic_table_i[10] := 1;
stInitData.ModelParameters.Logic_table_i[11] := 1;
stInitData.ModelParameters.Logic_table_i[12] := 0;
stInitData.ModelParameters.Logic_table_i[13] := 0;
stInitData.ModelParameters.Logic_table_i[14] := 0;
stInitData.ModelParameters.Logic_table_i[15] := 0;
stInitData.ModelParameters.Memory_X0_k := 0;
stInitData.ModelParameters.Constant_Value_k3 := 0;
stInitData.ModelParameters.Logic_table_h[0] := 0;
stInitData.ModelParameters.Logic_table_h[1] := 1;
stInitData.ModelParameters.Logic_table_h[2] := 0;
stInitData.ModelParameters.Logic_table_h[3] := 0;
stInitData.ModelParameters.Logic_table_h[4] := 1;
stInitData.ModelParameters.Logic_table_h[5] := 1;
stInitData.ModelParameters.Logic_table_h[6] := 0;
stInitData.ModelParameters.Logic_table_h[7] := 0;
stInitData.ModelParameters.Logic_table_h[8] := 1;
stInitData.ModelParameters.Logic_table_h[9] := 0;
stInitData.ModelParameters.Logic_table_h[10] := 1;
stInitData.ModelParameters.Logic_table_h[11] := 1;
stInitData.ModelParameters.Logic_table_h[12] := 0;
stInitData.ModelParameters.Logic_table_h[13] := 0;
stInitData.ModelParameters.Logic_table_h[14] := 0;
stInitData.ModelParameters.Logic_table_h[15] := 0;
stInitData.ModelParameters.Memory_X0_hk := 0;
stInitData.ModelParameters.Memory_X0_l := 0;
stInitData.ModelParameters.Memory_X0_dj := 0;
stInitData.ModelParameters.Memory_X0_ca := 0;
stInitData.ModelParameters.ExpConnected_Value := 0;
stInitData.ModelParameters.LatchRising_k.Out_Y0 := 0;
stInitData.ModelParameters.LatchRising_e.Out_Y0 := 0;
stInitData.ModelParameters.run_n.x_ref_Y0[0] := 0;
stInitData.ModelParameters.run_n.x_ref_Y0[1] := 0;
stInitData.ModelParameters.run_n.xdot_ref_Y0[0] := 0;
stInitData.ModelParameters.run_n.xdot_ref_Y0[1] := 0;
stInitData.ModelParameters.run_n.xddot_ref_Y0[0] := 0;
stInitData.ModelParameters.run_n.xddot_ref_Y0[1] := 0;
stInitData.ModelParameters.homingactive_j.x_ref_Y0[0] := 0;
stInitData.ModelParameters.homingactive_j.x_ref_Y0[1] := 0;
stInitData.ModelParameters.homingactive_j.xdot_ref_Y0[0] := 0;
stInitData.ModelParameters.homingactive_j.xdot_ref_Y0[1] := 0;
stInitData.ModelParameters.homingactive_j.xddot_ref_Y0[0] := 0;
stInitData.ModelParameters.homingactive_j.xddot_ref_Y0[1] := 0;
stInitData.ModelParameters.homingactive_j.Constant1_Value := 1;
stInitData.ModelParameters.homingactive_j.One_Value := 1;
stInitData.ModelParameters.homingactive_j.RateLimiter_RisingLim := 0.0001;
stInitData.ModelParameters.homingactive_j.RateLimiter_FallingLim := -0.0002;
stInitData.ModelParameters.homingactive_j.RateLimiter_IC := 0;
stInitData.ModelParameters.homingactive_j.Saturation_UpperSat := 1;
stInitData.ModelParameters.homingactive_j.Saturation_LowerSat := 0;
stInitData.ModelParameters.homingactive_j.Gain1_Gain := 6.283185307179586;
stInitData.ModelParameters.homingactive_j.Gain2_Gain := 0.1591549430918953;
stInitData.ModelParameters.homingactive_j.Saturation_UpperSat_b := 1;
stInitData.ModelParameters.homingactive_j.Saturation_LowerSat_p := 0;
stInitData.ModelParameters.homingactive_j.Constant2_Value[0] := 0;
stInitData.ModelParameters.homingactive_j.Constant2_Value[1] := 0;
stInitData.ModelParameters.homingactive_j.Constant4_Value[0] := 0;
stInitData.ModelParameters.homingactive_j.Constant4_Value[1] := 0;
stInitData.ModelParameters.LatchRising_n.Out_Y0 := 0;
stInitData.ModelParameters.LatchRising_g.Out_Y0 := 0;
stInitData.ModelParameters.run.x_ref_Y0[0] := 0;
stInitData.ModelParameters.run.x_ref_Y0[1] := 0;
stInitData.ModelParameters.run.xdot_ref_Y0[0] := 0;
stInitData.ModelParameters.run.xdot_ref_Y0[1] := 0;
stInitData.ModelParameters.run.xddot_ref_Y0[0] := 0;
stInitData.ModelParameters.run.xddot_ref_Y0[1] := 0;
stInitData.ModelParameters.homingactive.x_ref_Y0[0] := 0;
stInitData.ModelParameters.homingactive.x_ref_Y0[1] := 0;
stInitData.ModelParameters.homingactive.xdot_ref_Y0[0] := 0;
stInitData.ModelParameters.homingactive.xdot_ref_Y0[1] := 0;
stInitData.ModelParameters.homingactive.xddot_ref_Y0[0] := 0;
stInitData.ModelParameters.homingactive.xddot_ref_Y0[1] := 0;
stInitData.ModelParameters.homingactive.Constant1_Value := 1;
stInitData.ModelParameters.homingactive.One_Value := 1;
stInitData.ModelParameters.homingactive.RateLimiter_RisingLim := 0.0001;
stInitData.ModelParameters.homingactive.RateLimiter_FallingLim := -0.0002;
stInitData.ModelParameters.homingactive.RateLimiter_IC := 0;
stInitData.ModelParameters.homingactive.Saturation_UpperSat := 1;
stInitData.ModelParameters.homingactive.Saturation_LowerSat := 0;
stInitData.ModelParameters.homingactive.Gain1_Gain := 6.283185307179586;
stInitData.ModelParameters.homingactive.Gain2_Gain := 0.1591549430918953;
stInitData.ModelParameters.homingactive.Saturation_UpperSat_b := 1;
stInitData.ModelParameters.homingactive.Saturation_LowerSat_p := 0;
stInitData.ModelParameters.homingactive.Constant2_Value[0] := 0;
stInitData.ModelParameters.homingactive.Constant2_Value[1] := 0;
stInitData.ModelParameters.homingactive.Constant4_Value[0] := 0;
stInitData.ModelParameters.homingactive.Constant4_Value[1] := 0;
stInitData.ContextInfoArr_0_TaskOidHdr.indexGroup := 0;
stInitData.ContextInfoArr_0_TaskOidHdr.indexOffset := 16#03002060;
stInitData.ContextInfoArr_0_TaskOidHdr.cbData := SIZEOF(stInitData.ContextInfoArr_0_TaskOid);
stInitData.ContextInfoArr_0_TaskPriorityHdr.indexGroup := 0;
stInitData.ContextInfoArr_0_TaskPriorityHdr.indexOffset := 16#03002070;
stInitData.ContextInfoArr_0_TaskPriorityHdr.cbData := SIZEOF(stInitData.ContextInfoArr_0_TaskPriority);
stInitData.ContextInfoArr_0_TaskCycleTimeNsHdr.indexGroup := 0;
stInitData.ContextInfoArr_0_TaskCycleTimeNsHdr.indexOffset := 16#03002080;
stInitData.ContextInfoArr_0_TaskCycleTimeNsHdr.cbData := SIZEOF(stInitData.ContextInfoArr_0_TaskCycleTimeNs);
stInitData.ContextInfoArr_0_TaskPortHdr.indexGroup := 0;
stInitData.ContextInfoArr_0_TaskPortHdr.indexOffset := 16#03002090;
stInitData.ContextInfoArr_0_TaskPortHdr.cbData := SIZEOF(stInitData.ContextInfoArr_0_TaskPort);
stInitData.ContextInfoArr_0_TaskSortOrderHdr.indexGroup := 0;
stInitData.ContextInfoArr_0_TaskSortOrderHdr.indexOffset := 16#030020b0;
stInitData.ContextInfoArr_0_TaskSortOrderHdr.cbData := SIZEOF(stInitData.ContextInfoArr_0_TaskSortOrder);
stInitData.Header.cbData := SIZEOF(stInitData)-SIZEOF(stInitData.Header);
stInitData.Header.uiElmCnt := 12;


// set pointer to InitData structure
SetInitDataInfo(ADR(stInitData));

// set DataArea information
SetDataAreaInfo(ADR(arrDataAreas),2);
arrDataAreas[1].nDataAreaId := 0;
arrDataAreas[1].nSize := SIZEOF(stInput);
arrDataAreas[1].pPlcVar := ADR(stInput);
arrDataAreas[1].pModuleProcImg := 0;
arrDataAreas[1].eDataAreaType := E_TcMatSimDataAreaType.InputDst;
arrDataAreas[2].nDataAreaId := 1;
arrDataAreas[2].nSize := SIZEOF(stOutput);
arrDataAreas[2].pPlcVar := ADR(stOutput);
arrDataAreas[2].pModuleProcImg := 0;
arrDataAreas[2].eDataAreaType := E_TcMatSimDataAreaType.OutputSrc;


// initialize basic interface pointers and return
FB_init := SUCCEEDED(Init(oid));
                  </xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Execute">
              <interface>
                <returnType>
                  <derived name="HRESULT" />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (SUCCEEDED(hResult)) THEN
  hResult := VerifyParameters();
END_IF

	// update DataArea information
SetDataAreaInfo(ADR(arrDataAreas),2);
	
	// call base method
Execute := SUPER^.Execute();
                  </xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="VerifyParameters">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
                <localVars>
                  <variable name="moduleCallByParam">
                    <type>
                      <derived name="TctModuleCallByType"/>
                    </type>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="VerifyParameters"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (bParametersVerified) THEN
  VerifyParameters := Tc2_System.E_HRESULTAdsErr.HRESULT_ADS_NOERROR;
ELSE
  VerifyParameters := GetObjPara(stInitData.CallByHdr.indexOffset,SIZEOF(moduleCallByParam),ADR(moduleCallByParam));
  
  // check the "CallBy" parameter to be set to "Module"
  IF (SUCCEEDED(VerifyParameters) AND (moduleCallByParam &lt;&gt; TctModuleCallByType.Module)) THEN
      VerifyParameters := Tc2_System.E_HRESULTAdsErr.INVALIDPARM;
  END_IF
  
  // set the parameters verified flag
  bParametersVerified := SUCCEEDED(VerifyParameters);
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="InitData">
              <interface>
                <returnType>
                  <derived name="ST_ModelBROSMattia_InitData" />
                </returnType>
              </interface>
              <SetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                      <Attributes>
                        <Attribute Name="hide" Value="" />
                      </Attributes>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">stInitData := InitData;</xhtml>
                  </ST>
                </body>
                <addData />
              </SetAccessor>
              <GetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                      <Attributes>
                        <Attribute Name="hide" Value="" />
                      </Attributes>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">InitData := stInitData;</xhtml>
                  </ST>
                </body>
                <addData />
              </GetAccessor>
              <addData />
            </Property>
          </data>
        </addData>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations />
  </instances>
</project>
