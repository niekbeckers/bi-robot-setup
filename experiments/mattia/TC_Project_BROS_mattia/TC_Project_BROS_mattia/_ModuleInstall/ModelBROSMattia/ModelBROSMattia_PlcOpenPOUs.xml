<?xml version="1.0" encoding="utf-8"?>
<!-- Beckhoff Automation GmbH & Co. KG -->
<!-- TwinCAT Target for MATLAB/Simulink 1.2.1228.0-->
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="Beckhoff Automation GmbH &amp; Co. KG" companyURL="www.beckhoff.com" productName="TwinCAT 3 Function - TE1400" productVersion="1.2.1228" creationDateTime="2017-06-16T09:54:39" />
  <contentHeader name="TC3_TE1400_GeneratedModule_ModelBROSMattia_FB">
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation />
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes>
      <dataType name="E_TcMatSimDataAreaType">
        <baseType>
          <enum>
            <values>
              <value name="NotSpecified" value="0"/>
              <value name="Standard"/>
              <value name="InputSrc"/>
              <value name="InputDst"/>
              <value name="OutputSrc"/>
              <value name="OutputDst"/>
              <value name="InternalDa"/>
              <value name="MArea"/>
              <value name="RetainDa"/>
            </values>
          </enum>
        </baseType>
        <addData/>
      </dataType>
      <dataType name="ST_TcMatSimObjectDataAreaInfo">
        <baseType>
          <struct>
            <variable name="pPlcVar">
              <type>
                <derived name="PVOID"/>
              </type>
            </variable>
            <variable name="pModuleProcImg">
              <type>
                <derived name="PVOID"/>
              </type>
            </variable>
            <variable name="nSize">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="nDataAreaId">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="eDataAreaType">
              <type>
                <derived name="E_TcMatSimDataAreaType"/>
              </type>
            </variable>
          </struct>
        </baseType>
        <addData/>
      </dataType>
      <dataType name="ST_ModelBROSMattia_InitData">
        <baseType>
          <struct>
            	<variable name="Header">
		<type>
			<derived name="TComInitDataHdr" />
		</type>
	</variable>
<variable name="CallByHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="CallBy">
	<type>
		<derived name="TctModuleCallByType" />
	</type>
</variable>
<variable name="ExecutionSequenceHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="ExecutionSequence">
	<type>
		<derived name="TctModuleExecutionSequenceType" />
	</type>
</variable>
<variable name="StepSizeHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="StepSize">
	<type>
		<derived name="TctStepSizeType" />
	</type>
</variable>
<variable name="ExtendedFileAccessOIDHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="ExtendedFileAccessOID">
	<type>
		<derived name="OTCID" />
	</type>
</variable>
<variable name="ExtModeParametersHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="ExtModeParameters">
	<type>
		<derived name="TctExtModeParametersType" />
	</type>
</variable>
<variable name="ExecuteModelCodeHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="ExecuteModelCode">
	<type>
		<derived name="BOOL" />
	</type>
</variable>
<variable name="ModelParametersHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="ModelParameters">
	<type>
		<derived name="P_model_bros_mattia_T" />
	</type>
</variable>
<variable name="ContextInfoArr_0_TaskOidHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="ContextInfoArr_0_TaskOid">
	<type>
		<derived name="OTCID" />
	</type>
</variable>
<variable name="ContextInfoArr_0_TaskPriorityHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="ContextInfoArr_0_TaskPriority">
	<type>
		<derived name="UDINT" />
	</type>
</variable>
<variable name="ContextInfoArr_0_TaskCycleTimeNsHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="ContextInfoArr_0_TaskCycleTimeNs">
	<type>
		<derived name="UDINT" />
	</type>
</variable>
<variable name="ContextInfoArr_0_TaskPortHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="ContextInfoArr_0_TaskPort">
	<type>
		<derived name="UINT" />
	</type>
</variable>
<variable name="ContextInfoArr_0_TaskSortOrderHdr">
	<type>
		<derived name="TComInitDataElmHdr" />
	</type>
</variable>
<variable name="ContextInfoArr_0_TaskSortOrder">
	<type>
		<derived name="UDINT" />
	</type>
</variable>

          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Value="4" Name="pack_mode"/>
            </Attributes>
          </data>
        </addData>
      </dataType>
 			<dataType name = "ST_ModelBROSMattia_Input">
				<baseType>
					<struct>
						<variable name="StatusWord_joint1">
							<type>
								<derived name="UINT" />
							</type>
						</variable>
						<variable name="MotorEncoder_joint1">
							<type>
								<derived name="DINT" />
							</type>
						</variable>
						<variable name="JointAbsEnc_joint1">
							<type>
								<derived name="DINT" />
							</type>
						</variable>
						<variable name="MotorCurrentAct_joint1">
							<type>
								<derived name="INT" />
							</type>
						</variable>
						<variable name="StatusWord_joint2">
							<type>
								<derived name="UINT" />
							</type>
						</variable>
						<variable name="MotorEncoder_joint2">
							<type>
								<derived name="DINT" />
							</type>
						</variable>
						<variable name="JointAbsEnc_joint2">
							<type>
								<derived name="DINT" />
							</type>
						</variable>
						<variable name="MotorCurrentAct_joint2">
							<type>
								<derived name="INT" />
							</type>
						</variable>
						<variable name="FTch1">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
						<variable name="FTch2">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
						<variable name="FTch3">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
						<variable name="FTch4">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
						<variable name="FTch5">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
						<variable name="FTch6">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
						<variable name="StatusWord_joint3">
							<type>
								<derived name="UINT" />
							</type>
						</variable>
						<variable name="MotorEncoder_joint3">
							<type>
								<derived name="DINT" />
							</type>
						</variable>
						<variable name="JointAbsEnc_joint3">
							<type>
								<derived name="DINT" />
							</type>
						</variable>
						<variable name="MotorCurrentAct_joint3">
							<type>
								<derived name="INT" />
							</type>
						</variable>
						<variable name="StatusWord_joint4">
							<type>
								<derived name="UINT" />
							</type>
						</variable>
						<variable name="MotorEncoder_joint4">
							<type>
								<derived name="DINT" />
							</type>
						</variable>
						<variable name="JointAbsEnc_joint4">
							<type>
								<derived name="DINT" />
							</type>
						</variable>
						<variable name="MotorCurrentAct_joint4">
							<type>
								<derived name="INT" />
							</type>
						</variable>
						<variable name="FTch7">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
						<variable name="FTch8">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
						<variable name="FTch9">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
						<variable name="FTch10">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
						<variable name="FTch11">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
						<variable name="FTch12">
							<type>
								<derived name="REAL" />
							</type>
						</variable>
					</struct>
				</baseType>
			</dataType>
			<dataType name = "ST_ModelBROSMattia_Output">
				<baseType>
					<struct>
						<variable name="EnableCircuit1">
							<type>
								<derived name="BOOL" />
							</type>
						</variable>
						<variable name="ControlWord_joint1">
							<type>
								<derived name="UINT" />
							</type>
						</variable>
						<variable name="ModesOfOperation_joint1">
							<type>
								<derived name="SINT" />
							</type>
						</variable>
						<variable name="TargetCurrent_joint1">
							<type>
								<derived name="INT" />
							</type>
						</variable>
						<variable name="ControlWord_joint2">
							<type>
								<derived name="UINT" />
							</type>
						</variable>
						<variable name="ModesOfOperation_joint2">
							<type>
								<derived name="SINT" />
							</type>
						</variable>
						<variable name="TargetCurrent_joint2">
							<type>
								<derived name="INT" />
							</type>
						</variable>
						<variable name="EnableCircuit2">
							<type>
								<derived name="BOOL" />
							</type>
						</variable>
						<variable name="ControlWord_joint3">
							<type>
								<derived name="UINT" />
							</type>
						</variable>
						<variable name="ModesOfOperation_joint3">
							<type>
								<derived name="SINT" />
							</type>
						</variable>
						<variable name="TargetCurrent_joint3">
							<type>
								<derived name="INT" />
							</type>
						</variable>
						<variable name="ControlWord_joint4">
							<type>
								<derived name="UINT" />
							</type>
						</variable>
						<variable name="ModesOfOperation_joint4">
							<type>
								<derived name="SINT" />
							</type>
						</variable>
						<variable name="TargetCurrent_joint4">
							<type>
								<derived name="INT" />
							</type>
						</variable>
						<variable name="pause_logger">
							<type>
								<derived name="BOOL" />
							</type>
						</variable>
						<variable name="DataToADS">
							<type>
								<derived name="matrix_9_real_T" />
							</type>
						</variable>
					</struct>
				</baseType>
			</dataType>

    </dataTypes>
    <pous>
      <pou name="FB_TcMatSimObject" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="bWriteFbInputValues">
              <type>
                <derived name="BOOL"/>
              </type>
              <initialValue>
                <simpleValue value="TRUE"/>
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> set this flag to write FB input values to the TcComObject's input DataAreas. This will overwrite the mapped input values before module execution. Set to FALSE to read the mapped input values from the TcComObject to the FB.</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="pDataAreas">
              <type>
                <pointer>
                  <baseType>
                    <derived name="ST_TcMatSimObjectDataAreaInfo"/>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> process image src and dst pointers and sizes</xhtml>
              </documentation>
            </variable>
            <variable name="nDataAreas">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="ipObjSrv">
              <type>
                <derived name="ITComObjectServer"/>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> global interface pointers</xhtml>
              </documentation>
            </variable>
            <variable name="ipTcComObj">
              <type>
                <derived name="ITComObject"/>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> object interface pointers</xhtml>
              </documentation>
            </variable>
            <variable name="ipTcCyclic">
              <type>
                <derived name="ITcCyclic"/>
              </type>
            </variable>
            <variable name="ipTcPostCyclic">
              <type>
                <derived name="ITcPostCyclic"/>
              </type>
            </variable>
            <variable name="ipTcAdi">
              <type>
                <derived name="ITcADI"/>
              </type>
            </variable>
            <variable name="ipTask">
              <type>
                <derived name="ITcTask"/>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> task interface pointers</xhtml>
              </documentation>
            </variable>
            <variable name="pInitData">
              <type>
                <pointer>
                  <baseType>
                    <derived name="TComInitDataHdr"/>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> initial parameters</xhtml>
              </documentation>
            </variable>
            <variable name="hResult">
              <type>
                <derived name="HRESULT"/>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> hResult of interface calls (0 if no error)</xhtml>
              </documentation>
            </variable>
            <variable name="moduleClsId">
              <type>
                <derived name="CLSID"/>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> module class ID</xhtml>
              </documentation>
            </variable>
            <variable name="assignedClsId">
              <type>
                <derived name="CLSID"/>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> expected/desired module class ID</xhtml>
              </documentation>
            </variable>
            <variable name="bClassIdVerified">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="bDynInstance">
              <type>
                <BOOL/>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> flag indicating whether the module instance was created dynamically</xhtml>
              </documentation>
            </variable>
            <variable name="eInitialObjState">
              <type>
                <derived name="TCOM_STATE"/>
              </type>
              <initialValue>
                <simpleValue value="TCOM_STATE.TCOM_STATE_INIT"/>
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> the object state at the time FB_init was called, FB_exit will try to switch to this state (only if this means to shift down)</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"/>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="ReleaseTcComInterface">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
                <localVars>
                  <variable name="nStateChangeCnt">
                    <type>
                      <DINT/>
                    </type>
                    <initialValue>
                      <simpleValue value="0"/>
                    </initialValue>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="ReleaseTcComInterface"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (ipTcComObj&lt;&gt;0) THEN
  WHILE (State&gt;eInitialObjState AND nStateChangeCnt&lt;1000) DO
    State := eInitialObjState;
    nStateChangeCnt := nStateChangeCnt+1;
  END_WHILE
  ReleaseObjInterfaces();
  IF (bDynInstance) THEN
    ReleaseTcComInterface := TC3_MODULE.FW_ObjMgr_DeleteInstance(ADR(ipTcComObj));
  ELSE
    ipTcComObj.TcRelease();
  END_IF
  ipTcComObj := 0;
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="ReleaseObjInterfaces">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="ReleaseObjInterfaces"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
// release interface pointers
IF (ipTcCyclic&lt;&gt;0) THEN
  ipTcCyclic.TcRelease();
  ipTcCyclic := 0;
END_IF
IF (ipTcPostCyclic&lt;&gt;0) THEN
  ipTcPostCyclic.TcRelease();
  ipTcPostCyclic := 0;
END_IF
IF (ipTcAdi&lt;&gt;0) THEN
  ipTcAdi.TcRelease();
  ipTcAdi := 0;
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Internal_SetObjState">
              <interface>
                <inputVars>
                  <variable name="hr">
                    <type>
                      <derived name="REFERENCE TO HRESULT"/>
                    </type>
                  </variable>
                  <variable name="nextState">
                    <type>
                      <derived name="TCOM_STATE"/>
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Protected="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="Internal_SetObjState"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
// verify class id
IF (SUCCEEDED(hr)) THEN
  hr := VerifyClassId();
END_IF

// switch object state
IF (SUCCEEDED(hr) AND nextState&gt;=TCOM_STATE_INIT) THEN
  IF (ipTcComObj=0) THEN
    hr := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
  END_IF
  IF (ipObjSrv=0) THEN
    hr := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
  END_IF
  IF (SUCCEEDED(hr)) THEN
    hr := ipTcComObj.TcSetObjState(nextState,ipObjSrv,pInitData);
  END_IF
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="FB_init">
              <interface>
                <returnType>
                  <BOOL/>
                </returnType>
                <inputVars>
                  <variable name="bInitRetains">
                    <type>
                      <BOOL/>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> init retain variables</xhtml>
                    </documentation>
                  </variable>
                  <variable name="bInCopyCode">
                    <type>
                      <BOOL/>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Online Change</xhtml>
                    </documentation>
                  </variable>
                  <variable name="oid">
                    <type>
                      <derived name="OTCID"/>
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="FB_init"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
FB_init := SUCCEEDED(Init(oid));
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="GetObjPara">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
                <inputVars>
                  <variable name="pid">
                    <type>
                      <derived name="PTCID"/>
                    </type>
                  </variable>
                  <variable name="nData">
                    <type>
                      <UDINT/>
                    </type>
                  </variable>
                  <variable name="pData">
                    <type>
                      <derived name="PVOID"/>
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="GetObjPara"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (ipTcComObj=0) THEN
  GetObjPara := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
END_IF

IF (SUCCEEDED(GetObjPara)) THEN
  GetObjPara := ipTcComObj.TcGetObjPara(pid:=pid,nData,pData,0);
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="QueryObjInterface">
              <interface>
                <inputVars>
                  <variable name="hr">
                    <type>
                      <derived name="REFERENCE TO HRESULT"/>
                    </type>
                  </variable>
                  <variable name="iid">
                    <type>
                      <derived name="REFERENCE TO IID"/>
                    </type>
                  </variable>
                  <variable name="pipItf">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="ITcUnknown"/>
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                </inputVars>
                <localVars constant="true">
                  <variable name="pNull">
                    <type>
                      <derived name="PVOID"/>
                    </type>
                    <initialValue>
                      <simpleValue value="0"/>
                    </initialValue>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="QueryObjInterface"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (SUCCEEDED(hr)) THEN
  IF (ipTcComObj=0) THEN
    hr := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
  ELSIF (pipItf^=ULINT_TO_DWORD(pNull)) THEN
    hr := ipTcComObj.TcQueryInterface(iid:= iid, pipItf:=pipItf);
  END_IF
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SaveOnlineParametersForInit">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
                <localVars>
                  <variable name="idx">
                    <type>
                      <UINT/>
                    </type>
                  </variable>
                  <variable name="pInitElemHdr">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="TComInitDataElmHdr"/>
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                  <variable name="pData">
                    <type>
                      <derived name="PVOID"/>
                    </type>
                  </variable>
                  <variable name="nData">
                    <type>
                      <UDINT/>
                    </type>
                  </variable>
                </localVars>
                <localVars constant="true">
                  <variable name="nInitDataAlignment">
                    <type>
                      <UDINT/>
                    </type>
                    <initialValue>
                      <simpleValue value="4"/>
                    </initialValue>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="SaveOnlineParametersForInit"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF (pInitData&lt;&gt;0) THEN
  pInitElemHdr := pInitData + SIZEOF(pInitData^);
  FOR idx:=1 TO pInitData^.uiElmCnt DO
    pData := pInitElemHdr + ULINT_TO_DWORD(SIZEOF(pInitElemHdr^));
    nData := pInitElemHdr^.cbData;
    SaveOnlineParametersForInit := GetObjPara(pInitElemHdr^.indexOffset,nData,pData);
    IF (FAILED(SaveOnlineParametersForInit)) THEN
      RETURN;
    END_IF
    pInitElemHdr := pData + (nInitDataAlignment*((nData + nInitDataAlignment - 1)/nInitDataAlignment));
  END_FOR
ELSE
	SaveOnlineParametersForInit := Tc2_System.E_HRESULTAdsErr.NOTINIT;
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="ResetHresult">
              <interface>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="ResetHresult"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">hResult := S_OK;</xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Execute">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
                <localVars>
                  <variable name="nDaIdx">
                    <type>
                      <UDINT/>
                    </type>
                  </variable>
                  <variable name="pCurDataArea">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="ST_TcMatSimObjectDataAreaInfo"/>
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="Execute"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (SUCCEEDED(hResult)) THEN
  hResult := VerifyClassId();
END_IF

IF (SUCCEEDED(hResult) AND State&lt;&gt;TCOM_STATE_OP) THEN
  hResult := Tc2_System.E_HRESULTAdsErr.NOTREADY;
END_IF

// get image pointers
IF (SUCCEEDED(hResult)) THEN
  GetImagePtrs(hResult);
END_IF

// copy inputs
IF (pDataAreas&lt;&gt;0 AND bWriteFbInputValues) THEN
  FOR nDaIdx:=0 TO nDataAreas-1 DO
    IF (FAILED(hResult))THEN
      CONTINUE;
    END_IF
    pCurDataArea := pDataAreas + nDaIdx*SIZEOF(ST_TcMatSimObjectDataAreaInfo);
    IF ((pCurDataArea^.eDataAreaType &lt;&gt; E_TcMatSimDataAreaType.InputDst))THEN
      CONTINUE;
    END_IF
    IF (pCurDataArea^.pModuleProcImg&lt;&gt;0 AND pCurDataArea^.pPlcVar&lt;&gt;0) THEN
      MEMCPY(pCurDataArea^.pModuleProcImg,pCurDataArea^.pPlcVar,pCurDataArea^.nSize);
    ELSE
      hResult := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
    END_IF
  END_FOR
END_IF

// call cycle update
IF (SUCCEEDED(hResult)) THEN
  IF (ipTcCyclic&lt;&gt;0) THEN
    hResult := ipTcCyclic.CycleUpdate(ipTask:= ipTask, ipCaller:= 0, context:= 0);
  ELSE
    hResult := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
  END_IF
END_IF

// copy outputs
IF (pDataAreas&lt;&gt;0) THEN
  FOR nDaIdx:=0 TO nDataAreas-1 DO
    IF (FAILED(hResult))THEN
      CONTINUE;
    END_IF
    pCurDataArea := pDataAreas + nDaIdx*SIZEOF(ST_TcMatSimObjectDataAreaInfo);
    IF ((pCurDataArea^.eDataAreaType = E_TcMatSimDataAreaType.OutputSrc) OR NOT bWriteFbInputValues) THEN
      IF (pCurDataArea^.pModuleProcImg&lt;&gt;0 AND pCurDataArea^.pPlcVar&lt;&gt;0) THEN
        MEMCPY(pCurDataArea^.pPlcVar,pCurDataArea^.pModuleProcImg,pCurDataArea^.nSize);
      ELSE
        hResult := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
      END_IF
    END_IF
  END_FOR
END_IF


// call post cyclic update
IF (SUCCEEDED(hResult)) THEN
  IF (ipTcPostCyclic&lt;&gt;0) THEN
    hResult := ipTcPostCyclic.PostCyclicUpdate(ipTask:= 0, ipCaller:= 0, context:= 0);
  ELSE
    hResult := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
  END_IF
END_IF

ReleaseImagePtrs();

Execute := hResult;
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="GetImagePtrs">
              <interface>
                <inputVars>
                  <variable name="hr">
                    <type>
                      <derived name="REFERENCE TO HRESULT"/>
                    </type>
                  </variable>
                </inputVars>
                <localVars>
                  <variable name="nDaIdx">
                    <type>
                      <UDINT/>
                    </type>
                  </variable>
                  <variable name="pCurDataArea">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="ST_TcMatSimObjectDataAreaInfo"/>
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="GetImagePtrs"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (ipTcAdi=0) THEN
  hr := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
END_IF
IF(State&lt;&gt;TCOM_STATE_OP)THEN
  hr := Tc2_System.E_HRESULTAdsErr.INVALIDSTATE;
END_IF


// get pointers to process images
IF (pDataAreas&lt;&gt;0) THEN
  FOR nDaIdx:=0 TO nDataAreas-1 DO
    pCurDataArea := pDataAreas + nDaIdx*SIZEOF(ST_TcMatSimObjectDataAreaInfo);
    IF (FAILED(hr))THEN
      CONTINUE;
    END_IF
    IF ((pCurDataArea^.eDataAreaType &lt;&gt; E_TcMatSimDataAreaType.InputDst) AND (pCurDataArea^.eDataAreaType &lt;&gt; E_TcMatSimDataAreaType.OutputSrc))THEN
      CONTINUE;
    END_IF
    IF (pCurDataArea^.pModuleProcImg=0 AND pCurDataArea^.nSize&gt;0) THEN
      hr := ipTcAdi.GetImagePtr(size:= pCurDataArea^.nSize , offs:=0 , adi_x:=pCurDataArea^.nDataAreaId , ppData:=ADR(pCurDataArea^.pModuleProcImg));
    END_IF
  END_FOR
END_IF

IF (FAILED(hr)) THEN
  ReleaseImagePtrs();
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="VerifyClassId" ObjectId="239bccd7-2f3a-47e3-959e-96b59c3eff01">
              <interface>
                <returnType>
                  <derived name="HRESULT" />
                </returnType>
                <localVars>
                  <variable name="emptyClsId">
                    <type>
                      <derived name="CLSID" />
                    </type>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true" />
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="VerifyClassId" />
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">memset(ADR(emptyClsId),0,SIZEOF(emptyClsId));
IF (bClassIdVerified) THEN
  // class ID was already verified
  VerifyClassId := Tc2_System.E_HRESULTAdsErr.HRESULT_ADS_NOERROR;
ELSIF (memcmp(ADR(assignedClsId),ADR(emptyClsId),SIZEOF(assignedClsId))=0) THEN
  // skip class ID verification if no assignedClsId specified
  VerifyClassId := Tc2_System.E_HRESULTAdsErr.HRESULT_ADS_NOERROR;
ELSE
  // verify class ID
  VerifyClassId := ReadModuleClassId();

  IF (SUCCEEDED(VerifyClassId)) THEN
    IF (memcmp(ADR(assignedClsId),ADR(moduleClsId),SIZEOF(assignedClsId))&lt;&gt;0) THEN
     VerifyClassId := Tc2_System.E_HRESULTAdsErr.INVALIDCLSID;
    END_IF
  END_IF
  bClassIdVerified := SUCCEEDED(VerifyClassId);
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SetObjPara">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
                <inputVars>
                  <variable name="pid">
                    <type>
                      <derived name="PTCID"/>
                    </type>
                  </variable>
                  <variable name="nData">
                    <type>
                      <UDINT/>
                    </type>
                  </variable>
                  <variable name="pData">
                    <type>
                      <derived name="PVOID"/>
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="SetObjPara"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (ipTcComObj=0) THEN
  SetObjPara := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
END_IF

IF (SUCCEEDED(SetObjPara)) THEN
  SetObjPara := ipTcComObj.TcSetObjPara(pid:=pid,nData,pData,0);
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="QueryTcComInterface">
              <interface>
                <inputVars>
                  <variable name="hr">
                    <type>
                      <derived name="REFERENCE TO HRESULT"/>
                    </type>
                  </variable>
                  <variable name="oid">
                    <type>
                      <derived name="OTCID"/>
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="QueryTcComInterface"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (ipObjSrv=0) THEN
  hr := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
END_IF

IF (SUCCEEDED(hr) AND ipTcComObj=0) THEN
  bDynInstance := FALSE;
  IF(oid&gt;0) THEN
    // query interface of existing object
    hr := ipObjSrv.TcQueryObjectInterface(oid,IID_ITComObject,ADR(ipTcComObj));
  ELSE
    // create new instance and get the object interface
    hr := ipObjSrv.TcCreateInstance(assignedClsId,IID_ITComObject,ADR(ipTcComObj));
    IF (SUCCEEDED(hr)) THEN
      bDynInstance := TRUE;
      hr := ipTcComObj.TcSetObjectId(OTCID_CreateNewId);
    END_IF
  END_IF
  IF (SUCCEEDED(hr)) THEN
    eInitialObjState := State;
  END_IF
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="ReleaseImagePtrs">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
                <localVars>
                  <variable name="nDaIdx">
                    <type>
                      <UDINT/>
                    </type>
                  </variable>
                  <variable name="pCurDataArea">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="ST_TcMatSimObjectDataAreaInfo"/>
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="ReleaseImagePtrs"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (ipTcAdi=0) THEN
  ReleaseImagePtrs := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
END_IF

IF (SUCCEEDED(ReleaseImagePtrs) AND pDataAreas&lt;&gt;0) THEN
  // release pointers to the simulink module process images
  FOR nDaIdx:=0 TO nDataAreas-1 DO
    pCurDataArea := pDataAreas + nDaIdx*SIZEOF(ST_TcMatSimObjectDataAreaInfo);

    IF (pCurDataArea^.pModuleProcImg&lt;&gt;0) THEN
      ipTcAdi.ReleaseImagePtr(pData:=pCurDataArea^.pModuleProcImg);
      pCurDataArea^.pModuleProcImg := 0;
    END_IF
  END_FOR
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="FB_exit">
              <interface>
                <returnType>
                  <BOOL/>
                </returnType>
                <inputVars>
                  <variable name="bInCopyCode">
                    <type>
                      <BOOL/>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Online Change</xhtml>
                    </documentation>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="FB_exit"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (NOT bInCopyCode) THEN
  IF (ipObjSrv&lt;&gt;0) THEN
    ipObjSrv.TcRelease();
    ipObjSrv := 0;
  END_IF

  ReleaseTcComInterface();
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="InitObjName">
              <interface>
                <inputVars>
                  <variable name="hr">
                    <type>
                      <derived name="REFERENCE TO HRESULT"/>
                    </type>
                  </variable>
                </inputVars>
                <localVars>
                  <variable name="objectName">
                    <type>
                      <string length="255"/>
                    </type>
                    <initialValue>
                      <simpleValue value="'TempContr_PlcRtFbInstance'"/>
                    </initialValue>
                  </variable>
                  <variable name="oid">
                    <type>
                      <derived name="OTCID"/>
                    </type>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="InitObjName"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (SUCCEEDED(hr)) THEN
  hr := ipTcComObj.TcGetObjectId(oid);
END_IF

IF (SUCCEEDED(hr) and bDynInstance) THEN
  objectName := TC2_STANDARD.CONCAT(objectName,'_');
  objectName := TC2_STANDARD.CONCAT(objectName,UDINT_TO_STRING(oid));
  hr := ipTcComObj.TcSetObjectName(ADR(objectName));
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SetObjState">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
                <inputVars>
                  <variable name="finalState">
                    <type>
                      <derived name="TCOM_STATE"/>
                    </type>
                  </variable>
                </inputVars>
                <localVars>
                  <variable name="bShiftUp">
                    <type>
                      <BOOL/>
                    </type>
                  </variable>
                  <variable name="bShiftDown">
                    <type>
                      <BOOL/>
                    </type>
                  </variable>
                  <variable name="currentState">
                    <type>
                      <derived name="TCOM_STATE"/>
                    </type>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="SetObjState"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
currentState := State;

bShiftUp := finalState&gt;currentState;
bShiftDown := finalState&lt;currentState;

// do not switch up on error
IF (FAILED(hresult)) THEN
  bShiftUp := FALSE;
END_IF
// reset existing error on switching down
IF (bShiftDown) THEN
  ResetHresult();
END_IF

// prepared state switch
CASE currentState OF
  TCOM_STATE_INIT:
    IF(bShiftUp) THEN
      QueryTcComInterface(hResult,0);
      Internal_SetObjState(hResult,TCOM_STATE.TCOM_STATE_PREOP);
      InitObjName(hResult);
    END_IF

  TCOM_STATE_PREOP:
    IF(bShiftUp) THEN
      Internal_SetObjState(hResult,TCOM_STATE.TCOM_STATE_SAFEOP);
      QueryObjInterfaces(hResult);
    ELSIF (bShiftDown) THEN
      Internal_SetObjState(hResult,TCOM_STATE.TCOM_STATE_INIT);
    END_IF

  TCOM_STATE_SAFEOP:
    IF(bShiftUp) THEN
      Internal_SetObjState(hResult,TCOM_STATE.TCOM_STATE_OP);
      QueryObjInterfaces(hResult);
    ELSIF (bShiftDown) THEN
      Internal_SetObjState(hResult,TCOM_STATE.TCOM_STATE_PREOP);
      ReleaseObjInterfaces();
    END_IF


  TCOM_STATE_OP:
    IF (bShiftDown) THEN
      Internal_SetObjState(hResult,TCOM_STATE.TCOM_STATE_SAFEOP);
    END_IF
END_CASE

SetObjState := hResult;
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="QueryObjInterfaces">
              <interface>
                <inputVars>
                  <variable name="hr">
                    <type>
                      <derived name="REFERENCE TO HRESULT"/>
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="QueryObjInterfaces"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF(State&lt;TCOM_STATE_PREOP)THEN
  hr := Tc2_System.E_HRESULTAdsErr.INVALIDSTATE;
END_IF

//cyclic interface
QueryObjInterface(hr,IID_ITCCYCLIC,ADR(ipTcCyclic));
//post cyclic interface
QueryObjInterface(hr,IID_ITCPOSTCYCLIC,ADR(ipTcPostCyclic));
//adi interface
QueryObjInterface(hr,IID_ITcADI,ADR(ipTcAdi));
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Init">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
                <inputVars>
                  <variable name="oid">
                    <type>
                      <derived name="OTCID"/>
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Protected="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="Init"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
// preinitialize variables
memset(ADR(moduleClsId),0,SIZEOF(moduleClsId));
bClassIdVerified := FALSE;
hResult := Tc2_System.E_HRESULTAdsErr.HRESULT_ADS_NOERROR;

// get object server
IF (ipObjSrv=0) THEN
  hResult := FW_ObjMgr_GetObjectServer(_AppInfo.ObjId,ADR(ipObjSrv));
END_IF

// try to get object interfaces
IF (SUCCEEDED(hresult)) THEN
  QueryTcComInterface(hResult,oid);
END_IF

// verify class id
IF (SUCCEEDED(hresult)) THEN
  hresult := VerifyClassId();
END_IF

// query interfaces, if the current state is higher than INIT
IF (SUCCEEDED(hresult) AND State&gt;TCOM_STATE.TCOM_STATE_INIT) THEN
  QueryObjInterfaces(hResult);
END_IF

// return value
Init := hresult;
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="ReadModuleClassId" ObjectId="4430359c-9c39-4c2f-b0ca-4e5015b398ea">
              <interface>
                <returnType>
                  <derived name="HRESULT" />
                </returnType>
                <localVars>
                  <variable name="emptyClsId">
                    <type>
                      <derived name="CLSID" />
                    </type>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="ReadModuleClassId"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">memset(ADR(emptyClsId),0,SIZEOF(emptyClsId));
IF (memcmp(ADR(moduleClsId),ADR(emptyClsId),SIZEOF(moduleClsId))=0) THEN
  IF (ipTcComObj=0) THEN
    ReadModuleClassId := Tc2_System.E_HRESULTAdsErr.NOINTERFACE;
  END_IF

  //objectClsId := clsid;
  IF (SUCCEEDED(ReadModuleClassId)) THEN
    ReadModuleClassId := ipTcComObj.GetClassId(moduleClsId);
  END_IF
END_IF</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="AssignClassId" ObjectId="70aee05c-b7c0-4a1a-90db-a70048b378df">
              <interface>
                <inputVars>
                  <variable name="clsId">
                    <type>
                      <derived name="CLSID" />
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="AssignClassId" />
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">assignedClsId := clsId;
bClassIdVerified := false;
                  </xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD PUBLIC AssignClassId
VAR_INPUT
	clsId : CLSID;
END_VAR
                </xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="Error">
              <interface>
                <returnType>
                  <BOOL/>
                </returnType>
              </interface>
              <GetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                      <Attributes>
                        <Attribute Name="hide" Value=""/>
                      </Attributes>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">Error := FAILED(hResult);</xhtml>
                  </ST>
                </body>
                <addData/>
              </GetAccessor>
              <addData/>
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SetDataAreaInfo" ObjectId="11a4ecef-f4b8-4ea3-b32a-f5c95d2a16a3">
              <interface>
                <inputVars>
                  <variable name="pDataAreas">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="ST_TcMatSimObjectDataAreaInfo" />
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                  <variable name="nDataAreas">
                    <type>
                      <UDINT />
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="SetDataAreaInfo" />
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
THIS^.nDataAreas := nDataAreas;
THIS^.pDataAreas := pDataAreas;
                  </xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">
METHOD PUBLIC SetDataAreaInfo
VAR_INPUT
  pDataAreas: POINTER TO ST_TcMatSimObjectDataAreaInfo;
  nDataAreas: UDINT;
END_VAR
                </xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SetInitDataInfo" ObjectId="a4b3eb8c-b58b-4cd6-a9be-95800eb47e3c">
              <interface>
                <inputVars>
                  <variable name="pInitData">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="TComInitDataHdr" />
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="SetInitDataInfo" />
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">this^.pInitData := pInitData;</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">
METHOD PUBLIC SetInitDataInfo
VAR_INPUT
  pInitData : POINTER TO TComInitDataHdr;
END_VAR
                </xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="ClassId">
              <interface>
                <returnType>
                  <derived name="CLSID"/>
                </returnType>
              </interface>
              <GetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                      <Attributes>
                        <Attribute Name="hide" Value=""/>
                      </Attributes>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">hResult := ReadModuleClassId();
ClassId := moduleClsId;
                    </xhtml>
                  </ST>
                </body>
                <addData/>
              </GetAccessor>
              <addData/>
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="State">
              <interface>
                <returnType>
                  <derived name="TCOM_STATE"/>
                </returnType>
              </interface>
              <SetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                      <Attributes>
                        <Attribute Name="hide" Value=""/>
                      </Attributes>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">SetObjState(State);</xhtml>
                  </ST>
                </body>
                <addData/>
              </SetAccessor>
              <GetAccessor>
                <interface>
                  <localVars>
                    <variable name="hr">
                      <type>
                        <derived name="HRESULT"/>
                      </type>
                      <initialValue>
                        <simpleValue value="S_OK"/>
                      </initialValue>
                    </variable>
                    <variable name="eObjState">
                      <type>
                        <derived name="TCOM_STATE"/>
                      </type>
                    </variable>
                  </localVars>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                      <Attributes>
                        <Attribute Name="hide" Value=""/>
                      </Attributes>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (ipTcComObj&lt;&gt;0) THEN
  hr := ipTcComObj.TcGetObjState(ADR(eObjState));
IF (FAILED(hr)) THEN
  eObjState := TCOM_STATE.TCOM_STATE_INIT;
END_IF
ELSE
  eObjState := TCOM_STATE.TCOM_STATE_INIT;
END_IF
State := eObjState;
                    </xhtml>
                  </ST>
                </body>
                <addData/>
              </GetAccessor>
              <addData/>
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="ErrorCode">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
              </interface>
              <GetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                      <Attributes>
                        <Attribute Name="hide" Value=""/>
                      </Attributes>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">ErrorCode := hResult;</xhtml>
                  </ST>
                </body>
                <addData/>
              </GetAccessor>
              <addData/>
            </Property>
          </data>
        </addData>
      </pou>
      <pou name="FB_ModelBROSMattia" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="stInput">
	<type>
		<derived name="ST_ModelBROSMattia_Input" />
	</type>
</variable>

          </inputVars>
          <outputVars>
            <variable name="stOutput">
	<type>
		<derived name="ST_ModelBROSMattia_Output" />
	</type>
</variable>

          </outputVars>
          <localVars>
            <variable name="stInitData">
              <type>
                <derived name="ST_ModelBROSMattia_InitData" />
              </type>
            </variable>
            <variable name="arrDataAreas">
              <type>
                <array>
                  <dimension lower="1" upper="2"/>
                  <baseType>
                    <derived name="ST_TcMatSimObjectDataAreaInfo"/>
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="bParametersVerified">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
              <Inheritance>
                <Extends>FB_TcMatSimObject</Extends>
              </Inheritance>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="TcDependOnClassFactory" Value="ModelBROSMattia" />
              </Attributes>
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Internal_SetObjState">
              <interface>
                <inputVars>
                  <variable name="hr">
                    <type>
                      <derived name="REFERENCE TO HRESULT"/>
                    </type>
                  </variable>
                  <variable name="nextState">
                    <type>
                      <derived name="TCOM_STATE"/>
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Protected="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="Internal_SetObjState"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
// update pointer to InitData structure
SetInitDataInfo(ADR(stInitData));
// call base method
SUPER^.Internal_SetObjState(hr,nextState);
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>

          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SaveOnlineParametersForInit">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
                <localVars>
                  <variable name="idx">
                    <type>
                      <UINT/>
                    </type>
                  </variable>
                  <variable name="pInitElemHdr">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="TComInitDataElmHdr"/>
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                  <variable name="pData">
                    <type>
                      <derived name="PVOID"/>
                    </type>
                  </variable>
                  <variable name="nData">
                    <type>
                      <UDINT/>
                    </type>
                  </variable>
                </localVars>
                <localVars constant="true">
                  <variable name="nInitDataAlignment">
                    <type>
                      <UDINT/>
                    </type>
                    <initialValue>
                      <simpleValue value="4"/>
                    </initialValue>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="SaveOnlineParametersForInit"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
// update pointer to InitData structure
SetInitDataInfo(ADR(stInitData));
// call base method
SaveOnlineParametersForInit := SUPER^.SaveOnlineParametersForInit();
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="FB_init">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="bInitRetains">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> if TRUE, the retain variables are initialized (warm start / cold start)</xhtml>
                    </documentation>
                  </variable>
                  <variable name="bInCopyCode">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> if TRUE, the instance afterwards gets moved into the copy code (online change)</xhtml>
                    </documentation>
                  </variable>
                  <variable name="oid">
                    <type>
                      <derived name="OTCID" />
                    </type>
                  </variable>
                </inputVars>
                <localVars>
                  <variable name="clsId">
                    <type>
                      <derived name="CLSID"/>
                    </type>
                  </variable>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
// initialize flags
bParametersVerified := false;
                    
// set module class id for compatibility check
clsId.Data1 := 16#e3c41006;
clsId.Data2 := 16#0b13;
clsId.Data3 := 16#46c4;
clsId.Data4[0] := 16#9b;
clsId.Data4[1] := 16#79;
clsId.Data4[2] := 16#90;
clsId.Data4[3] := 16#33;
clsId.Data4[4] := 16#2a;
clsId.Data4[5] := 16#f5;
clsId.Data4[6] := 16#27;
clsId.Data4[7] := 16#c2;

AssignClassId(clsId);
                    
// initialize InitData structure with default values              
stInitData.CallByHdr.indexGroup := 0;
stInitData.CallByHdr.indexOffset := 16#00000000;
stInitData.CallByHdr.cbData := SIZEOF(stInitData.CallBy);
stInitData.CallBy := TctModuleCallByType.CyclicTask;
stInitData.ExecutionSequenceHdr.indexGroup := 0;
stInitData.ExecutionSequenceHdr.indexOffset := 16#00000001;
stInitData.ExecutionSequenceHdr.cbData := SIZEOF(stInitData.ExecutionSequence);
stInitData.ExecutionSequence := TctModuleExecutionSequenceType.StateUpdateAfterOutputMapping;
stInitData.StepSizeHdr.indexGroup := 0;
stInitData.StepSizeHdr.indexOffset := 16#00000002;
stInitData.StepSizeHdr.cbData := SIZEOF(stInitData.StepSize);
stInitData.StepSize := TctStepSizeType.RequireMatchingTaskCycleTime;
stInitData.ExtendedFileAccessOIDHdr.indexGroup := 0;
stInitData.ExtendedFileAccessOIDHdr.indexOffset := 16#00000005;
stInitData.ExtendedFileAccessOIDHdr.cbData := SIZEOF(stInitData.ExtendedFileAccessOID);
stInitData.ExtendedFileAccessOID := 0;
stInitData.ExtModeParametersHdr.indexGroup := 0;
stInitData.ExtModeParametersHdr.indexOffset := 16#bf002000;
stInitData.ExtModeParametersHdr.cbData := SIZEOF(stInitData.ExtModeParameters);
stInitData.ExtModeParameters.ConnectionTimeout := 3;
stInitData.ExtModeParameters.InitIncomingPktBufferSize := 10000;
stInitData.ExtModeParameters.InitOutgoingPktBufferSize := 10000;
stInitData.ExtModeParameters.Activated := 1;
stInitData.ExtModeParameters.AllowExecutionCommands := 1;
stInitData.ExtModeParameters.WaitForStartCommand := 0;
stInitData.ExtModeParameters.AllowParameterChange := 1;
stInitData.ExecuteModelCodeHdr.indexGroup := 0;
stInitData.ExecuteModelCodeHdr.indexOffset := 16#00000008;
stInitData.ExecuteModelCodeHdr.cbData := SIZEOF(stInitData.ExecuteModelCode);
stInitData.ExecuteModelCode := 1;
stInitData.ModelParametersHdr.indexGroup := 0;
stInitData.ModelParametersHdr.indexOffset := 16#83000000;
stInitData.ModelParametersHdr.cbData := SIZEOF(stInitData.ModelParameters);
stInitData.ModelParameters.FM1.HomeLocationOpSpace[0] := 0;
stInitData.ModelParameters.FM1.HomeLocationOpSpace[1] := 0.25;
stInitData.ModelParameters.FM1.HomeLocationSize := 0.0025;
stInitData.ModelParameters.FM1.NominalPositionOpSpace[0] := 0;
stInitData.ModelParameters.FM1.NominalPositionOpSpace[1] := 0.25;
stInitData.ModelParameters.FM1.DynModParams[0] := 0.0009446018;
stInitData.ModelParameters.FM1.DynModParams[1] := 0.0005536255;
stInitData.ModelParameters.FM1.DynModParams[2] := 0.1102026;
stInitData.ModelParameters.FM1.DynModParams[3] := 0.1175426;
stInitData.ModelParameters.FM1.DynModParams[4] := -0.006234047;
stInitData.ModelParameters.FM1.DynModParams[5] := 0.1037213;
stInitData.ModelParameters.FM1.DynModParams[6] := 0.003853734;
stInitData.ModelParameters.FM1.Actuator1.JointAbsoluteEncoderCounts_rev := 65536;
stInitData.ModelParameters.FM1.Actuator1.AbsEncoderOffset := 5.303223547422882;
stInitData.ModelParameters.FM1.Actuator1.MotorEncoderCounts_rev := 4096;
stInitData.ModelParameters.FM1.Actuator1.FOAWNoiseLevel := 0.0009;
stInitData.ModelParameters.FM1.Actuator1.transmissionRatio := 7.2976;
stInitData.ModelParameters.FM1.Actuator1.motorTorqueConstant := 0.08486;
stInitData.ModelParameters.FM1.Actuator1.drivePeakCurrent := 20;
stInitData.ModelParameters.FM1.Actuator1.AbsoluteMaximumTorque_Nm := 8;
stInitData.ModelParameters.FM1.Actuator1.TransmissionSlipAngleGuardMax := 0.08726646259971647;
stInitData.ModelParameters.FM1.Actuator1.JointPositionGuardMin := -0.4363323129985824;
stInitData.ModelParameters.FM1.Actuator1.JointPositionGuardMax := 2.356194490192345;
stInitData.ModelParameters.FM1.Actuator1.FilterButterA[0] := 1;
stInitData.ModelParameters.FM1.Actuator1.FilterButterA[1] := -1.475480443592646;
stInitData.ModelParameters.FM1.Actuator1.FilterButterA[2] := 0.5869195080611904;
stInitData.ModelParameters.FM1.Actuator1.FilterButterB[0] := 0.02785976611713603;
stInitData.ModelParameters.FM1.Actuator1.FilterButterB[1] := 0.05571953223427206;
stInitData.ModelParameters.FM1.Actuator1.FilterButterB[2] := 0.02785976611713603;
stInitData.ModelParameters.FM1.Actuator2.JointAbsoluteEncoderCounts_rev := 65536;
stInitData.ModelParameters.FM1.Actuator2.AbsEncoderOffset := 7.340133727728301;
stInitData.ModelParameters.FM1.Actuator2.MotorEncoderCounts_rev := 4096;
stInitData.ModelParameters.FM1.Actuator2.FOAWNoiseLevel := 0.0009;
stInitData.ModelParameters.FM1.Actuator2.transmissionRatio := 7.331;
stInitData.ModelParameters.FM1.Actuator2.motorTorqueConstant := 0.08486;
stInitData.ModelParameters.FM1.Actuator2.drivePeakCurrent := 20;
stInitData.ModelParameters.FM1.Actuator2.AbsoluteMaximumTorque_Nm := 8;
stInitData.ModelParameters.FM1.Actuator2.TransmissionSlipAngleGuardMax := 0.08726646259971647;
stInitData.ModelParameters.FM1.Actuator2.JointPositionGuardMin := 0.7853981633974483;
stInitData.ModelParameters.FM1.Actuator2.JointPositionGuardMax := 3.577924966588375;
stInitData.ModelParameters.FM1.Actuator2.FilterButterA[0] := 1;
stInitData.ModelParameters.FM1.Actuator2.FilterButterA[1] := -1.475480443592646;
stInitData.ModelParameters.FM1.Actuator2.FilterButterA[2] := 0.5869195080611904;
stInitData.ModelParameters.FM1.Actuator2.FilterButterB[0] := 0.02785976611713603;
stInitData.ModelParameters.FM1.Actuator2.FilterButterB[1] := 0.05571953223427206;
stInitData.ModelParameters.FM1.Actuator2.FilterButterB[2] := 0.02785976611713603;
stInitData.ModelParameters.FM1.FTSensor.MaxAllowableForcesTorqueSensor[0] := 70;
stInitData.ModelParameters.FM1.FTSensor.MaxAllowableForcesTorqueSensor[1] := 70;
stInitData.ModelParameters.FM1.FTSensor.MaxAllowableForcesTorqueSensor[2] := 140;
stInitData.ModelParameters.FM1.FTSensor.MaxAllowableForcesTorqueSensor[3] := 1.4;
stInitData.ModelParameters.FM1.FTSensor.MaxAllowableForcesTorqueSensor[4] := 1.4;
stInitData.ModelParameters.FM1.FTSensor.MaxAllowableForcesTorqueSensor[5] := 1.4;
stInitData.ModelParameters.FM1.FTSensor.TransformationMatrixSide := 1;
stInitData.ModelParameters.FM2.HomeLocationOpSpace[0] := 0;
stInitData.ModelParameters.FM2.HomeLocationOpSpace[1] := 0.25;
stInitData.ModelParameters.FM2.HomeLocationSize := 0.0025;
stInitData.ModelParameters.FM2.NominalPositionOpSpace[0] := 0;
stInitData.ModelParameters.FM2.NominalPositionOpSpace[1] := 0.25;
stInitData.ModelParameters.FM2.DynModParams[0] := 0.001117256;
stInitData.ModelParameters.FM2.DynModParams[1] := 0.0012246;
stInitData.ModelParameters.FM2.DynModParams[2] := 0.08800769;
stInitData.ModelParameters.FM2.DynModParams[3] := 0.1073326;
stInitData.ModelParameters.FM2.DynModParams[4] := 0.001462254;
stInitData.ModelParameters.FM2.DynModParams[5] := 0.1416925;
stInitData.ModelParameters.FM2.DynModParams[6] := 0.006135432;
stInitData.ModelParameters.FM2.Actuator1.JointAbsoluteEncoderCounts_rev := 65536;
stInitData.ModelParameters.FM2.Actuator1.AbsEncoderOffset := 3.23580094055001;
stInitData.ModelParameters.FM2.Actuator1.MotorEncoderCounts_rev := 4096;
stInitData.ModelParameters.FM2.Actuator1.FOAWNoiseLevel := 0.0009;
stInitData.ModelParameters.FM2.Actuator1.transmissionRatio := 7.3607;
stInitData.ModelParameters.FM2.Actuator1.motorTorqueConstant := 0.08486;
stInitData.ModelParameters.FM2.Actuator1.drivePeakCurrent := 20;
stInitData.ModelParameters.FM2.Actuator1.AbsoluteMaximumTorque_Nm := 8;
stInitData.ModelParameters.FM2.Actuator1.TransmissionSlipAngleGuardMax := 0.08726646259971647;
stInitData.ModelParameters.FM2.Actuator1.JointPositionGuardMin := -0.4363323129985824;
stInitData.ModelParameters.FM2.Actuator1.JointPositionGuardMax := 2.356194490192345;
stInitData.ModelParameters.FM2.Actuator1.FilterButterA[0] := 1;
stInitData.ModelParameters.FM2.Actuator1.FilterButterA[1] := -1.475480443592646;
stInitData.ModelParameters.FM2.Actuator1.FilterButterA[2] := 0.5869195080611904;
stInitData.ModelParameters.FM2.Actuator1.FilterButterB[0] := 0.02785976611713603;
stInitData.ModelParameters.FM2.Actuator1.FilterButterB[1] := 0.05571953223427206;
stInitData.ModelParameters.FM2.Actuator1.FilterButterB[2] := 0.02785976611713603;
stInitData.ModelParameters.FM2.Actuator2.JointAbsoluteEncoderCounts_rev := 65536;
stInitData.ModelParameters.FM2.Actuator2.AbsEncoderOffset := 4.445224359590367;
stInitData.ModelParameters.FM2.Actuator2.MotorEncoderCounts_rev := 4096;
stInitData.ModelParameters.FM2.Actuator2.FOAWNoiseLevel := 0.0009;
stInitData.ModelParameters.FM2.Actuator2.transmissionRatio := 7.32214;
stInitData.ModelParameters.FM2.Actuator2.motorTorqueConstant := 0.08486;
stInitData.ModelParameters.FM2.Actuator2.drivePeakCurrent := 20;
stInitData.ModelParameters.FM2.Actuator2.AbsoluteMaximumTorque_Nm := 8;
stInitData.ModelParameters.FM2.Actuator2.TransmissionSlipAngleGuardMax := 0.08726646259971647;
stInitData.ModelParameters.FM2.Actuator2.JointPositionGuardMin := 0.7853981633974483;
stInitData.ModelParameters.FM2.Actuator2.JointPositionGuardMax := 3.577924966588375;
stInitData.ModelParameters.FM2.Actuator2.FilterButterA[0] := 1;
stInitData.ModelParameters.FM2.Actuator2.FilterButterA[1] := -1.475480443592646;
stInitData.ModelParameters.FM2.Actuator2.FilterButterA[2] := 0.5869195080611904;
stInitData.ModelParameters.FM2.Actuator2.FilterButterB[0] := 0.02785976611713603;
stInitData.ModelParameters.FM2.Actuator2.FilterButterB[1] := 0.05571953223427206;
stInitData.ModelParameters.FM2.Actuator2.FilterButterB[2] := 0.02785976611713603;
stInitData.ModelParameters.FM2.FTSensor.MaxAllowableForcesTorqueSensor[0] := 70;
stInitData.ModelParameters.FM2.FTSensor.MaxAllowableForcesTorqueSensor[1] := 70;
stInitData.ModelParameters.FM2.FTSensor.MaxAllowableForcesTorqueSensor[2] := 140;
stInitData.ModelParameters.FM2.FTSensor.MaxAllowableForcesTorqueSensor[3] := 1.4;
stInitData.ModelParameters.FM2.FTSensor.MaxAllowableForcesTorqueSensor[4] := 1.4;
stInitData.ModelParameters.FM2.FTSensor.MaxAllowableForcesTorqueSensor[5] := 1.4;
stInitData.ModelParameters.FM2.FTSensor.TransformationMatrixSide := 2;
stInitData.ModelParameters.A_filt[0] := 0.9812634847633315;
stInitData.ModelParameters.A_filt[1] := 0.9540282163784651;
stInitData.ModelParameters.A_filt[2] := 0.8906519727779925;
stInitData.ModelParameters.A_filt[3] := 0.8014870484078772;
stInitData.ModelParameters.A_filt[4] := 0.6598213090970109;
stInitData.ModelParameters.A_filt[5] := 0.6109184761423038;
stInitData.ModelParameters.A_filt[6] := 0.5276098539016424;
stInitData.ModelParameters.A_filt[7] := 0.4611359264884354;
stInitData.ModelParameters.Lb := 0.07000000000000001;
stInitData.ModelParameters.Lf := 0.238;
stInitData.ModelParameters.Lu := 0.153;
stInitData.ModelParameters.max_radius_target := 0.08;
stInitData.ModelParameters.maxofx_target[0] := 3.725995971662702;
stInitData.ModelParameters.maxofx_target[1] := 3.769269977287183;
stInitData.ModelParameters.maxofx_target[2] := 3.732297861094875;
stInitData.ModelParameters.maxofx_target[3] := 3.861135173419987;
stInitData.ModelParameters.maxofx_target[4] := 4.341112657755972;
stInitData.ModelParameters.maxofx_target[5] := 3.939876971197306;
stInitData.ModelParameters.maxofx_target[6] := 3.274229759957009;
stInitData.ModelParameters.maxofx_target[7] := 4.037289965361501;
stInitData.ModelParameters.maxofx_target[8] := 3.699537555807563;
stInitData.ModelParameters.maxofx_target[9] := 3.964491210224393;
stInitData.ModelParameters.maxofx_target[10] := 3.928334015544668;
stInitData.ModelParameters.maxofx_target[11] := 3.95332580916768;
stInitData.ModelParameters.maxofx_target[12] := 3.903896754069697;
stInitData.ModelParameters.maxofx_target[13] := 3.854646457436131;
stInitData.ModelParameters.maxofx_target[14] := 4.149252753960162;
stInitData.ModelParameters.maxofx_target[15] := 4.083836766816279;
stInitData.ModelParameters.maxofx_target[16] := 4.090044102531788;
stInitData.ModelParameters.maxofx_target[17] := 4.204062082559251;
stInitData.ModelParameters.maxofx_target[18] := 3.971285515806021;
stInitData.ModelParameters.maxofx_target[19] := 3.609103081751452;
stInitData.ModelParameters.maxofy_target[0] := 4.033861445733135;
stInitData.ModelParameters.maxofy_target[1] := 3.401730276675111;
stInitData.ModelParameters.maxofy_target[2] := 3.512314785894488;
stInitData.ModelParameters.maxofy_target[3] := 3.747203045358349;
stInitData.ModelParameters.maxofy_target[4] := 3.543336771697292;
stInitData.ModelParameters.maxofy_target[5] := 4.67849492712251;
stInitData.ModelParameters.maxofy_target[6] := 4.278834005585391;
stInitData.ModelParameters.maxofy_target[7] := 3.949551320163908;
stInitData.ModelParameters.maxofy_target[8] := 3.604575168555711;
stInitData.ModelParameters.maxofy_target[9] := 3.406372725745334;
stInitData.ModelParameters.maxofy_target[10] := 3.867467718851807;
stInitData.ModelParameters.maxofy_target[11] := 4.123201830328188;
stInitData.ModelParameters.maxofy_target[12] := 4.115475319626412;
stInitData.ModelParameters.maxofy_target[13] := 3.390749742922303;
stInitData.ModelParameters.maxofy_target[14] := 3.442743566367508;
stInitData.ModelParameters.maxofy_target[15] := 4.040123168143207;
stInitData.ModelParameters.maxofy_target[16] := 3.31768370272909;
stInitData.ModelParameters.maxofy_target[17] := 3.900427642205923;
stInitData.ModelParameters.maxofy_target[18] := 3.705407207151743;
stInitData.ModelParameters.maxofy_target[19] := 3.386851373990813;
stInitData.ModelParameters.nx_target[0] := 4;
stInitData.ModelParameters.nx_target[1] := 7;
stInitData.ModelParameters.nx_target[2] := 11;
stInitData.ModelParameters.nx_target[3] := 17;
stInitData.ModelParameters.nx_target[4] := 27;
stInitData.ModelParameters.nx_target[5] := 35;
stInitData.ModelParameters.nx_target[6] := 43;
stInitData.ModelParameters.nx_target[7] := 51;
stInitData.ModelParameters.ny_target[0] := 5;
stInitData.ModelParameters.ny_target[1] := 8;
stInitData.ModelParameters.ny_target[2] := 13;
stInitData.ModelParameters.ny_target[3] := 19;
stInitData.ModelParameters.ny_target[4] := 29;
stInitData.ModelParameters.ny_target[5] := 33;
stInitData.ModelParameters.ny_target[6] := 41;
stInitData.ModelParameters.ny_target[7] := 49;
stInitData.ModelParameters.phasesx_target[0] := 4.861605893123266;
stInitData.ModelParameters.phasesx_target[1] := -6.877908034342235;
stInitData.ModelParameters.phasesx_target[2] := 0.1832296702999862;
stInitData.ModelParameters.phasesx_target[3] := -8.49207426775064;
stInitData.ModelParameters.phasesx_target[4] := 3.753536714018681;
stInitData.ModelParameters.phasesx_target[5] := -4.278464718409628;
stInitData.ModelParameters.phasesx_target[6] := -9.345588778752338;
stInitData.ModelParameters.phasesx_target[7] := -0.5415057577958837;
stInitData.ModelParameters.phasesx_target[8] := 4.03169931989725;
stInitData.ModelParameters.phasesx_target[9] := 11.25109386560877;
stInitData.ModelParameters.phasesx_target[10] := 0.3144304133990246;
stInitData.ModelParameters.phasesx_target[11] := 5.405884422596881;
stInitData.ModelParameters.phasesx_target[12] := 7.136114381927755;
stInitData.ModelParameters.phasesx_target[13] := -3.966067802696903;
stInitData.ModelParameters.phasesx_target[14] := -4.450587061514258;
stInitData.ModelParameters.phasesx_target[15] := 5.838558214501922;
stInitData.ModelParameters.phasesx_target[16] := 5.152069515667789;
stInitData.ModelParameters.phasesx_target[17] := 2.560657742964917;
stInitData.ModelParameters.phasesx_target[18] := -1.785817140390713;
stInitData.ModelParameters.phasesx_target[19] := -10.74693086993821;
stInitData.ModelParameters.phasesx_target[20] := -8.30033796013195;
stInitData.ModelParameters.phasesx_target[21] := 6.51493452693733;
stInitData.ModelParameters.phasesx_target[22] := 6.878396626267916;
stInitData.ModelParameters.phasesx_target[23] := 5.044552802095099;
stInitData.ModelParameters.phasesx_target[24] := 0.6242908700519699;
stInitData.ModelParameters.phasesx_target[25] := -0.5079138788047333;
stInitData.ModelParameters.phasesx_target[26] := -0.1770671050681909;
stInitData.ModelParameters.phasesx_target[27] := -0.1703764443217345;
stInitData.ModelParameters.phasesx_target[28] := -0.1368478330532173;
stInitData.ModelParameters.phasesx_target[29] := -8.326484918381619;
stInitData.ModelParameters.phasesx_target[30] := 9.711303140419297;
stInitData.ModelParameters.phasesx_target[31] := -7.087219037025335;
stInitData.ModelParameters.phasesx_target[32] := -7.694601447989701;
stInitData.ModelParameters.phasesx_target[33] := -9.716533361562718;
stInitData.ModelParameters.phasesx_target[34] := 9.075640979530073;
stInitData.ModelParameters.phasesx_target[35] := 2.262710726599677;
stInitData.ModelParameters.phasesx_target[36] := 4.427185442369053;
stInitData.ModelParameters.phasesx_target[37] := -1.463781494118333;
stInitData.ModelParameters.phasesx_target[38] := 7.315118384710429;
stInitData.ModelParameters.phasesx_target[39] := -2.286675487861421;
stInitData.ModelParameters.phasesx_target[40] := -6.593076564846724;
stInitData.ModelParameters.phasesx_target[41] := 1.56904303103401;
stInitData.ModelParameters.phasesx_target[42] := -1.609289266965956;
stInitData.ModelParameters.phasesx_target[43] := 5.101975693076911;
stInitData.ModelParameters.phasesx_target[44] := -3.30612823135781;
stInitData.ModelParameters.phasesx_target[45] := -2.180318635047493;
stInitData.ModelParameters.phasesx_target[46] := -4.351033534234562;
stInitData.ModelParameters.phasesx_target[47] := 15.77426737534386;
stInitData.ModelParameters.phasesx_target[48] := 9.650360106650114;
stInitData.ModelParameters.phasesx_target[49] := -6.33878943163696;
stInitData.ModelParameters.phasesx_target[50] := 3.526230326426895;
stInitData.ModelParameters.phasesx_target[51] := 4.532492045144594;
stInitData.ModelParameters.phasesx_target[52] := -6.347856307515445;
stInitData.ModelParameters.phasesx_target[53] := -4.525473896445074;
stInitData.ModelParameters.phasesx_target[54] := -5.909193426517883;
stInitData.ModelParameters.phasesx_target[55] := -5.066137358420528;
stInitData.ModelParameters.phasesx_target[56] := 9.865012139110181;
stInitData.ModelParameters.phasesx_target[57] := 5.504192449230636;
stInitData.ModelParameters.phasesx_target[58] := -3.164926352115547;
stInitData.ModelParameters.phasesx_target[59] := 10.06722987850682;
stInitData.ModelParameters.phasesx_target[60] := 2.745184551503113;
stInitData.ModelParameters.phasesx_target[61] := 4.87951136301314;
stInitData.ModelParameters.phasesx_target[62] := -3.398753932675927;
stInitData.ModelParameters.phasesx_target[63] := 1.931934907307019;
stInitData.ModelParameters.phasesx_target[64] := 1.924599442849772;
stInitData.ModelParameters.phasesx_target[65] := -8.57723662597162;
stInitData.ModelParameters.phasesx_target[66] := 8.741366667489071;
stInitData.ModelParameters.phasesx_target[67] := -3.689551044751983;
stInitData.ModelParameters.phasesx_target[68] := -4.445099105647079;
stInitData.ModelParameters.phasesx_target[69] := 2.304873142372989;
stInitData.ModelParameters.phasesx_target[70] := 3.08873864310013;
stInitData.ModelParameters.phasesx_target[71] := 6.59645542034382;
stInitData.ModelParameters.phasesx_target[72] := -1.028828842591389;
stInitData.ModelParameters.phasesx_target[73] := -3.076176370053819;
stInitData.ModelParameters.phasesx_target[74] := 2.807168920258879;
stInitData.ModelParameters.phasesx_target[75] := 8.365206753343305;
stInitData.ModelParameters.phasesx_target[76] := -5.016801876695919;
stInitData.ModelParameters.phasesx_target[77] := 3.333371816477755;
stInitData.ModelParameters.phasesx_target[78] := -7.931519033959583;
stInitData.ModelParameters.phasesx_target[79] := 5.23047913282665;
stInitData.ModelParameters.phasesx_target[80] := -4.391382996451323;
stInitData.ModelParameters.phasesx_target[81] := -2.735770068121491;
stInitData.ModelParameters.phasesx_target[82] := 5.906906595276559;
stInitData.ModelParameters.phasesx_target[83] := -6.045718546713021;
stInitData.ModelParameters.phasesx_target[84] := 3.093933060621685;
stInitData.ModelParameters.phasesx_target[85] := -4.03158963960281;
stInitData.ModelParameters.phasesx_target[86] := 3.249502715915424;
stInitData.ModelParameters.phasesx_target[87] := -1.721711647103992;
stInitData.ModelParameters.phasesx_target[88] := 14.50388783795943;
stInitData.ModelParameters.phasesx_target[89] := 6.384694460138555;
stInitData.ModelParameters.phasesx_target[90] := 12.96905211113948;
stInitData.ModelParameters.phasesx_target[91] := -4.542531324959605;
stInitData.ModelParameters.phasesx_target[92] := -5.616601313922457;
stInitData.ModelParameters.phasesx_target[93] := -6.297504879607045;
stInitData.ModelParameters.phasesx_target[94] := 3.25249614330767;
stInitData.ModelParameters.phasesx_target[95] := -6.609627050540159;
stInitData.ModelParameters.phasesx_target[96] := 3.247511072697735;
stInitData.ModelParameters.phasesx_target[97] := -5.59396022117806;
stInitData.ModelParameters.phasesx_target[98] := -2.874685436678291;
stInitData.ModelParameters.phasesx_target[99] := -0.4436809781585709;
stInitData.ModelParameters.phasesx_target[100] := -0.05623366385089949;
stInitData.ModelParameters.phasesx_target[101] := 6.213423736544801;
stInitData.ModelParameters.phasesx_target[102] := 4.350441368245664;
stInitData.ModelParameters.phasesx_target[103] := -7.229518618966126;
stInitData.ModelParameters.phasesx_target[104] := 1.708544003405783;
stInitData.ModelParameters.phasesx_target[105] := -2.320066731225391;
stInitData.ModelParameters.phasesx_target[106] := 15.06351505937201;
stInitData.ModelParameters.phasesx_target[107] := -14.05105628641407;
stInitData.ModelParameters.phasesx_target[108] := -2.06240845993803;
stInitData.ModelParameters.phasesx_target[109] := -0.8066901710317506;
stInitData.ModelParameters.phasesx_target[110] := -5.266261635437959;
stInitData.ModelParameters.phasesx_target[111] := 0.197736032043847;
stInitData.ModelParameters.phasesx_target[112] := 0.782701419907572;
stInitData.ModelParameters.phasesx_target[113] := 2.983076899070961;
stInitData.ModelParameters.phasesx_target[114] := 2.678196916156226;
stInitData.ModelParameters.phasesx_target[115] := -2.80937058232747;
stInitData.ModelParameters.phasesx_target[116] := -8.679931806084419;
stInitData.ModelParameters.phasesx_target[117] := -4.532855473678722;
stInitData.ModelParameters.phasesx_target[118] := 1.25509440158949;
stInitData.ModelParameters.phasesx_target[119] := -3.542407498902301;
stInitData.ModelParameters.phasesx_target[120] := 3.147146205296445;
stInitData.ModelParameters.phasesx_target[121] := -7.851386067011971;
stInitData.ModelParameters.phasesx_target[122] := -3.841833729333192;
stInitData.ModelParameters.phasesx_target[123] := -3.561190587560239;
stInitData.ModelParameters.phasesx_target[124] := -11.67705868226607;
stInitData.ModelParameters.phasesx_target[125] := 1.805729288474406;
stInitData.ModelParameters.phasesx_target[126] := -12.25472000211688;
stInitData.ModelParameters.phasesx_target[127] := -15.94639395207283;
stInitData.ModelParameters.phasesx_target[128] := 3.299042326591281;
stInitData.ModelParameters.phasesx_target[129] := 11.7897679101844;
stInitData.ModelParameters.phasesx_target[130] := 5.635497217704252;
stInitData.ModelParameters.phasesx_target[131] := -10.91415168600183;
stInitData.ModelParameters.phasesx_target[132] := -8.166528644158818;
stInitData.ModelParameters.phasesx_target[133] := -7.949074290940906;
stInitData.ModelParameters.phasesx_target[134] := -11.09248016377667;
stInitData.ModelParameters.phasesx_target[135] := -7.806606432403226;
stInitData.ModelParameters.phasesx_target[136] := 8.29110790530911;
stInitData.ModelParameters.phasesx_target[137] := 1.609128648233626;
stInitData.ModelParameters.phasesx_target[138] := -7.412802241128686;
stInitData.ModelParameters.phasesx_target[139] := -6.829085420223432;
stInitData.ModelParameters.phasesx_target[140] := 3.968371760129274;
stInitData.ModelParameters.phasesx_target[141] := 8.239047857531377;
stInitData.ModelParameters.phasesx_target[142] := -0.7081774468334039;
stInitData.ModelParameters.phasesx_target[143] := 3.255742473942484;
stInitData.ModelParameters.phasesx_target[144] := 2.72657661176403;
stInitData.ModelParameters.phasesx_target[145] := 8.503453084268017;
stInitData.ModelParameters.phasesx_target[146] := 10.83448608998615;
stInitData.ModelParameters.phasesx_target[147] := -3.540809561606244;
stInitData.ModelParameters.phasesx_target[148] := -0.7791901075294321;
stInitData.ModelParameters.phasesx_target[149] := 2.09057996212125;
stInitData.ModelParameters.phasesx_target[150] := -5.75077250314207;
stInitData.ModelParameters.phasesx_target[151] := -6.528610854644741;
stInitData.ModelParameters.phasesx_target[152] := -8.092471455209447;
stInitData.ModelParameters.phasesx_target[153] := 1.444867649238689;
stInitData.ModelParameters.phasesx_target[154] := -0.4350593922358847;
stInitData.ModelParameters.phasesx_target[155] := 1.384415264034064;
stInitData.ModelParameters.phasesx_target[156] := 3.586317664866986;
stInitData.ModelParameters.phasesx_target[157] := -2.693627554479045;
stInitData.ModelParameters.phasesx_target[158] := -6.203913206001071;
stInitData.ModelParameters.phasesx_target[159] := -7.7439987103133;
stInitData.ModelParameters.phasesy_target[0] := -3.497322828250138;
stInitData.ModelParameters.phasesy_target[1] := 3.968101117818054;
stInitData.ModelParameters.phasesy_target[2] := -8.453407295131303;
stInitData.ModelParameters.phasesy_target[3] := 3.662932797653445;
stInitData.ModelParameters.phasesy_target[4] := -4.665511797006223;
stInitData.ModelParameters.phasesy_target[5] := -0.667711172366947;
stInitData.ModelParameters.phasesy_target[6] := 0.4049108056474149;
stInitData.ModelParameters.phasesy_target[7] := 5.826420100362185;
stInitData.ModelParameters.phasesy_target[8] := -0.4684687629321813;
stInitData.ModelParameters.phasesy_target[9] := 1.109479610871294;
stInitData.ModelParameters.phasesy_target[10] := 3.602470301381257;
stInitData.ModelParameters.phasesy_target[11] := -2.31238227897937;
stInitData.ModelParameters.phasesy_target[12] := 18.87783679356418;
stInitData.ModelParameters.phasesy_target[13] := -13.16676825287151;
stInitData.ModelParameters.phasesy_target[14] := -2.079536255715519;
stInitData.ModelParameters.phasesy_target[15] := -1.15054869034943;
stInitData.ModelParameters.phasesy_target[16] := 4.333107031806851;
stInitData.ModelParameters.phasesy_target[17] := -7.779861544019822;
stInitData.ModelParameters.phasesy_target[18] := -1.404232583018493;
stInitData.ModelParameters.phasesy_target[19] := 0.9951073686957415;
stInitData.ModelParameters.phasesy_target[20] := -4.476315230254558;
stInitData.ModelParameters.phasesy_target[21] := -5.036140545836565;
stInitData.ModelParameters.phasesy_target[22] := 0.1449636064748702;
stInitData.ModelParameters.phasesy_target[23] := 15.37175112901116;
stInitData.ModelParameters.phasesy_target[24] := -2.000223383348735;
stInitData.ModelParameters.phasesy_target[25] := -7.359395724058979;
stInitData.ModelParameters.phasesy_target[26] := 1.240543764162628;
stInitData.ModelParameters.phasesy_target[27] := -7.221418228933111;
stInitData.ModelParameters.phasesy_target[28] := 7.441977132814726;
stInitData.ModelParameters.phasesy_target[29] := -1.541017501712541;
stInitData.ModelParameters.phasesy_target[30] := 7.633001028552416;
stInitData.ModelParameters.phasesy_target[31] := -4.871791782148311;
stInitData.ModelParameters.phasesy_target[32] := -5.249484081078466;
stInitData.ModelParameters.phasesy_target[33] := 2.891772983887523;
stInitData.ModelParameters.phasesy_target[34] := -1.334492659981463;
stInitData.ModelParameters.phasesy_target[35] := 5.540522314967358;
stInitData.ModelParameters.phasesy_target[36] := 11.98805228454678;
stInitData.ModelParameters.phasesy_target[37] := 0.5946213392994453;
stInitData.ModelParameters.phasesy_target[38] := -7.670945825383598;
stInitData.ModelParameters.phasesy_target[39] := -7.434981616776247;
stInitData.ModelParameters.phasesy_target[40] := -7.995038446177401;
stInitData.ModelParameters.phasesy_target[41] := -4.8206555264467;
stInitData.ModelParameters.phasesy_target[42] := -4.576507277187577;
stInitData.ModelParameters.phasesy_target[43] := 2.138721787621977;
stInitData.ModelParameters.phasesy_target[44] := -11.76453977474997;
stInitData.ModelParameters.phasesy_target[45] := 6.114613591437083;
stInitData.ModelParameters.phasesy_target[46] := 0.2964483908213062;
stInitData.ModelParameters.phasesy_target[47] := 2.044363175455159;
stInitData.ModelParameters.phasesy_target[48] := 2.469344095587083;
stInitData.ModelParameters.phasesy_target[49] := 6.888063417939983;
stInitData.ModelParameters.phasesy_target[50] := 7.731478031532765;
stInitData.ModelParameters.phasesy_target[51] := -5.447064998359911;
stInitData.ModelParameters.phasesy_target[52] := 1.110931087672106;
stInitData.ModelParameters.phasesy_target[53] := -2.633848806176489;
stInitData.ModelParameters.phasesy_target[54] := 6.030993213022195;
stInitData.ModelParameters.phasesy_target[55] := 7.359524315434826;
stInitData.ModelParameters.phasesy_target[56] := 6.951766857290855;
stInitData.ModelParameters.phasesy_target[57] := -19.73547291310111;
stInitData.ModelParameters.phasesy_target[58] := 4.487019739145547;
stInitData.ModelParameters.phasesy_target[59] := 0.3447321470873123;
stInitData.ModelParameters.phasesy_target[60] := -11.91024228212729;
stInitData.ModelParameters.phasesy_target[61] := 3.972179639605808;
stInitData.ModelParameters.phasesy_target[62] := -1.800980393801116;
stInitData.ModelParameters.phasesy_target[63] := -10.95682231165349;
stInitData.ModelParameters.phasesy_target[64] := -0.6790728929759766;
stInitData.ModelParameters.phasesy_target[65] := -8.246866208945255;
stInitData.ModelParameters.phasesy_target[66] := -6.580690718226636;
stInitData.ModelParameters.phasesy_target[67] := -1.576738131931701;
stInitData.ModelParameters.phasesy_target[68] := 9.132947597472924;
stInitData.ModelParameters.phasesy_target[69] := 8.334781721684015;
stInitData.ModelParameters.phasesy_target[70] := -8.794276363671308;
stInitData.ModelParameters.phasesy_target[71] := 0.3284729250742441;
stInitData.ModelParameters.phasesy_target[72] := -12.81666989531838;
stInitData.ModelParameters.phasesy_target[73] := -7.800904130900431;
stInitData.ModelParameters.phasesy_target[74] := -5.986370334437094;
stInitData.ModelParameters.phasesy_target[75] := 6.207404993407126;
stInitData.ModelParameters.phasesy_target[76] := -2.237680217925796;
stInitData.ModelParameters.phasesy_target[77] := 2.653000667291249;
stInitData.ModelParameters.phasesy_target[78] := 4.905119319349905;
stInitData.ModelParameters.phasesy_target[79] := -2.029831951978356;
stInitData.ModelParameters.phasesy_target[80] := 2.858817254003953;
stInitData.ModelParameters.phasesy_target[81] := 4.565022813296929;
stInitData.ModelParameters.phasesy_target[82] := 1.632120296575198;
stInitData.ModelParameters.phasesy_target[83] := -3.307587604412562;
stInitData.ModelParameters.phasesy_target[84] := -5.276380088586527;
stInitData.ModelParameters.phasesy_target[85] := -8.129394939769995;
stInitData.ModelParameters.phasesy_target[86] := -4.050310950728806;
stInitData.ModelParameters.phasesy_target[87] := 5.191076903790797;
stInitData.ModelParameters.phasesy_target[88] := 0.8758284365130045;
stInitData.ModelParameters.phasesy_target[89] := -2.550014845547591;
stInitData.ModelParameters.phasesy_target[90] := 0.6833095570890352;
stInitData.ModelParameters.phasesy_target[91] := -0.4204819582590314;
stInitData.ModelParameters.phasesy_target[92] := 2.896080943683481;
stInitData.ModelParameters.phasesy_target[93] := -2.763825786198513;
stInitData.ModelParameters.phasesy_target[94] := 0.7874358269500334;
stInitData.ModelParameters.phasesy_target[95] := 3.617713090492316;
stInitData.ModelParameters.phasesy_target[96] := 7.557277669756685;
stInitData.ModelParameters.phasesy_target[97] := 10.07890335658021;
stInitData.ModelParameters.phasesy_target[98] := 3.404572829058405;
stInitData.ModelParameters.phasesy_target[99] := -3.434180077328929;
stInitData.ModelParameters.phasesy_target[100] := -5.739620863294416;
stInitData.ModelParameters.phasesy_target[101] := 9.815743958898386;
stInitData.ModelParameters.phasesy_target[102] := 2.117602745449833;
stInitData.ModelParameters.phasesy_target[103] := 7.402102949710213;
stInitData.ModelParameters.phasesy_target[104] := -4.82482630217963;
stInitData.ModelParameters.phasesy_target[105] := -1.966209821595078;
stInitData.ModelParameters.phasesy_target[106] := 5.866761981240092;
stInitData.ModelParameters.phasesy_target[107] := -11.8833516637509;
stInitData.ModelParameters.phasesy_target[108] := 8.655727557080453;
stInitData.ModelParameters.phasesy_target[109] := -8.666690564746471;
stInitData.ModelParameters.phasesy_target[110] := 1.638265416319545;
stInitData.ModelParameters.phasesy_target[111] := -11.05683347802265;
stInitData.ModelParameters.phasesy_target[112] := 0.9622660955789425;
stInitData.ModelParameters.phasesy_target[113] := 1.701132117151025;
stInitData.ModelParameters.phasesy_target[114] := -10.25418677515519;
stInitData.ModelParameters.phasesy_target[115] := -5.403892180494341;
stInitData.ModelParameters.phasesy_target[116] := 4.772885119488867;
stInitData.ModelParameters.phasesy_target[117] := -2.467728571278554;
stInitData.ModelParameters.phasesy_target[118] := -8.140061828732112;
stInitData.ModelParameters.phasesy_target[119] := 1.047339161057907;
stInitData.ModelParameters.phasesy_target[120] := 1.959208468855445;
stInitData.ModelParameters.phasesy_target[121] := -8.182456791646619;
stInitData.ModelParameters.phasesy_target[122] := 8.861086966670928;
stInitData.ModelParameters.phasesy_target[123] := -11.04674811481208;
stInitData.ModelParameters.phasesy_target[124] := -11.64661626364166;
stInitData.ModelParameters.phasesy_target[125] := -0.9378397562098938;
stInitData.ModelParameters.phasesy_target[126] := -2.784872892208484;
stInitData.ModelParameters.phasesy_target[127] := 7.105279274459049;
stInitData.ModelParameters.phasesy_target[128] := 0.8017057166526631;
stInitData.ModelParameters.phasesy_target[129] := -8.066783174171594;
stInitData.ModelParameters.phasesy_target[130] := -1.889285051856946;
stInitData.ModelParameters.phasesy_target[131] := 3.439895357069697;
stInitData.ModelParameters.phasesy_target[132] := 0.7429549210193187;
stInitData.ModelParameters.phasesy_target[133] := -9.958982651349816;
stInitData.ModelParameters.phasesy_target[134] := -9.669714064139061;
stInitData.ModelParameters.phasesy_target[135] := -2.827524374816505;
stInitData.ModelParameters.phasesy_target[136] := -9.708523053994547;
stInitData.ModelParameters.phasesy_target[137] := 5.562946863185611;
stInitData.ModelParameters.phasesy_target[138] := -2.960243764141293;
stInitData.ModelParameters.phasesy_target[139] := 1.9482574698693;
stInitData.ModelParameters.phasesy_target[140] := 0.2499638221164004;
stInitData.ModelParameters.phasesy_target[141] := -5.37384835059814;
stInitData.ModelParameters.phasesy_target[142] := 1.57364849105839;
stInitData.ModelParameters.phasesy_target[143] := -0.7121271543990914;
stInitData.ModelParameters.phasesy_target[144] := -7.547418627741739;
stInitData.ModelParameters.phasesy_target[145] := 7.190140329093153;
stInitData.ModelParameters.phasesy_target[146] := -5.190401654334764;
stInitData.ModelParameters.phasesy_target[147] := -5.78804834213292;
stInitData.ModelParameters.phasesy_target[148] := 8.545229154384492;
stInitData.ModelParameters.phasesy_target[149] := -0.1707464685964799;
stInitData.ModelParameters.phasesy_target[150] := -9.045061803003483;
stInitData.ModelParameters.phasesy_target[151] := -3.311288065302251;
stInitData.ModelParameters.phasesy_target[152] := -0.6695557283512097;
stInitData.ModelParameters.phasesy_target[153] := 8.909775131160025;
stInitData.ModelParameters.phasesy_target[154] := -6.659748721996113;
stInitData.ModelParameters.phasesy_target[155] := -4.520520544057416;
stInitData.ModelParameters.phasesy_target[156] := 4.694627835114299;
stInitData.ModelParameters.phasesy_target[157] := 0.8069486313832543;
stInitData.ModelParameters.phasesy_target[158] := 4.452039546679298;
stInitData.ModelParameters.phasesy_target[159] := -11.57788952066284;
stInitData.ModelParameters.sampleTime := 0.001;
stInitData.ModelParameters.DiscreteDerivative_ICPrevScaled := 0;
stInitData.ModelParameters.DiscreteDerivative_ICPrevScal_e := 0;
stInitData.ModelParameters.DiscreteDerivative_ICPrevScal_m := 0;
stInitData.ModelParameters.DiscreteDerivative_ICPrevScal_h := 0;
stInitData.ModelParameters.DiscreteDerivative_ICPrevScal_c := 0;
stInitData.ModelParameters.DiscreteDerivative_ICPrevScal_g := 0;
stInitData.ModelParameters.DiscreteDerivative_ICPrevScal_d := 0;
stInitData.ModelParameters.DiscreteDerivative_ICPrevScal_i := 0;
stInitData.ModelParameters.DiscreteDerivative_ICPrevSca_hd := 0;
stInitData.ModelParameters.DiscreteDerivative_ICPrevScal_l := 0;
stInitData.ModelParameters.DiscreteDerivative_ICPrevScal_b := 0;
stInitData.ModelParameters.DiscreteDerivative_ICPrevSca_h3 := 0;
stInitData.ModelParameters.CompareToConstant_const := 0;
stInitData.ModelParameters.CompareToConstant_const_i := 201;
stInitData.ModelParameters.CompareToConstant_const_b := 0;
stInitData.ModelParameters.CompareToConstant_const_f := 201;
stInitData.ModelParameters.CompareToConstant_const_g := 0;
stInitData.ModelParameters.CompareToConstant_const_k := 4;
stInitData.ModelParameters.CompareToConstant_const_n := 4;
stInitData.ModelParameters.CompareToConstant1_const := 2.75;
stInitData.ModelParameters.CompareToConstant_const_j := 4;
stInitData.ModelParameters.CompareToConstant1_const_f := 2.75;
stInitData.ModelParameters.WrapToZero_Threshold := -1;
stInitData.ModelParameters.CompareToConstant_const_e := 0;
stInitData.ModelParameters.CompareToConstant_const_c := 0;
stInitData.ModelParameters.CompareToConstant_const_ew := 0;
stInitData.ModelParameters.CompareToConstant_const_if := 0;
stInitData.ModelParameters.ErrorHasOccurred_initial_condit := 0;
stInitData.ModelParameters.ErrorHasOccurred_initial_cond_l := 0;
stInitData.ModelParameters.ErrorHasOccurred_initial_con_ls := 0;
stInitData.ModelParameters.ErrorHasOccurred_initial_cond_c := 0;
stInitData.ModelParameters.CheckTrialIsRunning_initial_con := 0;
stInitData.ModelParameters.DetectRisePositive_vinit := 0;
stInitData.ModelParameters.DetectRisePositive1_vinit := 0;
stInitData.ModelParameters.DetectRisePositive_vinit_j := 0;
stInitData.ModelParameters.DetectRisePositive1_vinit_i := 0;
stInitData.ModelParameters.DetectRiseNonnegative_vinit := 0;
stInitData.ModelParameters.DetectIncrease_vinit := 0;
stInitData.ModelParameters.DetectRisePositive_vinit_h := 0;
stInitData.ModelParameters.DetectRisePositive1_vinit_o := 0;
stInitData.ModelParameters.DetectRisePositive_vinit_b := 0;
stInitData.ModelParameters.DetectRisePositive1_vinit_f := 0;
stInitData.ModelParameters.DetectChange_vinit := 0;
stInitData.ModelParameters.DetectChange_vinit_i := 0;
stInitData.ModelParameters.DetectChange_vinit_f := 0;
stInitData.ModelParameters.DetectChange_vinit_e := 0;
stInitData.ModelParameters.DetectIncrease_vinit_f := 0;
stInitData.ModelParameters.DetectRisePositive_vinit_k := 0;
stInitData.ModelParameters.DetectRisePositive1_vinit_b := 0;
stInitData.ModelParameters.Constant_Value := 1;
stInitData.ModelParameters.x_prev_InitialCondition := 0;
stInitData.ModelParameters.xdot_prev_InitialCondition := 0;
stInitData.ModelParameters.Constant_Value_j := 1;
stInitData.ModelParameters.x_prev_InitialCondition_g := 0;
stInitData.ModelParameters.xdot_prev_InitialCondition_f := 0;
stInitData.ModelParameters.JointTorqueDes_Nm_Y0[0] := 0;
stInitData.ModelParameters.JointTorqueDes_Nm_Y0[1] := 0;
stInitData.ModelParameters.Constant3_Value[0] := 0;
stInitData.ModelParameters.Constant3_Value[1] := 0;
stInitData.ModelParameters.JointTorqueDes_Nm_Y0_g[0] := 0;
stInitData.ModelParameters.JointTorqueDes_Nm_Y0_g[1] := 0;
stInitData.ModelParameters.Constant3_Value_f[0] := 0;
stInitData.ModelParameters.Constant3_Value_f[1] := 0;
stInitData.ModelParameters.JointTorqueDes_Nm_Y0_a[0] := 0;
stInitData.ModelParameters.JointTorqueDes_Nm_Y0_a[1] := 0;
stInitData.ModelParameters.Constant3_Value_l[0] := 0;
stInitData.ModelParameters.Constant3_Value_l[1] := 0;
stInitData.ModelParameters.JointTorqueDes_Nm_Y0_h[0] := 0;
stInitData.ModelParameters.JointTorqueDes_Nm_Y0_h[1] := 0;
stInitData.ModelParameters.Constant3_Value_o[0] := 0;
stInitData.ModelParameters.Constant3_Value_o[1] := 0;
stInitData.ModelParameters.Requestedstate_Value := 0;
stInitData.ModelParameters.CalibrateManually_Value := 0;
stInitData.ModelParameters.Memory_X0 := 0;
stInitData.ModelParameters.FreqHz_Value := 20;
stInitData.ModelParameters.UnitDelay_InitialCondition := 0;
stInitData.ModelParameters.TSamp_WtEt := 1000;
stInitData.ModelParameters.Butterworthfilter_InitialStates := 0;
stInitData.ModelParameters.Butterworthfilter_InitialDenomi := 0;
stInitData.ModelParameters.CalibrateManually_Value_p := 0;
stInitData.ModelParameters.FreqHz_Value_m := 20;
stInitData.ModelParameters.UnitDelay_InitialCondition_f := 0;
stInitData.ModelParameters.TSamp_WtEt_a := 1000;
stInitData.ModelParameters.Butterworthfilter_InitialStat_a := 0;
stInitData.ModelParameters.Butterworthfilter_InitialDeno_l := 0;
stInitData.ModelParameters.Constant2_Value := 0.05;
stInitData.ModelParameters.target3_Value[0] := 0;
stInitData.ModelParameters.target3_Value[1] := 0.25;
stInitData.ModelParameters.CalibrateManually_Value_c := 0;
stInitData.ModelParameters.Memory_X0_m := 0;
stInitData.ModelParameters.FreqHz_Value_f := 20;
stInitData.ModelParameters.UnitDelay_InitialCondition_j := 0;
stInitData.ModelParameters.TSamp_WtEt_p := 1000;
stInitData.ModelParameters.Butterworthfilter_InitialStat_m := 0;
stInitData.ModelParameters.Butterworthfilter_InitialDeno_p := 0;
stInitData.ModelParameters.CalibrateManually_Value_f := 0;
stInitData.ModelParameters.FreqHz_Value_j := 20;
stInitData.ModelParameters.UnitDelay_InitialCondition_a := 0;
stInitData.ModelParameters.TSamp_WtEt_b := 1000;
stInitData.ModelParameters.Butterworthfilter_InitialStat_j := 0;
stInitData.ModelParameters.Butterworthfilter_InitialDeno_i := 0;
stInitData.ModelParameters.Constant2_Value_a := 0.05;
stInitData.ModelParameters.target4_Value[0] := 0;
stInitData.ModelParameters.target4_Value[1] := 0.25;
stInitData.ModelParameters.EnableDrives_Value := 0;
stInitData.ModelParameters.UseActuator_Value := 1;
stInitData.ModelParameters.DisableDrives_Value := 0;
stInitData.ModelParameters.Constant_Value_l := 0;
stInitData.ModelParameters.TSamp_WtEt_f := 1000;
stInitData.ModelParameters.FreqHz_Value_mf := 100;
stInitData.ModelParameters.UnitDelay_InitialCondition_d := 0;
stInitData.ModelParameters.Constant_Value_m := 18.84955592153876;
stInitData.ModelParameters.AbsoluteMaximumTorque_Nm_Value := 8;
stInitData.ModelParameters.Bias_Bias := 0.5;
stInitData.ModelParameters.InhibitTime_s_Value := 2;
stInitData.ModelParameters.Memory1_1_X0 := 0;
stInitData.ModelParameters.Constant_Value_f := 0;
stInitData.ModelParameters.UseActuator_Value_h := 1;
stInitData.ModelParameters.Constant_Value_o := 0;
stInitData.ModelParameters.TSamp_WtEt_j := 1000;
stInitData.ModelParameters.FreqHz_Value_js := 100;
stInitData.ModelParameters.UnitDelay_InitialCondition_b := 0;
stInitData.ModelParameters.Constant_Value_c := 18.84955592153876;
stInitData.ModelParameters.AbsoluteMaximumTorque_Nm_Valu_k := 8;
stInitData.ModelParameters.Bias_Bias_j := 0.5;
stInitData.ModelParameters.InhibitTime_s_Value_f := 2;
stInitData.ModelParameters.Memory1_1_X0_h := 0;
stInitData.ModelParameters.TimePerState_ms_Value[0] := 50;
stInitData.ModelParameters.TimePerState_ms_Value[1] := 50;
stInitData.ModelParameters.TimePerState_ms_Value[2] := 150;
stInitData.ModelParameters.TimePerState_ms_Value[3] := 150;
stInitData.ModelParameters.SetModeOp_val_slx_Value := 10;
stInitData.ModelParameters.TorqueLimit_Value := 6;
stInitData.ModelParameters.virtualmass_Value := 0.5;
stInitData.ModelParameters.virtualdamping_Value := 0.05;
stInitData.ModelParameters.CalibrateForceSensors_Value := 0;
stInitData.ModelParameters.Constant_Value_b := 0;
stInitData.ModelParameters.KpConnection_Value := 0;
stInitData.ModelParameters.KdConnection_Value := 0;
stInitData.ModelParameters.TSamp_WtEt_k := 1000;
stInitData.ModelParameters.Butterworthfilter_InitialStat_o := 0;
stInitData.ModelParameters.Butterworthfilter_InitialDeno_h := 0;
stInitData.ModelParameters.TSamp_WtEt_kh := 1000;
stInitData.ModelParameters.Butterworthfilter_InitialSta_my := 0;
stInitData.ModelParameters.Butterworthfilter_InitialDeno_k := 0;
stInitData.ModelParameters.TSamp_WtEt_o := 1000;
stInitData.ModelParameters.Butterworthfilter_InitialStat_p := 0;
stInitData.ModelParameters.Butterworthfilter_InitialDeno_g := 0;
stInitData.ModelParameters.TSamp_WtEt_m := 1000;
stInitData.ModelParameters.Butterworthfilter_InitialStat_k := 0;
stInitData.ModelParameters.Butterworthfilter_InitialDen_hr := 0;
stInitData.ModelParameters.Merge1_InitialOutput[0] := 0;
stInitData.ModelParameters.Merge1_InitialOutput[1] := 0;
stInitData.ModelParameters.Kp_Gain := 1000;
stInitData.ModelParameters.Merge2_InitialOutput[0] := 0;
stInitData.ModelParameters.Merge2_InitialOutput[1] := 0;
stInitData.ModelParameters.Kd_Gain := 8;
stInitData.ModelParameters.Kd1_Gain := 0;
stInitData.ModelParameters.Kd2_Gain := 8;
stInitData.ModelParameters.Gain_Gain := 0;
stInitData.ModelParameters.TimePerState_ms_Value_n[0] := 50;
stInitData.ModelParameters.TimePerState_ms_Value_n[1] := 50;
stInitData.ModelParameters.TimePerState_ms_Value_n[2] := 150;
stInitData.ModelParameters.TimePerState_ms_Value_n[3] := 150;
stInitData.ModelParameters.SetModeOp_val_slx_Value_j := 10;
stInitData.ModelParameters.UseActuator_Value_f := 1;
stInitData.ModelParameters.Constant_Value_j1 := 0;
stInitData.ModelParameters.TSamp_WtEt_h := 1000;
stInitData.ModelParameters.FreqHz_Value_o := 100;
stInitData.ModelParameters.UnitDelay_InitialCondition_n := 0;
stInitData.ModelParameters.Constant_Value_jn := 18.84955592153876;
stInitData.ModelParameters.AbsoluteMaximumTorque_Nm_Valu_c := 8;
stInitData.ModelParameters.Bias_Bias_f := 0.5;
stInitData.ModelParameters.InhibitTime_s_Value_g := 2;
stInitData.ModelParameters.Memory1_1_X0_f := 0;
stInitData.ModelParameters.Constant_Value_jk := 0;
stInitData.ModelParameters.UseActuator_Value_l := 1;
stInitData.ModelParameters.Constant_Value_od := 0;
stInitData.ModelParameters.TSamp_WtEt_l := 1000;
stInitData.ModelParameters.FreqHz_Value_j5 := 100;
stInitData.ModelParameters.UnitDelay_InitialCondition_nf := 0;
stInitData.ModelParameters.Constant_Value_p := 18.84955592153876;
stInitData.ModelParameters.AbsoluteMaximumTorque_Nm_Valu_l := 8;
stInitData.ModelParameters.Bias_Bias_a := 0.5;
stInitData.ModelParameters.InhibitTime_s_Value_m := 2;
stInitData.ModelParameters.Memory1_1_X0_fk := 0;
stInitData.ModelParameters.TimePerState_ms_Value_d[0] := 50;
stInitData.ModelParameters.TimePerState_ms_Value_d[1] := 50;
stInitData.ModelParameters.TimePerState_ms_Value_d[2] := 150;
stInitData.ModelParameters.TimePerState_ms_Value_d[3] := 150;
stInitData.ModelParameters.SetModeOp_val_slx_Value_n := 10;
stInitData.ModelParameters.TorqueLimit_Value_m := 4;
stInitData.ModelParameters.ExpTrialRandom1_Value[0] := 0;
stInitData.ModelParameters.ExpTrialRandom1_Value[1] := 0;
stInitData.ModelParameters.ExpTrialRandom2_Value[0] := 0;
stInitData.ModelParameters.ExpTrialRandom2_Value[1] := 0;
stInitData.ModelParameters.Merge1_InitialOutput_e[0] := 0;
stInitData.ModelParameters.Merge1_InitialOutput_e[1] := 0;
stInitData.ModelParameters.Kp_Gain_m := 1000;
stInitData.ModelParameters.Merge2_InitialOutput_k[0] := 0;
stInitData.ModelParameters.Merge2_InitialOutput_k[1] := 0;
stInitData.ModelParameters.Kd_Gain_i := 8;
stInitData.ModelParameters.Kd1_Gain_n := 0;
stInitData.ModelParameters.Kd2_Gain_k := 8;
stInitData.ModelParameters.Gain_Gain_h := 0;
stInitData.ModelParameters.TimePerState_ms_Value_e[0] := 50;
stInitData.ModelParameters.TimePerState_ms_Value_e[1] := 50;
stInitData.ModelParameters.TimePerState_ms_Value_e[2] := 150;
stInitData.ModelParameters.TimePerState_ms_Value_e[3] := 150;
stInitData.ModelParameters.SetModeOp_val_slx_Value_p := 10;
stInitData.ModelParameters.One_Value := 1;
stInitData.ModelParameters.ExpStartTrial_Value := 0;
stInitData.ModelParameters.Constant_Value_n := 0;
stInitData.ModelParameters.ExpTrialIntroDuration_Value := 5;
stInitData.ModelParameters.ExpTrialDuration_Value := 30;
stInitData.ModelParameters.RateLimiter_RisingLim := 0.0003333333333333333;
stInitData.ModelParameters.RateLimiter_FallingLim := -0.00025;
stInitData.ModelParameters.RateLimiter_IC := 0;
stInitData.ModelParameters.Saturation_UpperSat := 1;
stInitData.ModelParameters.Saturation_LowerSat := 0;
stInitData.ModelParameters.Gain1_Gain := 6.283185307179586;
stInitData.ModelParameters.Gain2_Gain := 0.1591549430918953;
stInitData.ModelParameters.Saturation_UpperSat_h := 1;
stInitData.ModelParameters.Saturation_LowerSat_f := 0;
stInitData.ModelParameters.One_Value_h := 1;
stInitData.ModelParameters.Saturation_UpperSat_o := 1;
stInitData.ModelParameters.Saturation_LowerSat_fc := 0;
stInitData.ModelParameters.rotation_Value := 1.047197551196598;
stInitData.ModelParameters.Merge3_InitialOutput[0] := 0;
stInitData.ModelParameters.Merge3_InitialOutput[1] := 0;
stInitData.ModelParameters.Memory1_10_X0 := 0;
stInitData.ModelParameters.Memory1_11_X0 := 0;
stInitData.ModelParameters.Memory1_2_X0 := 0;
stInitData.ModelParameters.Memory1_3_X0 := 0;
stInitData.ModelParameters.Memory1_4_X0 := 0;
stInitData.ModelParameters.Memory1_5_X0 := 0;
stInitData.ModelParameters.Memory1_6_X0 := 0;
stInitData.ModelParameters.Memory1_7_X0 := 0;
stInitData.ModelParameters.Memory1_8_X0 := 0;
stInitData.ModelParameters.Memory1_9_X0 := 0;
stInitData.ModelParameters.Memory1_10_X0_h := 0;
stInitData.ModelParameters.Memory1_11_X0_h := 0;
stInitData.ModelParameters.Memory1_2_X0_h := 0;
stInitData.ModelParameters.Memory1_3_X0_h := 0;
stInitData.ModelParameters.Memory1_4_X0_h := 0;
stInitData.ModelParameters.Memory1_5_X0_h := 0;
stInitData.ModelParameters.Memory1_6_X0_h := 0;
stInitData.ModelParameters.Memory1_7_X0_h := 0;
stInitData.ModelParameters.Memory1_8_X0_h := 0;
stInitData.ModelParameters.Memory1_9_X0_h := 0;
stInitData.ModelParameters.Merge3_InitialOutput_m[0] := 0;
stInitData.ModelParameters.Merge3_InitialOutput_m[1] := 0;
stInitData.ModelParameters.Memory1_10_X0_f := 0;
stInitData.ModelParameters.Memory1_11_X0_f := 0;
stInitData.ModelParameters.Memory1_2_X0_f := 0;
stInitData.ModelParameters.Memory1_3_X0_f := 0;
stInitData.ModelParameters.Memory1_4_X0_f := 0;
stInitData.ModelParameters.Memory1_5_X0_f := 0;
stInitData.ModelParameters.Memory1_6_X0_f := 0;
stInitData.ModelParameters.Memory1_7_X0_f := 0;
stInitData.ModelParameters.Memory1_8_X0_f := 0;
stInitData.ModelParameters.Memory1_9_X0_f := 0;
stInitData.ModelParameters.Memory1_10_X0_fk := 0;
stInitData.ModelParameters.Memory1_11_X0_fk := 0;
stInitData.ModelParameters.Memory1_2_X0_fk := 0;
stInitData.ModelParameters.Memory1_3_X0_fk := 0;
stInitData.ModelParameters.Memory1_4_X0_fk := 0;
stInitData.ModelParameters.Memory1_5_X0_fk := 0;
stInitData.ModelParameters.Memory1_6_X0_fk := 0;
stInitData.ModelParameters.Memory1_7_X0_fk := 0;
stInitData.ModelParameters.Memory1_8_X0_fk := 0;
stInitData.ModelParameters.Memory1_9_X0_fk := 0;
stInitData.ModelParameters.Recorddata1yes0no_Value := 0;
stInitData.ModelParameters.ExpTrialRandom3_Value[0] := 0;
stInitData.ModelParameters.ExpTrialRandom3_Value[1] := 0;
stInitData.ModelParameters.ExpTrialRandom_Value := 1;
stInitData.ModelParameters.ExpTrialRandom4_Value[0] := 0;
stInitData.ModelParameters.ExpTrialRandom4_Value[1] := 0;
stInitData.ModelParameters.ExpCondition_Value := 0;
stInitData.ModelParameters.ExpTrialNumber1_Value := 1;
stInitData.ModelParameters.FixPtConstant_Value := 1;
stInitData.ModelParameters.Output_InitialCondition := 0;
stInitData.ModelParameters.Constant_Value_g := 0;
stInitData.ModelParameters.ManualSwitch_CurrentSetting := 0;
stInitData.ModelParameters.ManualSwitch_CurrentSetting_m := 0;
stInitData.ModelParameters.ManualSwitch_CurrentSetting_h := 0;
stInitData.ModelParameters.ManualSwitch_CurrentSetting_j := 0;
stInitData.ModelParameters.Memory1_X0 := 0;
stInitData.ModelParameters.PreventAlgebraicLoop_X0 := 0;
stInitData.ModelParameters.PreventAlgebraicLoop_X0_m := 0;
stInitData.ModelParameters.AvoidAlgebraicLoop_X0 := 0;
stInitData.ModelParameters.AvoidAlgebraicLoop_X0_k := 0;
stInitData.ModelParameters.PreventAlgebraicLoop_X0_h := 0;
stInitData.ModelParameters.PreventAlgebraicLoop_X0_o := 0;
stInitData.ModelParameters.AvoidAlgebraicLoop_X0_l := 0;
stInitData.ModelParameters.AvoidAlgebraicLoop_X0_b := 0;
stInitData.ModelParameters.Constant_Value_h := 0;
stInitData.ModelParameters.Memory_X0_n := 0;
stInitData.ModelParameters.Constant_Value_lx := 0;
stInitData.ModelParameters.Constant_Value_hx := 0;
stInitData.ModelParameters.Logic_table[0] := 0;
stInitData.ModelParameters.Logic_table[1] := 1;
stInitData.ModelParameters.Logic_table[2] := 0;
stInitData.ModelParameters.Logic_table[3] := 0;
stInitData.ModelParameters.Logic_table[4] := 1;
stInitData.ModelParameters.Logic_table[5] := 1;
stInitData.ModelParameters.Logic_table[6] := 0;
stInitData.ModelParameters.Logic_table[7] := 0;
stInitData.ModelParameters.Logic_table[8] := 1;
stInitData.ModelParameters.Logic_table[9] := 0;
stInitData.ModelParameters.Logic_table[10] := 1;
stInitData.ModelParameters.Logic_table[11] := 1;
stInitData.ModelParameters.Logic_table[12] := 0;
stInitData.ModelParameters.Logic_table[13] := 0;
stInitData.ModelParameters.Logic_table[14] := 0;
stInitData.ModelParameters.Logic_table[15] := 0;
stInitData.ModelParameters.Memory1_X0_p := 0;
stInitData.ModelParameters.Constant_Value_gf := 0;
stInitData.ModelParameters.Memory_X0_k := 0;
stInitData.ModelParameters.Constant_Value_cq := 0;
stInitData.ModelParameters.Constant_Value_i := 0;
stInitData.ModelParameters.Logic_table_h[0] := 0;
stInitData.ModelParameters.Logic_table_h[1] := 1;
stInitData.ModelParameters.Logic_table_h[2] := 0;
stInitData.ModelParameters.Logic_table_h[3] := 0;
stInitData.ModelParameters.Logic_table_h[4] := 1;
stInitData.ModelParameters.Logic_table_h[5] := 1;
stInitData.ModelParameters.Logic_table_h[6] := 0;
stInitData.ModelParameters.Logic_table_h[7] := 0;
stInitData.ModelParameters.Logic_table_h[8] := 1;
stInitData.ModelParameters.Logic_table_h[9] := 0;
stInitData.ModelParameters.Logic_table_h[10] := 1;
stInitData.ModelParameters.Logic_table_h[11] := 1;
stInitData.ModelParameters.Logic_table_h[12] := 0;
stInitData.ModelParameters.Logic_table_h[13] := 0;
stInitData.ModelParameters.Logic_table_h[14] := 0;
stInitData.ModelParameters.Logic_table_h[15] := 0;
stInitData.ModelParameters.Connected_Value := 0;
stInitData.ModelParameters.Memory1_X0_pr := 0;
stInitData.ModelParameters.Constant_Value_cx := 0;
stInitData.ModelParameters.Memory_X0_nw := 0;
stInitData.ModelParameters.Constant_Value_k := 0;
stInitData.ModelParameters.Constant_Value_oq := 0;
stInitData.ModelParameters.Logic_table_f[0] := 0;
stInitData.ModelParameters.Logic_table_f[1] := 1;
stInitData.ModelParameters.Logic_table_f[2] := 0;
stInitData.ModelParameters.Logic_table_f[3] := 0;
stInitData.ModelParameters.Logic_table_f[4] := 1;
stInitData.ModelParameters.Logic_table_f[5] := 1;
stInitData.ModelParameters.Logic_table_f[6] := 0;
stInitData.ModelParameters.Logic_table_f[7] := 0;
stInitData.ModelParameters.Logic_table_f[8] := 1;
stInitData.ModelParameters.Logic_table_f[9] := 0;
stInitData.ModelParameters.Logic_table_f[10] := 1;
stInitData.ModelParameters.Logic_table_f[11] := 1;
stInitData.ModelParameters.Logic_table_f[12] := 0;
stInitData.ModelParameters.Logic_table_f[13] := 0;
stInitData.ModelParameters.Logic_table_f[14] := 0;
stInitData.ModelParameters.Logic_table_f[15] := 0;
stInitData.ModelParameters.Memory1_X0_i := 0;
stInitData.ModelParameters.Constant_Value_ky := 0;
stInitData.ModelParameters.Memory_X0_p := 0;
stInitData.ModelParameters.Constant_Value_kl := 0;
stInitData.ModelParameters.Constant_Value_m5 := 0;
stInitData.ModelParameters.Logic_table_i[0] := 0;
stInitData.ModelParameters.Logic_table_i[1] := 1;
stInitData.ModelParameters.Logic_table_i[2] := 0;
stInitData.ModelParameters.Logic_table_i[3] := 0;
stInitData.ModelParameters.Logic_table_i[4] := 1;
stInitData.ModelParameters.Logic_table_i[5] := 1;
stInitData.ModelParameters.Logic_table_i[6] := 0;
stInitData.ModelParameters.Logic_table_i[7] := 0;
stInitData.ModelParameters.Logic_table_i[8] := 1;
stInitData.ModelParameters.Logic_table_i[9] := 0;
stInitData.ModelParameters.Logic_table_i[10] := 1;
stInitData.ModelParameters.Logic_table_i[11] := 1;
stInitData.ModelParameters.Logic_table_i[12] := 0;
stInitData.ModelParameters.Logic_table_i[13] := 0;
stInitData.ModelParameters.Logic_table_i[14] := 0;
stInitData.ModelParameters.Logic_table_i[15] := 0;
stInitData.ModelParameters.Memory_X0_i := 0;
stInitData.ModelParameters.Memory_X0_h := 0;
stInitData.ModelParameters.Memory_X0_pu := 0;
stInitData.ModelParameters.Memory_X0_j := 0;
stInitData.ModelParameters.Memory_X0_l := 0;
stInitData.ModelParameters.Constant_Value_hh := 0;
stInitData.ModelParameters.Logic_table_f1[0] := 0;
stInitData.ModelParameters.Logic_table_f1[1] := 1;
stInitData.ModelParameters.Logic_table_f1[2] := 0;
stInitData.ModelParameters.Logic_table_f1[3] := 0;
stInitData.ModelParameters.Logic_table_f1[4] := 1;
stInitData.ModelParameters.Logic_table_f1[5] := 1;
stInitData.ModelParameters.Logic_table_f1[6] := 0;
stInitData.ModelParameters.Logic_table_f1[7] := 0;
stInitData.ModelParameters.Logic_table_f1[8] := 1;
stInitData.ModelParameters.Logic_table_f1[9] := 0;
stInitData.ModelParameters.Logic_table_f1[10] := 1;
stInitData.ModelParameters.Logic_table_f1[11] := 1;
stInitData.ModelParameters.Logic_table_f1[12] := 0;
stInitData.ModelParameters.Logic_table_f1[13] := 0;
stInitData.ModelParameters.Logic_table_f1[14] := 0;
stInitData.ModelParameters.Logic_table_f1[15] := 0;
stInitData.ModelParameters.LatchRising_d.Out_Y0 := 0;
stInitData.ModelParameters.LatchRising_m.Out_Y0 := 0;
stInitData.ModelParameters.run_c.x_ref_Y0[0] := 0;
stInitData.ModelParameters.run_c.x_ref_Y0[1] := 0;
stInitData.ModelParameters.run_c.xdot_ref_Y0[0] := 0;
stInitData.ModelParameters.run_c.xdot_ref_Y0[1] := 0;
stInitData.ModelParameters.run_c.xddot_ref_Y0[0] := 0;
stInitData.ModelParameters.run_c.xddot_ref_Y0[1] := 0;
stInitData.ModelParameters.athome_g.WrapToZero_Threshold := -1;
stInitData.ModelParameters.athome_g.Memory1_X0 := 0;
stInitData.ModelParameters.athome_g.x_ref_Y0[0] := 0;
stInitData.ModelParameters.athome_g.x_ref_Y0[1] := 0;
stInitData.ModelParameters.athome_g.xdot_ref_Y0[0] := 0;
stInitData.ModelParameters.athome_g.xdot_ref_Y0[1] := 0;
stInitData.ModelParameters.athome_g.xddot_ref_Y0[0] := 0;
stInitData.ModelParameters.athome_g.xddot_ref_Y0[1] := 0;
stInitData.ModelParameters.athome_g.Constant_Value := 1;
stInitData.ModelParameters.athome_g.Constant2_Value[0] := 0;
stInitData.ModelParameters.athome_g.Constant2_Value[1] := 0;
stInitData.ModelParameters.athome_g.Constant4_Value[0] := 0;
stInitData.ModelParameters.athome_g.Constant4_Value[1] := 0;
stInitData.ModelParameters.athome_g.FixPtConstant_Value := 1;
stInitData.ModelParameters.athome_g.Output_InitialCondition := 0;
stInitData.ModelParameters.athome_g.Constant_Value_h := 0;
stInitData.ModelParameters.athome_g.Switch_Threshold := 1;
stInitData.ModelParameters.homingactive_d.x_ref_Y0[0] := 0;
stInitData.ModelParameters.homingactive_d.x_ref_Y0[1] := 0;
stInitData.ModelParameters.homingactive_d.xdot_ref_Y0[0] := 0;
stInitData.ModelParameters.homingactive_d.xdot_ref_Y0[1] := 0;
stInitData.ModelParameters.homingactive_d.xddot_ref_Y0[0] := 0;
stInitData.ModelParameters.homingactive_d.xddot_ref_Y0[1] := 0;
stInitData.ModelParameters.homingactive_d.Constant1_Value := 1;
stInitData.ModelParameters.homingactive_d.One_Value := 1;
stInitData.ModelParameters.homingactive_d.RateLimiter_RisingLim := 0.0001;
stInitData.ModelParameters.homingactive_d.RateLimiter_FallingLim := -0.0002;
stInitData.ModelParameters.homingactive_d.RateLimiter_IC := 0;
stInitData.ModelParameters.homingactive_d.Saturation_UpperSat := 1;
stInitData.ModelParameters.homingactive_d.Saturation_LowerSat := 0;
stInitData.ModelParameters.homingactive_d.Gain1_Gain := 6.283185307179586;
stInitData.ModelParameters.homingactive_d.Gain2_Gain := 0.1591549430918953;
stInitData.ModelParameters.homingactive_d.Saturation_UpperSat_h := 1;
stInitData.ModelParameters.homingactive_d.Saturation_LowerSat_d := 0;
stInitData.ModelParameters.homingactive_d.Constant2_Value[0] := 0;
stInitData.ModelParameters.homingactive_d.Constant2_Value[1] := 0;
stInitData.ModelParameters.homingactive_d.Constant4_Value[0] := 0;
stInitData.ModelParameters.homingactive_d.Constant4_Value[1] := 0;
stInitData.ModelParameters.LatchRising_c.Out_Y0 := 0;
stInitData.ModelParameters.LatchRising_b.Out_Y0 := 0;
stInitData.ModelParameters.run.x_ref_Y0[0] := 0;
stInitData.ModelParameters.run.x_ref_Y0[1] := 0;
stInitData.ModelParameters.run.xdot_ref_Y0[0] := 0;
stInitData.ModelParameters.run.xdot_ref_Y0[1] := 0;
stInitData.ModelParameters.run.xddot_ref_Y0[0] := 0;
stInitData.ModelParameters.run.xddot_ref_Y0[1] := 0;
stInitData.ModelParameters.athome.WrapToZero_Threshold := -1;
stInitData.ModelParameters.athome.Memory1_X0 := 0;
stInitData.ModelParameters.athome.x_ref_Y0[0] := 0;
stInitData.ModelParameters.athome.x_ref_Y0[1] := 0;
stInitData.ModelParameters.athome.xdot_ref_Y0[0] := 0;
stInitData.ModelParameters.athome.xdot_ref_Y0[1] := 0;
stInitData.ModelParameters.athome.xddot_ref_Y0[0] := 0;
stInitData.ModelParameters.athome.xddot_ref_Y0[1] := 0;
stInitData.ModelParameters.athome.Constant_Value := 1;
stInitData.ModelParameters.athome.Constant2_Value[0] := 0;
stInitData.ModelParameters.athome.Constant2_Value[1] := 0;
stInitData.ModelParameters.athome.Constant4_Value[0] := 0;
stInitData.ModelParameters.athome.Constant4_Value[1] := 0;
stInitData.ModelParameters.athome.FixPtConstant_Value := 1;
stInitData.ModelParameters.athome.Output_InitialCondition := 0;
stInitData.ModelParameters.athome.Constant_Value_h := 0;
stInitData.ModelParameters.athome.Switch_Threshold := 1;
stInitData.ModelParameters.homingactive.x_ref_Y0[0] := 0;
stInitData.ModelParameters.homingactive.x_ref_Y0[1] := 0;
stInitData.ModelParameters.homingactive.xdot_ref_Y0[0] := 0;
stInitData.ModelParameters.homingactive.xdot_ref_Y0[1] := 0;
stInitData.ModelParameters.homingactive.xddot_ref_Y0[0] := 0;
stInitData.ModelParameters.homingactive.xddot_ref_Y0[1] := 0;
stInitData.ModelParameters.homingactive.Constant1_Value := 1;
stInitData.ModelParameters.homingactive.One_Value := 1;
stInitData.ModelParameters.homingactive.RateLimiter_RisingLim := 0.0001;
stInitData.ModelParameters.homingactive.RateLimiter_FallingLim := -0.0002;
stInitData.ModelParameters.homingactive.RateLimiter_IC := 0;
stInitData.ModelParameters.homingactive.Saturation_UpperSat := 1;
stInitData.ModelParameters.homingactive.Saturation_LowerSat := 0;
stInitData.ModelParameters.homingactive.Gain1_Gain := 6.283185307179586;
stInitData.ModelParameters.homingactive.Gain2_Gain := 0.1591549430918953;
stInitData.ModelParameters.homingactive.Saturation_UpperSat_h := 1;
stInitData.ModelParameters.homingactive.Saturation_LowerSat_d := 0;
stInitData.ModelParameters.homingactive.Constant2_Value[0] := 0;
stInitData.ModelParameters.homingactive.Constant2_Value[1] := 0;
stInitData.ModelParameters.homingactive.Constant4_Value[0] := 0;
stInitData.ModelParameters.homingactive.Constant4_Value[1] := 0;
stInitData.ModelParameters.HoldFirstSampleOnEnable_e.WrapToZero_Threshold := -1;
stInitData.ModelParameters.HoldFirstSampleOnEnable_e.Memory1_X0 := 0;
stInitData.ModelParameters.HoldFirstSampleOnEnable_e.Output_InitialCondition := 0;
stInitData.ModelParameters.HoldFirstSampleOnEnable_e.Switch_Threshold := 1;
stInitData.ModelParameters.HoldFirstSampleOnEnable_e.FixPtConstant_Value := 1;
stInitData.ModelParameters.HoldFirstSampleOnEnable_e.Constant_Value := 0;
stInitData.ModelParameters.HoldFirstSampleOnEnable.WrapToZero_Threshold := -1;
stInitData.ModelParameters.HoldFirstSampleOnEnable.Memory1_X0 := 0;
stInitData.ModelParameters.HoldFirstSampleOnEnable.Output_InitialCondition := 0;
stInitData.ModelParameters.HoldFirstSampleOnEnable.Switch_Threshold := 1;
stInitData.ModelParameters.HoldFirstSampleOnEnable.FixPtConstant_Value := 1;
stInitData.ModelParameters.HoldFirstSampleOnEnable.Constant_Value := 0;
stInitData.ContextInfoArr_0_TaskOidHdr.indexGroup := 0;
stInitData.ContextInfoArr_0_TaskOidHdr.indexOffset := 16#03002060;
stInitData.ContextInfoArr_0_TaskOidHdr.cbData := SIZEOF(stInitData.ContextInfoArr_0_TaskOid);
stInitData.ContextInfoArr_0_TaskPriorityHdr.indexGroup := 0;
stInitData.ContextInfoArr_0_TaskPriorityHdr.indexOffset := 16#03002070;
stInitData.ContextInfoArr_0_TaskPriorityHdr.cbData := SIZEOF(stInitData.ContextInfoArr_0_TaskPriority);
stInitData.ContextInfoArr_0_TaskCycleTimeNsHdr.indexGroup := 0;
stInitData.ContextInfoArr_0_TaskCycleTimeNsHdr.indexOffset := 16#03002080;
stInitData.ContextInfoArr_0_TaskCycleTimeNsHdr.cbData := SIZEOF(stInitData.ContextInfoArr_0_TaskCycleTimeNs);
stInitData.ContextInfoArr_0_TaskPortHdr.indexGroup := 0;
stInitData.ContextInfoArr_0_TaskPortHdr.indexOffset := 16#03002090;
stInitData.ContextInfoArr_0_TaskPortHdr.cbData := SIZEOF(stInitData.ContextInfoArr_0_TaskPort);
stInitData.ContextInfoArr_0_TaskSortOrderHdr.indexGroup := 0;
stInitData.ContextInfoArr_0_TaskSortOrderHdr.indexOffset := 16#030020b0;
stInitData.ContextInfoArr_0_TaskSortOrderHdr.cbData := SIZEOF(stInitData.ContextInfoArr_0_TaskSortOrder);
stInitData.Header.cbData := SIZEOF(stInitData)-SIZEOF(stInitData.Header);
stInitData.Header.uiElmCnt := 12;


// set pointer to InitData structure
SetInitDataInfo(ADR(stInitData));

// set DataArea information
SetDataAreaInfo(ADR(arrDataAreas),2);
arrDataAreas[1].nDataAreaId := 0;
arrDataAreas[1].nSize := SIZEOF(stInput);
arrDataAreas[1].pPlcVar := ADR(stInput);
arrDataAreas[1].pModuleProcImg := 0;
arrDataAreas[1].eDataAreaType := E_TcMatSimDataAreaType.InputDst;
arrDataAreas[2].nDataAreaId := 1;
arrDataAreas[2].nSize := SIZEOF(stOutput);
arrDataAreas[2].pPlcVar := ADR(stOutput);
arrDataAreas[2].pModuleProcImg := 0;
arrDataAreas[2].eDataAreaType := E_TcMatSimDataAreaType.OutputSrc;


// initialize basic interface pointers and return
FB_init := SUCCEEDED(Init(oid));
                  </xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="Execute">
              <interface>
                <returnType>
                  <derived name="HRESULT" />
                </returnType>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (SUCCEEDED(hResult)) THEN
  hResult := VerifyParameters();
END_IF

	// update DataArea information
SetDataAreaInfo(ADR(arrDataAreas),2);
	
	// call base method
Execute := SUPER^.Execute();
                  </xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="VerifyParameters">
              <interface>
                <returnType>
                  <derived name="HRESULT"/>
                </returnType>
                <localVars>
                  <variable name="moduleCallByParam">
                    <type>
                      <derived name="TctModuleCallByType"/>
                    </type>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true"/>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="object_name" Value="VerifyParameters"/>
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF (bParametersVerified) THEN
  VerifyParameters := Tc2_System.E_HRESULTAdsErr.HRESULT_ADS_NOERROR;
ELSE
  VerifyParameters := GetObjPara(stInitData.CallByHdr.indexOffset,SIZEOF(moduleCallByParam),ADR(moduleCallByParam));
  
  // check the "CallBy" parameter to be set to "Module"
  IF (SUCCEEDED(VerifyParameters) AND (moduleCallByParam &lt;&gt; TctModuleCallByType.Module)) THEN
      VerifyParameters := Tc2_System.E_HRESULTAdsErr.INVALIDPARM;
  END_IF
  
  // set the parameters verified flag
  bParametersVerified := SUCCEEDED(VerifyParameters);
END_IF
                  </xhtml>
                </ST>
              </body>
              <addData/>
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="InitData">
              <interface>
                <returnType>
                  <derived name="ST_ModelBROSMattia_InitData" />
                </returnType>
              </interface>
              <SetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                      <Attributes>
                        <Attribute Name="hide" Value="" />
                      </Attributes>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">stInitData := InitData;</xhtml>
                  </ST>
                </body>
                <addData />
              </SetAccessor>
              <GetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                      <Attributes>
                        <Attribute Name="hide" Value="" />
                      </Attributes>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">InitData := stInitData;</xhtml>
                  </ST>
                </body>
                <addData />
              </GetAccessor>
              <addData />
            </Property>
          </data>
        </addData>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations />
  </instances>
</project>
